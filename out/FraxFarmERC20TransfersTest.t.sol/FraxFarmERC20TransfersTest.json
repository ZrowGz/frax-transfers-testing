{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "alice",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "bob",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "compliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexBooster",
      "outputs": [
        {
          "internalType": "contract Booster",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexFeeRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexFraxVoterProxy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexOperator",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "convexPoolRegistry",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "curveLpMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxStkFrxEthLp",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cvxfrxEthFrxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fraxAdmin",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fraxToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxETHCRV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEth",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxEthMinter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxFamilyGauge",
      "outputs": [
        {
          "internalType": "contract FraxFamilialPitchGauge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "frxFarm",
      "outputs": [
        {
          "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsDistributor",
      "outputs": [
        {
          "internalType": "contract FraxGaugeFXSRewardsDistributor",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fxsWhale",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "gaugeController",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonCompliantVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nonTransferrableGaugeTVL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverOwner",
      "outputs": [
        {
          "internalType": "contract MockVaultOwner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "receiverVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardManager",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "rewardToken",
      "outputs": [
        {
          "internalType": "contract MockERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderOwner",
      "outputs": [
        {
          "internalType": "contract MockVaultOwner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "senderVault",
      "outputs": [
        {
          "internalType": "contract StakingProxyConvex",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testEnd2End",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "transferrableGaugeTVL",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultImpl",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultOwner",
      "outputs": [
        {
          "internalType": "contract MockVaultOwner",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vaultRewardsAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1504:33475:22:-:0;;;;;;;1594:4:0;1504:33475:22;;1594:4:0;1504:33475:22;;;1594:4:0;1504:33475:22;5120:42;1504:33475;;;;;;1913:42;1504:33475;1913:42;1504:33475;;;1913:42;1504:33475;1988:42;1504:33475;1988:42;1504:33475;;;1988:42;1504:33475;2104:42;1504:33475;2096:51;1504:33475;;;2096:51;1504:33475;2185:42;1504:33475;2185:42;1504:33475;;;2185:42;1504:33475;2347:42;1504:33475;2322:68;1504:33475;;;2322:68;1504:33475;2453:42;1504:33475;2445:51;1504:33475;;;2445:51;1504:33475;2547:42;1504:33475;2539:51;1504:33475;;;2539:51;1504:33475;2634:42;1504:33475;2626:51;1504:33475;;;2626:51;1504:33475;2723:42;1504:33475;2715:51;1504:33475;;;2715:51;1504:33475;2858:42;1504:33475;2827:74;1504:33475;;;2827:74;1504:33475;2971:42;1504:33475;2963:51;1504:33475;;;2963:51;1504:33475;3059:42;1504:33475;;3051:51;1504:33475;;;3051:51;1504:33475;;3136:51;1504:33475;;;3136:51;1504:33475;3272:42;1504:33475;3264:51;1504:33475;;;3264:51;1504:33475;3383:42;1504:33475;3375:51;1504:33475;;;3375:51;1504:33475;3537:42;1504:33475;3529:51;1504:33475;;;3529:51;1504:33475;3629:42;1504:33475;3621:51;1504:33475;;;3621:51;1504:33475;3897:42;1504:33475;3891:49;1504:33475;;;3891:49;1504:33475;4049:42;1504:33475;4038:54;1504:33475;;;4038:54;1504:33475;4133:42;1504:33475;4127:49;1504:33475;;;4127:49;1504:33475;4285:42;1504:33475;4274:54;1504:33475;;;4274:54;1504:33475;4438:42;1504:33475;4430:51;1504:33475;;;4430:51;1504:33475;4515:42;1504:33475;4515:42;1504:33475;;;4515:42;1504:33475;4605:42;1504:33475;4597:51;1504:33475;;;4597:51;1504:33475;4695:42;1504:33475;4687:51;1504:33475;;;4687:51;1504:33475;5112:51;1504:33475;;;5112:51;1504:33475;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60808060405260043610156200001457600080fd5b600090813560e01c90816309dacc041462005506575080630a9254e414620034555780630ac0304f14620034015780630d199eaa14620033ae5780630f4ef8a6146200335a578063185a8d731462000d415780631895c4a71462000ced5780631f52692b1462000c995780632cdacb501462000c455780632ebe98691462000bf157806331f4f95c1462000b9d5780633fb847b31462000b495780634676077e1462000af557806355c287521462000aa1578063663eeb3d1462000a4d57806366843cba14620009f95780636f539c2e14620009a55780636fa8936414620009515780637495ce1114620008fd57806376729f2614620008bf5780638194fb9714620008815780638c1eda2b146200082d5780638e8f4a9d14620007d9578063903ee26c146200078557806394112dba146200073157806399eecb3b14620006dd5780639bb2eb2b1462000689578063a45b686a1462000635578063a841a0a814620005e1578063a8848cda146200058d578063ba414fa61462000546578063c09cec7714620004f2578063c2919040146200049e578063d2f4b0ca146200044a578063d558358d14620003f6578063ddf42c0d14620003a2578063e40b5339146200034e578063ec1e31a014620002fa578063f7c618c114620002a6578063fa7626d414620002645763fb47e3a2146200020e57600080fd5b346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60175416604051908152f35b80fd5b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112620002615760ff60209154166040519015158152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60155416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60305416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60145416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff602d5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff602b5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60295416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff602a5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60185416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112620002615760206200058362005698565b6040519015158152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff602c5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff603c5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60315416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60195416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60235416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60335416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60255416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60135416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60125416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011262000261576020603b54604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011262000261576020603a54604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff601e5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff601d5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff602e5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff601f5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff601b5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60275416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff602f5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff601a5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff601c5416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60285416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60265416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60165416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60215416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157604051610360810181811067ffffffffffffffff8211176200314857604052606081528160208201528160408201528160608201528160808201528160a08201528160c08201528160e08201528161010082015281610120820152816101408201528161016082015281610180820152816101a0820152816101c0820152816101e08201528161020082015281610220820152816102408201528161026082015281610280820152816102a0820152816102c0820152816102e08201528161030082015281610320820152678ac7230489e800006103408201528173ffffffffffffffffffffffffffffffffffffffff602b5416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620029b457604051907f06447d560000000000000000000000000000000000000000000000000000000082526004820152818160248183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762003342575b505073ffffffffffffffffffffffffffffffffffffffff60205416604051907f5bcb2fc60000000000000000000000000000000000000000000000000000000060208301526004825281604081011067ffffffffffffffff6040840111176200314857818492916040849301604052683635c9adc5dea00000602083519301915af15062000f6562005649565b50818073ffffffffffffffffffffffffffffffffffffffff6019541673ffffffffffffffffffffffffffffffffffffffff602b54168260405160208101927f70a0823100000000000000000000000000000000000000000000000000000000845260248201526024815262000fda816200558a565b51925af15062000fe962005649565b808252602081805181010312620027f0576020015180602083015260405162001012816200556d565b601a81527f696e76616c6964206d696e7420616d6f756e742066727845544800000000000060208201526835ab028ac154b8000082109081620031ad575b50505081602073ffffffffffffffffffffffffffffffffffffffff60195416604473ffffffffffffffffffffffffffffffffffffffff601e541660405194859384927f095ea7b300000000000000000000000000000000000000000000000000000000845260048401527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60248401525af18015620027fe5762003177575b5073ffffffffffffffffffffffffffffffffffffffff601e54166040519081604081011067ffffffffffffffff604084011117620031485760408083018152848352683635c9adc5dea000006020840152517f0b4c7e4d000000000000000000000000000000000000000000000000000000008152918290859081600484015b600282106200312b57505050816064916020946835ab028ac154b8000060448401525af18015620027fe57620030fa575b5073ffffffffffffffffffffffffffffffffffffffff601a5416602073ffffffffffffffffffffffffffffffffffffffff602b54166024604051809481937f70a0823100000000000000000000000000000000000000000000000000000000835260048301525afa908115620027fe578391620030c2575b508060208301526040516200122d816200558a565b602581527f696e76616c6964206d696e696d756d206d696e7420616d6f756e74206672784560208201527f544843525600000000000000000000000000000000000000000000000000000060408201526835ab028ac154b80000821115908162002f2d575b5050508173ffffffffffffffffffffffffffffffffffffffff601d541673ffffffffffffffffffffffffffffffffffffffff602a5416906040517fca6df29d000000000000000000000000000000000000000000000000000000008152826004820152602081602481855afa9081156200284157849162002eef575b506024916020916040870152604051928380927fd9f96e8d0000000000000000000000000000000000000000000000000000000082528660048301525afa908115620027fe57839162002eb1575b509060209160608501526044604051809481937fa41ce7e90000000000000000000000000000000000000000000000000000000083526835ab028ac154b80000600484015263018b820060248401525af1908115620027fe57839162002e79575b5061018082015273ffffffffffffffffffffffffffffffffffffffff601d5416602073ffffffffffffffffffffffffffffffffffffffff602a54166024604051809481937fca6df29d00000000000000000000000000000000000000000000000000000000835260048301525afa908115620027fe57839162002e41575b5080608083015260408201519060018201821162002bdf5790620014c2916001604051926200146a846200558a565b602284527f73656e6465722073686f756c642068617665206e6577204c6f636b656453746160208501527f6b650000000000000000000000000000000000000000000000000000000000006040850152019062005a1f565b73ffffffffffffffffffffffffffffffffffffffff601d5416602073ffffffffffffffffffffffffffffffffffffffff602a54166024604051809481937fd9f96e8d00000000000000000000000000000000000000000000000000000000835260048301525afa908115620027fe57839162002e09575b5060a08201526200154962005c9f565b73ffffffffffffffffffffffffffffffffffffffff601d54168273ffffffffffffffffffffffffffffffffffffffff602c54166040517fca6df29d000000000000000000000000000000000000000000000000000000008152816004820152602081602481875afa908115620027fe57839162002dce575b50610120850152604051907fd9f96e8d0000000000000000000000000000000000000000000000000000000082526004820152602081602481865afa908115620027b357829162002d93575b5091819260c0850152602473ffffffffffffffffffffffffffffffffffffffff602a541660405194859384927fc00007b000000000000000000000000000000000000000000000000000000000845260048401525af18015620027fe5762002ca2575b5073ffffffffffffffffffffffffffffffffffffffff602a5416604073ffffffffffffffffffffffffffffffffffffffff602c541660a4610180850151918661034087015195855196879586947f78aae1cb0000000000000000000000000000000000000000000000000000000086526004860152602485015260448401528160648401528160848401525af1908115620027fe57839162002c7c575b506101a082015273ffffffffffffffffffffffffffffffffffffffff601d541673ffffffffffffffffffffffffffffffffffffffff602a5416604051907fca6df29d0000000000000000000000000000000000000000000000000000000082526004820152602081602481855afa9081156200284157849162002c44575b5060e0830152602073ffffffffffffffffffffffffffffffffffffffff602c54166024604051809481937fca6df29d00000000000000000000000000000000000000000000000000000000835260048301525afa908115620027fe57839162002c0c575b506101408201526200184360e082015160808301516040519162001813836200556d565b601f83527f73656e6465722073686f756c6420686176652073616d652023206c6f636b7300602084015262005a1f565b6101408101516101208201519060018201821162002bdf5790620018a49160016040519262001872846200556d565b602084527f72656365697665722073686f756c6420686176652031206d6f7265206c6f636b6020850152019062005a1f565b73ffffffffffffffffffffffffffffffffffffffff601d541673ffffffffffffffffffffffffffffffffffffffff602a5416604051907fd9f96e8d0000000000000000000000000000000000000000000000000000000082526004820152602081602481855afa9081156200284157849162002ba7575b50610200830152602073ffffffffffffffffffffffffffffffffffffffff602c54166024604051809481937fd9f96e8d00000000000000000000000000000000000000000000000000000000835260048301525afa908115620027fe57839162002b6f575b50610260820152620019e6610200820151620019a760a084015161034085015190620059ca565b60405191620019b6836200556d565b601d83527f73656e6465722073686f756c64206861766520393830206c6f636b6564000000602084015262005a1f565b62001a4561026082015162001a0660c084015161034085015190620059a5565b6040519162001a15836200556d565b601e83527f72656365697665722073686f756c642068617665203130206c6f636b65640000602084015262005a1f565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620029b457816040517ff4844814000000000000000000000000000000000000000000000000000000008152818160048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762002b57575b505073ffffffffffffffffffffffffffffffffffffffff602a5416604073ffffffffffffffffffffffffffffffffffffffff602c541660a4610180850151918661034087015195855196879586947f78aae1cb00000000000000000000000000000000000000000000000000000000865260048601526024850152604484015260016064840152604560848401525af18015620027fe5762002b34575b5062001b5a62005c9f565b73ffffffffffffffffffffffffffffffffffffffff601d5416602073ffffffffffffffffffffffffffffffffffffffff602c54166024604051809481937fca6df29d00000000000000000000000000000000000000000000000000000000835260048301525afa8015620027fe57839062002af9575b62001c4191506101408301516040519162001beb836200558a565b602c83527f72656365697665722073686f756c64207374696c6c20686176652073616d652060208401527f6e756d626572206c6f636b730000000000000000000000000000000000000000604084015262005a1f565b73ffffffffffffffffffffffffffffffffffffffff601d5416602073ffffffffffffffffffffffffffffffffffffffff602a54166024604051809481937fca6df29d00000000000000000000000000000000000000000000000000000000835260048301525afa8015620027fe57839062002abe575b62001d27915060e08301516040519162001cd1836200558a565b602a83527f73656e6465722073686f756c64207374696c6c20686176652073616d65206e7560208401527f6d626572206c6f636b7300000000000000000000000000000000000000000000604084015262005a1f565b602a54602c546101808301516103408401516101a0850151604080517f78aae1cb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff95861660048201526024810194909452604484019290925260016064840152608483015290929091839160a49183918891165af1908115620027fe57839162002a98575b506101c082015273ffffffffffffffffffffffffffffffffffffffff601d541673ffffffffffffffffffffffffffffffffffffffff602a5416604051907fca6df29d0000000000000000000000000000000000000000000000000000000082526004820152602081602481855afa9081156200284157849162002a60575b50610100830152602073ffffffffffffffffffffffffffffffffffffffff602c54166024604051809481937fca6df29d00000000000000000000000000000000000000000000000000000000835260048301525afa908115620027fe57839162002a28575b5061016082015262001f1d61010082015160e08301516040519162001ec7836200558a565b602183527f53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b60208401527f7300000000000000000000000000000000000000000000000000000000000000604084015262005a1f565b62001f926101608201516101408301516040519162001f3c836200558a565b602383527f52656365697665722073686f756c6420686176652073616d65206e756d206c6f60208401527f636b730000000000000000000000000000000000000000000000000000000000604084015262005a1f565b73ffffffffffffffffffffffffffffffffffffffff601d541673ffffffffffffffffffffffffffffffffffffffff602a5416604051907fd9f96e8d0000000000000000000000000000000000000000000000000000000082526004820152602081602481855afa90811562002841578491620029f0575b50610220830152602073ffffffffffffffffffffffffffffffffffffffff602c54166024604051809481937fd9f96e8d00000000000000000000000000000000000000000000000000000000835260048301525afa908115620027fe578391620029b8575b50610280820152620020d56102208201516200209661020084015161034085015190620059ca565b60405191620020a5836200556d565b601d83527f73656e6465722073686f756c64206861766520393730206c6f636b6564000000602084015262005a1f565b62002135610280820151620020f661026084015161034085015190620059a5565b6040519162002105836200556d565b601e83527f72656365697665722073686f756c642068617665203230206c6f636b65640000602084015262005a1f565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620029b457816040517ff4844814000000000000000000000000000000000000000000000000000000008152818160048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b3576200299c575b505073ffffffffffffffffffffffffffffffffffffffff602a5416604073ffffffffffffffffffffffffffffffffffffffff6018541660a46101808501519186845195869485937f78aae1cb00000000000000000000000000000000000000000000000000000000855260048501526024840152678ac7230489e8000060448401528160648401528160848401525af18015620027fe5762002979575b50621a5e00420142116200294a57737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620027f0576040517fe5d6bf02000000000000000000000000000000000000000000000000000000008152621a5e004201600482015260008160248183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af180156200293e576200292c575b506200232e604051620022d8816200558a565b602381527f534b49502046415220414845414420544f204e4557205245574152442050455260208201527f494f44000000000000000000000000000000000000000000000000000000000060408201526200591b565b73ffffffffffffffffffffffffffffffffffffffff601d541673ffffffffffffffffffffffffffffffffffffffff602a54166040517fca6df29d000000000000000000000000000000000000000000000000000000008152816004820152602081602481865afa908115620028e9578591620028f4575b506102408401526024602073ffffffffffffffffffffffffffffffffffffffff602c541693604051928380927fca6df29d0000000000000000000000000000000000000000000000000000000082528760048301525afa908115620028e9578591620028b1575b506102a0840152610180830151906200242f60a0850151606086015190620059ca565b6103408501517f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116810362002884576040939291620024739160011b90620059ca565b6101c086015184517f78aae1cb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff96909616600487015260248601939093526044850152600160648501526084840191909152829060a490829087905af1908115620027fe5783916200284c575b506101e082015273ffffffffffffffffffffffffffffffffffffffff601d54169073ffffffffffffffffffffffffffffffffffffffff602a5416604051907fd9f96e8d0000000000000000000000000000000000000000000000000000000082526004820152602081602481865afa9081156200284157849162002809575b506102c0820152602073ffffffffffffffffffffffffffffffffffffffff602c54166024604051809581937fd9f96e8d00000000000000000000000000000000000000000000000000000000835260048301525afa8015620027fe578390620027be575b620026e892506102e0820152620026566102c082015160608301516040519162002600836200558a565b603d83527f616c6c206f662073656e6465722773206c6f636b6564206c697175696469747960208401527f2073686f756c64206265206261636b20746f2062617365206c6576656c000000604084015262005a1f565b620026836102e0820151916200267c60c082015191606060a082015191015190620059ca565b90620059a5565b6040519162002692836200558a565b602b83527f72656365697665722073686f756c64206861766520616c6c206f662073656e6460208401527f65722773206c6f636b6564000000000000000000000000000000000000000000604084015262005a1f565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200026157806040517f90c5013b000000000000000000000000000000000000000000000000000000008152818160048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b3576200279b575b506200279860405162002768816200556d565b601181527f453245205465737420537563636573732100000000000000000000000000000060208201526200591b565b80f35b620027a69062005558565b6200026157803862002755565b6040513d84823e3d90fd5b506020823d602011620027f5575b81620027db60209383620055a7565b81010312620027f057620026e89151620025d6565b600080fd5b3d9150620027cc565b6040513d85823e3d90fd5b90506020813d60201162002838575b816200282760209383620055a7565b81010312620027f057513862002572565b3d915062002818565b6040513d86823e3d90fd5b62002873915060403d6040116200287c575b6200286a8183620055a7565b810190620059b3565b905038620024f3565b503d6200285e565b6024877f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b90506020813d602011620028e0575b81620028cf60209383620055a7565b81010312620027f05751386200240c565b3d9150620028c0565b6040513d87823e3d90fd5b90506020813d60201162002923575b816200291260209383620055a7565b81010312620027f0575138620023a5565b3d915062002903565b620029379062005558565b38620022c5565b6040513d6000823e3d90fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b620029959060403d6040116200287c576200286a8183620055a7565b506200223f565b620029a79062005558565b620029b4578138620021a2565b5080fd5b90506020813d602011620029e7575b81620029d660209383620055a7565b81010312620027f05751386200206e565b3d9150620029c7565b90506020813d60201162002a1f575b8162002a0e60209383620055a7565b81010312620027f057513862002009565b3d9150620029ff565b90506020813d60201162002a57575b8162002a4660209383620055a7565b81010312620027f057513862001ea2565b3d915062002a37565b90506020813d60201162002a8f575b8162002a7e60209383620055a7565b81010312620027f057513862001e3d565b3d915062002a6f565b62002ab5915060403d6040116200287c576200286a8183620055a7565b90503862001dbf565b506020813d60201162002af0575b8162002adb60209383620055a7565b81010312620027f05762001d27905162001cb7565b3d915062002acc565b506020813d60201162002b2b575b8162002b1660209383620055a7565b81010312620027f05762001c41905162001bd0565b3d915062002b07565b62002b509060403d6040116200287c576200286a8183620055a7565b5062001b4f565b62002b629062005558565b620029b457813862001ab2565b90506020813d60201162002b9e575b8162002b8d60209383620055a7565b81010312620027f057513862001980565b3d915062002b7e565b90506020813d60201162002bd6575b8162002bc560209383620055a7565b81010312620027f05751386200191b565b3d915062002bb6565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b90506020813d60201162002c3b575b8162002c2a60209383620055a7565b81010312620027f0575138620017ef565b3d915062002c1b565b90506020813d60201162002c73575b8162002c6260209383620055a7565b81010312620027f05751386200178b565b3d915062002c53565b62002c99915060403d6040116200287c576200286a8183620055a7565b9050386200170d565b3d8084833e62002cb38183620055a7565b602082828101031262002d8f57815167ffffffffffffffff811162002d8b57818301601f82850101121562002d8b578083015167ffffffffffffffff811162002d5e5760208160051b916040519062002d0f83850183620055a7565b81520192840160208284870101011162002d5a5783820160200192915b6020828287010101841062002d45575050505062001670565b60208080948651815201940193925062002d2c565b8580fd5b6024867f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b8480fd5b8380fd5b9150506020813d60201162002dc5575b8162002db260209383620055a7565b81010312620027f057518390816200160d565b3d915062002da3565b9250506020823d60201162002e00575b8162002ded60209383620055a7565b81010312620027f05784915138620015c1565b3d915062002dde565b90506020813d60201162002e38575b8162002e2760209383620055a7565b81010312620027f057513862001539565b3d915062002e18565b90506020813d60201162002e70575b8162002e5f60209383620055a7565b81010312620027f05751386200143b565b3d915062002e50565b90506020813d60201162002ea8575b8162002e9760209383620055a7565b81010312620027f0575138620013bd565b3d915062002e88565b919250506020813d60201162002ee6575b8162002ed160209383620055a7565b81010312620027f0575183919060206200135c565b3d915062002ec2565b9350506020833d60201162002f24575b8162002f0e60209383620055a7565b81010312620027f057915184929060246200130e565b3d915062002eff565b62002f607f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35839160405191829182620059d8565b0390a162002f71575b808062001292565b6200305b907f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50608060405160208152602160208201527f4572726f723a2061203e2062206e6f7420736174697366696564205b75696e7460408201527f5d000000000000000000000000000000000000000000000000000000000000006060820152a1604051807fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a893849382919060408352600960408401527f202056616c7565206100000000000000000000000000000000000000000000006060840152602060808401930152565b0390a160405180620030ae819060408252600960408301527f202056616c75652062000000000000000000000000000000000000000000000060608301526835ab028ac154b80000602060808401930152565b0390a1620030bb62005b9b565b3862002f69565b90506020813d602011620030f1575b81620030e060209383620055a7565b81010312620027f057513862001218565b3d9150620030d1565b602090813d831162003123575b620031138183620055a7565b81010312620027f05738620011a0565b503d62003107565b82518152869450889350602092830192600190920191016200116f565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200319d9060203d602011620031a5575b620031948183620055a7565b8101906200567e565b5038620010ef565b503d62003188565b620031e07f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf35839160405191829182620059d8565b0390a1620031f1575b808062001050565b620032db907f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50608060405160208152602260208201527f4572726f723a2061203e3d2062206e6f7420736174697366696564205b75696e60408201527f745d0000000000000000000000000000000000000000000000000000000000006060820152a1604051807fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a893849382919060408352600960408401527f202056616c7565206100000000000000000000000000000000000000000000006060840152602060808401930152565b0390a1604051806200332e819060408252600960408301527f202056616c75652062000000000000000000000000000000000000000000000060608301526835ab028ac154b80000602060808401930152565b0390a16200333b62005b9b565b38620031e9565b6200334d9062005558565b620029b457813862000ed8565b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60245416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff815416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126200026157602073ffffffffffffffffffffffffffffffffffffffff60225416604051908152f35b50346200026157807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112620002615773ffffffffffffffffffffffffffffffffffffffff602254169073ffffffffffffffffffffffffffffffffffffffff6023541673ffffffffffffffffffffffffffffffffffffffff6015541660405191613361948584019584871067ffffffffffffffff88111762002d5e57928492869792610100956200a755863960c08452601660c08501527f6672784554484554482046616d696c792047617567650000000000000000000060e08501523060208501523060408501526060840152608083015260a082015203019082f08015620051e85773ffffffffffffffffffffffffffffffffffffffff829116807fffffffffffffffffffffffff0000000000000000000000000000000000000000601454161760145560405190620035ab826200556d565b600e82527f66727846616d696c79476175676500000000000000000000000000000000000060208301526200364f60405180926200361c60208301957f319af33300000000000000000000000000000000000000000000000000000000875260406024850152606484019062005879565b906044830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282620055a7565b51906a636f6e736f6c652e6c6f675afa5073ffffffffffffffffffffffffffffffffffffffff6032541660345468010000000000000000811015620053e9576001810180603455811015620054ac577f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c101907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905573ffffffffffffffffffffffffffffffffffffffff6024541660355468010000000000000000811015620053e9576001810180603555811015620054ac577fcfa4bec1d3298408bb5afcfcd9c430549c5b31f8aa5c5848151c0a55f473c34d01907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905560365468010000000000000000811015620051f5576001810180603655811015620054d9576211a91f907f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b8015573ffffffffffffffffffffffffffffffffffffffff6014541660385468010000000000000000811015620053e9576001810180603855811015620054ac577f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f45619901907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905573ffffffffffffffffffffffffffffffffffffffff6014541660375468010000000000000000811015620053e9576001810180603755811015620054ac57603783527f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae01907fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905573ffffffffffffffffffffffffffffffffffffffff602b5416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620029b457604051907fc88a5e6d00000000000000000000000000000000000000000000000000000000825260048201526b204fce5e3e250261100000006024820152818160448183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b3576200549a575b508073ffffffffffffffffffffffffffffffffffffffff602d5416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502357604051907fc88a5e6d00000000000000000000000000000000000000000000000000000000825260048201526b204fce5e3e250261100000006024820152818160448183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762005482575b5050737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200026157806040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081523060048201526b204fce5e3e250261100000006024820152818160448183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b3576200546a575b5073ffffffffffffffffffffffffffffffffffffffff603c5416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502357604051907f06447d560000000000000000000000000000000000000000000000000000000082526004820152818160248183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762005452575b50602073ffffffffffffffffffffffffffffffffffffffff603254166044604051809481937fa9059cbb000000000000000000000000000000000000000000000000000000008352306004840152692a5a058fc295ed00000060248401525af18015620027b3576200542e575b50737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200026157806040517f90c5013b000000000000000000000000000000000000000000000000000000008152818160048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762005416575b505073ffffffffffffffffffffffffffffffffffffffff601c54166040519081615ed481011067ffffffffffffffff615ed484011117620053e957908291615ed46200dab6833930615ed4830190815260e06020820181905260345490820181905261010090910191907f46bddb1178e94d7f2892ff5f366840eb658911794f2c3a44c450aa2c505186c19060005b818110620053b957505050615ed4830182036040615ed48501015260206035549283815201917fcfa4bec1d3298408bb5afcfcd9c430549c5b31f8aa5c5848151c0a55f473c34d9060005b8181106200538957505050615ed4830182036060615ed4850101526020603654928381520191603685527f4a11f94e20a93c79f6ec743a1954ec4fc2c08429ae2122118bf234b2185c81b890855b8181106200536f57505050615ed4830182036080615ed48501015260206037549283815201917f42a7b7dd785cd69714a189dffb3fd7d7174edc9ece837694ce50f7078f7c31ae9060005b8181106200533f57505050615ed48301820360a0615ed485010152602060385492838152019160386000527f38395c5dceade9603479b177b68959049485df8aa97b39f3533039af5f4561999060005b8181106200530f57505050615ed4830160c001528190039082f08015620051e85762003e4873ffffffffffffffffffffffffffffffffffffffff6012549216807fffffffffffffffffffffffff00000000000000000000000000000000000000008416176012558373ffffffffffffffffffffffffffffffffffffffff601d54169316176200584e565b90737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620050265762003ea191839160405193849283927fb4d6c78200000000000000000000000000000000000000000000000000000000845260048401620058be565b038183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b357620052f7575b505062003eed73ffffffffffffffffffffffffffffffffffffffff601d541662005792565b62003f1073ffffffffffffffffffffffffffffffffffffffff6012541662005792565b73ffffffffffffffffffffffffffffffffffffffff6014541690813b1562000261576040517ff43a7b1b0000000000000000000000000000000000000000000000000000000081526024810160206004830152603954809152604482019060396000527fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d39060005b818110620052ca57505050818394818581819503925af18015620027b357620052b2575b5073ffffffffffffffffffffffffffffffffffffffff60255416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502357604051907f06447d560000000000000000000000000000000000000000000000000000000082526004820152818160248183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b3576200529a575b5073ffffffffffffffffffffffffffffffffffffffff601d541673ffffffffffffffffffffffffffffffffffffffff6015541673ffffffffffffffffffffffffffffffffffffffff60145416823b156200504257608484928360405195869485937fd5e1a9c600000000000000000000000000000000000000000000000000000000855260048501526211a91f602485015280604485015260648401525af18015620027b35762005282575b5073ffffffffffffffffffffffffffffffffffffffff6023541673ffffffffffffffffffffffffffffffffffffffff60145416813b15620050265782916064839260405194859384927f18dfe92100000000000000000000000000000000000000000000000000000000845260048401528160248401526103e860448401525af18015620027b3576200526a575b5073ffffffffffffffffffffffffffffffffffffffff6022541673ffffffffffffffffffffffffffffffffffffffff601d5416813b15620050265782916064839260405194859384927f570b1e9900000000000000000000000000000000000000000000000000000000845260048401528160248401528160448401525af18015620027b35762005252575b5073ffffffffffffffffffffffffffffffffffffffff6022541673ffffffffffffffffffffffffffffffffffffffff60145416813b15620050265782916064839260405194859384927f570b1e990000000000000000000000000000000000000000000000000000000084526004840152816024840152600160448401525af18015620027b3576200523a575b5050737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200026157806040517f90c5013b000000000000000000000000000000000000000000000000000000008152818160048183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762005222575b505060405180614a3481011067ffffffffffffffff614a3483011117620051f5578190614a3462005d21823980614a348101039082f08015620051e85773ffffffffffffffffffffffffffffffffffffffff16601354817fffffffffffffffffffffffff000000000000000000000000000000000000000082161760135573ffffffffffffffffffffffffffffffffffffffff601d54169173ffffffffffffffffffffffffffffffffffffffff601c54169073ffffffffffffffffffffffffffffffffffffffff601f54169381868516173b1562002d5a578560849281809660405198899788967ff8c8765e00000000000000000000000000000000000000000000000000000000885230600489015260248801526044870152606486015216175af18015620027b357620051d0575b5073ffffffffffffffffffffffffffffffffffffffff602a54166200447773ffffffffffffffffffffffffffffffffffffffff601354166200584e565b90737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502657620044d091839160405193849283927fb4d6c78200000000000000000000000000000000000000000000000000000000845260048401620058be565b038183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b357620051b8575b5073ffffffffffffffffffffffffffffffffffffffff602c54166200453473ffffffffffffffffffffffffffffffffffffffff601354166200584e565b90737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562005026576200458d91839160405193849283927fb4d6c78200000000000000000000000000000000000000000000000000000000845260048401620058be565b038183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b357620051a0575b5073ffffffffffffffffffffffffffffffffffffffff60305416620045f173ffffffffffffffffffffffffffffffffffffffff601354166200584e565b90737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1562005026576200464a91839160405193849283927fb4d6c78200000000000000000000000000000000000000000000000000000000845260048401620058be565b038183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762005188575b506040517fffa186490000000000000000000000000000000000000000000000000000000081527fdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef6004820152602081602481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa8015620027b35773ffffffffffffffffffffffffffffffffffffffff91839162005164575b501660175490807fffffffffffffffffffffffff0000000000000000000000000000000000000000831617601755737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620050265782604051927fc88a5e6d000000000000000000000000000000000000000000000000000000008452161760048201526b204fce5e3e250261100000006024820152818160448183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b3576200514c575b5073ffffffffffffffffffffffffffffffffffffffff60175416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502357604051907fc657c718000000000000000000000000000000000000000000000000000000008252600482015260406024820152600560448201527f416c6963650000000000000000000000000000000000000000000000000000006064820152818160848183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b35762005134575b506040517fffa186490000000000000000000000000000000000000000000000000000000081527feeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef6004820152602081602481737109709ecfa91a80626ff3989d68f67f5b1dd12d5afa8015620027b35773ffffffffffffffffffffffffffffffffffffffff91839162005110575b501660185490807fffffffffffffffffffffffff0000000000000000000000000000000000000000831617601855737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620050265782604051927fc88a5e6d000000000000000000000000000000000000000000000000000000008452161760048201526b204fce5e3e250261100000006024820152818160448183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b357620050f8575b5073ffffffffffffffffffffffffffffffffffffffff60185416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502357604051907fc657c718000000000000000000000000000000000000000000000000000000008252600482015260406024820152600360448201527f426f6200000000000000000000000000000000000000000000000000000000006064820152818160848183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b357620050e0575b5073ffffffffffffffffffffffffffffffffffffffff602b5416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502357604051907fc88a5e6d00000000000000000000000000000000000000000000000000000000825260048201526b204fce5e3e250261100000006024820152818160448183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b357620050c8575b5073ffffffffffffffffffffffffffffffffffffffff602d5416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502357604051907fc88a5e6d00000000000000000000000000000000000000000000000000000000825260048201526b204fce5e3e250261100000006024820152818160448183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af18015620027b357620050b0575b505073ffffffffffffffffffffffffffffffffffffffff6026541690604051602081602481857f9abbdf4b00000000000000000000000000000000000000000000000000000000978883528360048401525af1908115620027b3579073ffffffffffffffffffffffffffffffffffffffff9183916200508c575b50167fffffffffffffffffffffffff0000000000000000000000000000000000000000602e541617602e5562004c9c60405162004c6c816200556d565b601c81527f63726561746520636f6d706c69616e74207661756c74206f776e65720000000060208201526200591b565b6040519161019f928381019381851067ffffffffffffffff8611176200505f57839482916201398a8339039083f08015620027b35773ffffffffffffffffffffffffffffffffffffffff1662004d3a60165491807fffffffffffffffffffffffff00000000000000000000000000000000000000008416176016558473ffffffffffffffffffffffffffffffffffffffff602b54169316176200584e565b90737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620050425762004d9391849160405193849283927fb4d6c78200000000000000000000000000000000000000000000000000000000845260048401620058be565b038183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af1908115620027fe57839162005047575b505073ffffffffffffffffffffffffffffffffffffffff602d541662004dfb73ffffffffffffffffffffffffffffffffffffffff601654166200584e565b90737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15620050425762004e5491849160405193849283927fb4d6c78200000000000000000000000000000000000000000000000000000000845260048401620058be565b038183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af1908115620027fe5783916200502a575b505073ffffffffffffffffffffffffffffffffffffffff60165416737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156200502657604051907fca669fa70000000000000000000000000000000000000000000000000000000082526004820152828160248183737109709ecfa91a80626ff3989d68f67f5b1dd12d5af1908115620027fe5783916200500b575b505060209062004f5460405162004f25816200556d565b601681527f63726561746520636f6d706c69616e74207661756c7400000000000000000000848201526200591b565b602473ffffffffffffffffffffffffffffffffffffffff6026541691604051948593849283528360048401525af18015620027b35773ffffffffffffffffffffffffffffffffffffffff91839162004fd5575b50167fffffffffffffffffffffffff0000000000000000000000000000000000000000602f541617602f5580f35b62004ffc915060203d60201162005003575b62004ff38183620055a7565b810190620058ed565b3862004fa7565b503d62004fe7565b620050169062005558565b6200502357813862004f0e565b50fd5b5050fd5b620050359062005558565b6200502357813862004e7e565b505050fd5b620050529062005558565b6200502357813862004dbd565b6024847f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b620050a9915060203d602011620050035762004ff38183620055a7565b3862004c2f565b620050bb9062005558565b6200026157803862004bb5565b620050d39062005558565b6200026157803862004b17565b620050eb9062005558565b6200026157803862004a79565b620051039062005558565b62000261578038620049b9565b6200512d915060203d602011620050035762004ff38183620055a7565b3862004904565b6200513f9062005558565b6200026157803862004875565b620051579062005558565b62000261578038620047b5565b62005181915060203d602011620050035762004ff38183620055a7565b3862004700565b620051939062005558565b6200026157803862004671565b620051ab9062005558565b62000261578038620045b4565b620051c39062005558565b62000261578038620044f7565b620051db9062005558565b620002615780386200443a565b50604051903d90823e3d90fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6200522d9062005558565b620002615780386200430a565b620052459062005558565b620002615780386200429b565b6200525d9062005558565b620002615780386200420e565b620052759062005558565b6200026157803862004182565b6200528d9062005558565b62000261578038620040f4565b620052a59062005558565b6200026157803862004048565b620052bd9062005558565b6200026157803862003fbc565b825473ffffffffffffffffffffffffffffffffffffffff1684526020909301926001928301920162003f98565b620053029062005558565b6200026157803862003ec8565b825473ffffffffffffffffffffffffffffffffffffffff1685528796506020909401936001928301920162003dbe565b825473ffffffffffffffffffffffffffffffffffffffff1685528796506020909401936001928301920162003d6e565b825485528796506020909401936001928301920162003d23565b825473ffffffffffffffffffffffffffffffffffffffff1685528796506020909401936001928301920162003cd5565b825473ffffffffffffffffffffffffffffffffffffffff1685528796506020909401936001928301920162003c8a565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b620054219062005558565b6200026157803862003bfb565b6200544a9060203d602011620031a557620031948183620055a7565b503862003b8d565b6200545d9062005558565b6200026157803862003b20565b620054759062005558565b6200026157803862003a94565b6200548d9062005558565b6200026157803862003a0d565b620054a59062005558565b386200396e565b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526032600452fd5b905034620029b457817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112620029b45760209073ffffffffffffffffffffffffffffffffffffffff603254168152f35b67ffffffffffffffff81116200314857604052565b6040810190811067ffffffffffffffff8211176200314857604052565b6060810190811067ffffffffffffffff8211176200314857604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176200314857604052565b60005b838110620055fd5750506000910152565b8181015183820152602001620055ec565b67ffffffffffffffff81116200314857601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b3d1562005679573d906200565d826200560e565b916200566d6040519384620055a7565b82523d6000602084013e565b606090565b90816020910312620027f057518015158103620027f05790565b6000805460081c60ff1615620056b2575460081c60ff1690565b80737109709ecfa91a80626ff3989d68f67f5b1dd12d803b620056d457505090565b81925060405182602082018381527f6661696c6564000000000000000000000000000000000000000000000000000060408401526040835262005717836200558a565b6200576c602460405180936200575b60208301977f667f9d7000000000000000000000000000000000000000000000000000000000895251809285850190620055e9565b8101036004810184520182620055a7565b51925af1506200578f6200577f62005649565b602080825183010191016200567e565b90565b60395468010000000000000000811015620031485760018101806039558110156200581f5773ffffffffffffffffffffffffffffffffffffffff9060396000527fdc16fef70f8d5ddbc01ee3d903d1e69c18a3c7be080eb86a81e0578814ee58d30191167fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90813b60006200585e826200560e565b936200586e6040519586620055a7565b82855260208501903c565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f602093620058b781518092818752878088019101620055e9565b0116010190565b60409073ffffffffffffffffffffffffffffffffffffffff6200578f9493168152816020820152019062005879565b90816020910312620027f0575173ffffffffffffffffffffffffffffffffffffffff81168103620027f05790565b6000809160405162005992816200596560208201947f41304fac00000000000000000000000000000000000000000000000000000000865260206024840152604483019062005879565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282620055a7565b51906a636f6e736f6c652e6c6f675afa50565b919082018092116200294a57565b9190826040910312620027f0576020825192015190565b919082039182116200294a57565b9060806200578f9260408152600560408201527f4572726f720000000000000000000000000000000000000000000000000000006060820152816020820152019062005879565b91818314158062005a31575b50505050565b7f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358362005a65604093845191829182620059d8565b0390a162005a75575b8062005a2b565b60809283927f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5084845160208152602260208201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e868201527f745d0000000000000000000000000000000000000000000000000000000000006060820152a1825190838252600a848301527f2020457870656374656400000000000000000000000000000000000000000000606083015260208201527fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8948591a1600a8251928084528301527f2020202041637475616c0000000000000000000000000000000000000000000060608301526020820152a162005b9262005b9b565b38808062005a6e565b737109709ecfa91a80626ff3989d68f67f5b1dd12d803b62005be7575b506101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff6000541617600055565b6040519060208201908082527f6661696c6564000000000000000000000000000000000000000000000000000060408401526001606084015260608352608083019183831067ffffffffffffffff841117620031485760008362005c8860248397849760405260a08101957f70ca10bb0000000000000000000000000000000000000000000000000000000087526200575b8251809260a4850190620055e9565b51925af15062005c9762005649565b503862005bb8565b6201518042018042116200294a57737109709ecfa91a80626ff3989d68f67f5b1dd12d90813b15620027f0576000916024839260405194859384927fe5d6bf0200000000000000000000000000000000000000000000000000000000845260048401525af180156200293e5762005d135750565b62005d1e9062005558565b56fe6080806040523461001b576001600555614a1390816100218239f35b600080fdfe6080604052600436101561001257600080fd5b6000803560e01c806304acbb9914612b2d5780630ba091fc14612a8157806317b18c89146129c3578063193ba6d1146129765780632439242a146128c15780632a554842146127ff578063328a4d711461254457806332d342b714612464578063336d1523146124475780633d18b9121461219f5780633e0dc34e146121655780634ac032be1461212b5780634e7adf2c146120f15780634f5aefcf14611f0c57806357a2a8b714611de35780635eb143ce14611d91578063641a6cd014611c8f578063646780df14611c3d5780636a4874a114611bf057806372f702f314611b9e57806378aae1cb14611a715780637d42344614611a24578063806465e9146119785780638170820c146118b25780638da5cb5b14611861578063923c1d61146118145780639ce0ff9d146117c75780639ec5a894146117755780639ecc33e91461173e578063a22cb4651461167d578063a41ce7e9146114fc578063a4698feb146111f4578063afcff50f146111a7578063b3a408b81461115a578063d6f1926214610b0e578063d73792a914610ad3578063d7b4be2414610a81578063d7c04a4614610a2f578063d9d80e3d14610957578063e869565e146106b2578063f1053bfb1461066b578063f8c8765e146102c65763ff61011a146101f657600080fd5b346102b4578061020536612c06565b73ffffffffffffffffffffffffffffffffffffffff92919261022b818654163314613777565b60015416803b156102c2576040517fff61011a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9093166004840152602483019390935260448201529082908290818381606481015b03925af180156102b7576102a45750f35b6102ad90612c8f565b6102b45780f35b80fd5b6040513d84823e3d90fd5b8480fd5b50346102b45760807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b4576102fe612be3565b60249081359073ffffffffffffffffffffffffffffffffffffffff9081831680930361066657604435908282168092036106665760643590838216809203610666578654908482166106085790849392917fffffffffffffffffffffffff00000000000000000000000000000000000000009586911691161787558484600154161760015581846002541617600255836003541617600355604051917f1526fe2700000000000000000000000000000000000000000000000000000000835285600484015260c08387818a73f403c135812408bfbe8713b5a23a04b3d48aae315af19283156105fd578790889461057e575b50811692838560065416176006551680936007541617600755604051937f095ea7b300000000000000000000000000000000000000000000000000000000908186526004860152867fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff948588880152602096878160448186895af1801561050057610546575b50868660448a85604051998a9485938a85528b60048601528401525af19485156102b757879561050b575b5060449394956040519889968795865260048601528401525af18015610500576104c9578280f35b81813d83116104f9575b6104dd8183612cee565b810103126104f5576104ee90612e99565b5038808280f35b5080fd5b503d6104d3565b6040513d85823e3d90fd5b939484813d831161053f575b6105218183612cee565b810103126104f5578695610536604495612e99565b509594936104a1565b503d610517565b8781813d8311610577575b61055b8183612cee565b810103126105735761056c90612e99565b5038610476565b8280fd5b503d610551565b93505060c0833d82116105f5575b8161059960c09383612cee565b810103126105f157806105ab84613250565b6105ea60a06105bc60208801613250565b966105c960408201613250565b506105d660608201613250565b506105e360808201613250565b5001612e99565b50906103f0565b8680fd5b3d915061058c565b6040513d89823e3d90fd5b606487600c604051917f08c379a0000000000000000000000000000000000000000000000000000000008352602060048401528201527f616c726561647920696e697400000000000000000000000000000000000000006044820152fd5b600080fd5b50346102b457602061068861067f36612d69565b92919091613346565b7fffffffff0000000000000000000000000000000000000000000000000000000060405191168152f35b50346102b4576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f5576106eb612be3565b61070a337359cfcd384746ec3035299d90782be065e466800b14612e34565b8273ffffffffffffffffffffffffffffffffffffffff928360035416906040517f02fb0c5e0000000000000000000000000000000000000000000000000000000081528181600481865afa908115610917578491610922575b506107a1575b505050167fffffffffffffffffffffffff0000000000000000000000000000000000000000600354161760035561079e612f74565b80f35b6040517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528181602481865afa9182156109175784926108e6575b50508061085a575b5050826003541683825416813b156105735782916024839260405194859384927fc00007b000000000000000000000000000000000000000000000000000000000845260048401525af180156102b757610846575b80610769565b61084f90612c8f565b610573578238610840565b8483541690823b156108e2576040517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff92909216600483015260248201529082908290604490829084905af180156102b7576108ce575b806107eb565b6108d790612c8f565b6105735782386108c8565b8380fd5b8194508092503d8311610910575b6108fe8183612cee565b810103126106665784915138806107e3565b503d6108f4565b6040513d86823e3d90fd5b90508181813d8311610950575b6109398183612cee565b810103126108e25761094a90612e99565b38610763565b503d61092f565b50346102b4578061096736612c5b565b9073ffffffffffffffffffffffffffffffffffffffff61098b818554163314613777565b6109936137dc565b826109aa575b836109a2612f74565b600160055580f35b6109bc8382600254163090339061384b565b6001541691823b15610a2a57604484928360405195869485937fd9d80e3d000000000000000000000000000000000000000000000000000000008552600485015260248401525af180156102b757610a16575b8080610999565b610a1f90612c8f565b6102b4578038610a0f565b505050fd5b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602073ffffffffffffffffffffffffffffffffffffffff60045416604051908152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45760206040516127108152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45773ffffffffffffffffffffffffffffffffffffffff6001541690604051907f12edb24c0000000000000000000000000000000000000000000000000000000082528082600481865afa9182156110ff578192611133575b508060249293604051938480927e8cc2620000000000000000000000000000000000000000000000000000000082523060048301525afa9182156110ff57819261110c575b508060249173ffffffffffffffffffffffffffffffffffffffff60025416604051938480927fb277e8f00000000000000000000000000000000000000000000000000000000082523060048301525afa9182156110ff5781926110ac575b5073ffffffffffffffffffffffffffffffffffffffff6003541692604051927f857cb94a000000000000000000000000000000000000000000000000000000008452602084600481885afa938415610500578394611078575b50610ca7610c9f8588516149d0565b8251906149d0565b907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610ceb610cd584612ea6565b93610ce36040519586612cee565b808552612ea6565b01366020840137610d00610c9f8689516149d0565b947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0610d44610d2e88612ea6565b97610d3c604051998a612cee565b808952612ea6565b01366020880137845b8851811015610e56578073ffffffffffffffffffffffffffffffffffffffff610d778b938461471d565b5116610d83828761471d565b526024602073ffffffffffffffffffffffffffffffffffffffff610db284610dab818c61471d565b519661471d565b5116604051928380927f70a082310000000000000000000000000000000000000000000000000000000082523060048301525afa908115610e4b578891610e17575b50610e0290610e12936149d0565b610e0c828a61471d565b526146f0565b610d4d565b90506020813d602011610e43575b81610e3260209383612cee565b810103126106665751610e12610df4565b3d9150610e25565b6040513d8a823e3d90fd5b506040517fdc01f60d00000000000000000000000000000000000000000000000000000000815230600482015286938992879081846024818e5afa9384156102b7578294611025575b50815b8451811015610f0e578073ffffffffffffffffffffffffffffffffffffffff610ece610f09938861471d565b515116610ee5610edf8951846149d0565b8761471d565b526020610ef2828861471d565b510151610e0c610f038951846149d0565b8b61471d565b610ea2565b5092509390845b8251811015610f8e578073ffffffffffffffffffffffffffffffffffffffff610f41610f89938661471d565b515116610f61610f5b87610f568a51866149d0565b6149d0565b8561471d565b526020610f6e828661471d565b510151610e0c610f8387610f568a51866149d0565b8a61471d565b610f15565b85828860405192839260408401604085528151809152602060608601920190835b818110610ff6575050508381036020850152602080845192838152019301915b818110610fdd575050500390f35b8251845285945060209384019390920191600101610fcf565b825173ffffffffffffffffffffffffffffffffffffffff16845287965060209384019390920191600101610faf565b9093503d8083833e6110378183612cee565b8101906020818303126105735780519067ffffffffffffffff82116108e2570181601f820112156105735780516110719291602001614917565b9287610e9f565b9093506020813d6020116110a4575b8161109460209383612cee565b8101031261066657519238610c90565b3d9150611087565b9091503d8083833e6110be8183612cee565b8101906020818303126105735780519067ffffffffffffffff82116108e2570181601f820112156105735780516110f89291602001614917565b9038610c37565b50604051903d90823e3d90fd5b602491925061112c903d8085833e6111248183612cee565b810190612ebe565b9190610bd9565b6024925061115382913d8084833e61114b8183612cee565b810190613b54565b9250610b94565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602060405173c9acb83ada68413a6aa57007bc720ee2e2b3c46d8152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45760206040517341a5881c17185383e19df6fa4ec158a6f4851a698152f35b50346102b4576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f55761122d612e25565b6112c9575b5061123b61407e565b6004600073ffffffffffffffffffffffffffffffffffffffff60015416604051928380927f12edb24c0000000000000000000000000000000000000000000000000000000082525afa80156112bd5761129c916000916112a4575b50614760565b61079e61442b565b6112b7913d8091833e61114b8183612cee565b38611296565b6040513d6000823e3d90fd5b600154906000916040517fc00007b000000000000000000000000000000000000000000000000000000000815230600482015283816024818373ffffffffffffffffffffffffffffffffffffffff8097165af18015610917576114e2575b50806002541681845416813b156102c2576040517f6b09169500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9190911660248201529084908290604490829084905af18015610917576114cf575b506040517f70a082310000000000000000000000000000000000000000000000000000000090818152306004820152838160248173d533a949740bb3306d119cc777fa900ba034cd525afa9081156114c4578591611497575b5080611484575b506040519081523060048201528281602481734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b5afa928315610917578493611454575b505081611441575b5050611232565b61144c925416613f92565b38808061143a565b9080929350813d831161147d575b61146c8183612cee565b810103126106665751903880611432565b503d611462565b6114919083865416613e7a565b386113fb565b90508381813d83116114bd575b6114ae8183612cee565b810103126106665751386113f4565b503d6114a4565b6040513d87823e3d90fd5b6114db90939193612c8f565b913861139b565b6114f5903d8086833e6111248183612cee565b5038611327565b50346102b45761150b36612c5b565b909173ffffffffffffffffffffffffffffffffffffffff91611531838354163314613777565b6115396137dc565b819284611559575b60208461154c612f74565b6001600555604051908152f35b9091925061156f8482600654163090339061384b565b8060025416803b156108e2576040517f6e553f65000000000000000000000000000000000000000000000000000000008152600481018690523060248201529084908290818381604481015b03925af1801561091757908491611669575b505090604460209260015416948460405196879485937f17b18c89000000000000000000000000000000000000000000000000000000008552600485015260248401525af190811561165d579061162b575b60209150388080611541565b506020813d8211611655575b8161164460209383612cee565b81010312610666576020905161161f565b3d9150611637565b604051903d90823e3d90fd5b61167290612c8f565b6105735782386115cd565b50346102b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b4576116b5612be3565b60243580151580910361066657829173ffffffffffffffffffffffffffffffffffffffff6116e7818554163314613777565b8060015416803b156102c25784928360449260405196879586947fa22cb46500000000000000000000000000000000000000000000000000000000865216600485015260248401525af180156102b7576102a45750f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45761079e613bd6565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602073ffffffffffffffffffffffffffffffffffffffff60035416604051908152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602060405173f403c135812408bfbe8713b5a23a04b3d48aae318152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b4576020604051734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b8152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45773ffffffffffffffffffffffffffffffffffffffff6020915416604051908152f35b50346102b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457806118eb612be3565b73ffffffffffffffffffffffffffffffffffffffff61190e818454163314613777565b60015416803b15611974576040517f8170820c00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248035908301528290829081838160448101610293565b5050fd5b50346102b4578061198836612c5b565b9073ffffffffffffffffffffffffffffffffffffffff6119ac818554163314613777565b6119b46137dc565b6001541691823b15610a2a57604484928360405195869485937f806465e9000000000000000000000000000000000000000000000000000000008552600485015260248401525af180156102b757611a10575b506109a2612f74565b611a1990612c8f565b6102b4578038611a07565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b4576020604051733432b6a60d23ca0dfca7761b7ab56459d9c964d08152f35b50346102b45760a07ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457611aa9612be3565b606435908115158092036106665760409060a473ffffffffffffffffffffffffffffffffffffffff91611ae0838754163314613777565b611ae86137dc565b858360015416855196879586947f78aae1cb00000000000000000000000000000000000000000000000000000000865216600485015260243560248501526044356044850152606484015260843560848401525af180156102b75782918391611b61575b60408383600160055582519182526020820152f35b9150506040813d604011611b96575b81611b7d60409383612cee565b810103126104f557604091506020815191015138611b4c565b3d9150611b70565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602073ffffffffffffffffffffffffffffffffffffffff60025416604051908152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602060405173d533a949740bb3306d119cc777fa900ba034cd528152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602073ffffffffffffffffffffffffffffffffffffffff60065416604051908152f35b50346102b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457611cc7612be3565b611ce6337359cfcd384746ec3035299d90782be065e466800b14612e34565b8173ffffffffffffffffffffffffffffffffffffffff806001541692833b156105735782916024839260405194859384927fd7400d5600000000000000000000000000000000000000000000000000000000845216978860048401525af180156102b757611d7d575b50507fffffffffffffffffffffffff0000000000000000000000000000000000000000600454161760045580f35b611d8690612c8f565b6104f5578138611d4f565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602073ffffffffffffffffffffffffffffffffffffffff60075416604051908152f35b50346102b45780611df336612c5b565b9073ffffffffffffffffffffffffffffffffffffffff611e17818554163314613777565b611e1f6137dc565b82611e2d57836109a2612f74565b611e3f8382600654163090339061384b565b8060025416803b156102c2576040517f6e553f65000000000000000000000000000000000000000000000000000000008152600481018590523060248201529085908290818381604481015b03925af19081156114c4578591611ef8575b50506001541691823b15610a2a57604484928360405195869485937fd9d80e3d000000000000000000000000000000000000000000000000000000008552600485015260248401525af180156102b757610a16578080610999565b611f0190612c8f565b610a2a578338611e9d565b50346102b45760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457611f44612e25565b60243567ffffffffffffffff918282116108e257366023830112156108e25781600401359283116108e25760248360051b830101903682116102c257611fed575b611f8d61407e565b611f9683612ea6565b92611fa46040519485612cee565b83526020916024018284015b828210611fc1578561129c86614760565b813573ffffffffffffffffffffffffffffffffffffffff81168103610666578152908301908301611fb0565b8373ffffffffffffffffffffffffffffffffffffffff818082600154166024604051809481937fc00007b00000000000000000000000000000000000000000000000000000000083523060048401525af18015610500576120d7575b50600254825482169116803b15610573576040517f6b09169500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff92909216602483015282908290604490829084905af180156102b7576120c3575b5050611f85565b6120cc90612c8f565b6108e25783386120bc565b6120ea903d8085833e6111248183612cee565b5038612049565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602060405160048152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602060405160028152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b457602060405160248152f35b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45760015460006040517fc00007b000000000000000000000000000000000000000000000000000000000815230600482015281816024818373ffffffffffffffffffffffffffffffffffffffff8098165af180156102b75761242d575b50816002541682825416813b15610573576040517f6b09169500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9190911660248201529082908290604490829084905af180156102b75761241e575b50906040517f70a0823100000000000000000000000000000000000000000000000000000000808252306004830152602091828160248173d533a949740bb3306d119cc777fa900ba034cd525afa9081156114c45785916123f1575b50806123de575b506040519081523060048201528181602481734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b5afa9182156109175784926123ad575b505090600492828260009461239a575b50505061235361407e565b60015416604051928380927f12edb24c0000000000000000000000000000000000000000000000000000000082525afa80156112bd5761129c916000916112a45750614760565b6123a5925416613f92565b388082612348565b9080939250813d83116123d7575b6123c58183612cee565b81010312610666579051826000612338565b503d6123bb565b6123eb9084865416613e7a565b38612301565b90508281813d8311612417575b6124088183612cee565b810103126106665751386122fa565b503d6123fe565b61242790612c8f565b3861229e565b612440903d8084833e6111248183612cee565b503861222a565b50346102b457602061068861245b36612d69565b92919091613644565b50346102b45760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45773ffffffffffffffffffffffffffffffffffffffff6124b7818354163314613777565b6124bf6137dc565b6001546040517f8395cef4000000000000000000000000000000000000000000000000000000008152600480359082015233602482015291602091839160449183918791165af180156102b75761251957506109a2612f74565b602090813d811161253d575b61252f8183612cee565b810103126106665738611a07565b503d612525565b50346102b4576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104f55773ffffffffffffffffffffffffffffffffffffffff90612599828454163314613777565b6125a16137dc565b6001546040517f8395cef4000000000000000000000000000000000000000000000000000000008152600480359082015230602482015290829082906044908290889088165af19081156109175782916127d6575b5050816002541683604051917f70a0823100000000000000000000000000000000000000000000000000000000928381523060048201528481602481855afa9081156105005783916127a5575b50813b156105735782916024839260405194859384927f3969dfb400000000000000000000000000000000000000000000000000000000845260048401525af180156102b757612791575b50508260065416928454166040519182523060048301528282602481875afa9182156114c4578592612760575b506040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116600482015260248101919091529181908390818681604481015b03925af180156105005761272c575b826109a2612f74565b81813d8311612759575b6127408183612cee565b810103126104f55761275190612e99565b503880612723565b503d612736565b91508282813d831161278a575b6127778183612cee565b81010312610666579051906127146126bb565b503d61276d565b61279a90612c8f565b6108e257833861268e565b809350858092503d83116127cf575b6127be8183612cee565b810103126106665785915138612643565b503d6127b4565b813d83116127f8575b6127e98183612cee565b810103126106665780386125f6565b503d6127df565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45761284d337359cfcd384746ec3035299d90782be065e466800b14612e34565b808073ffffffffffffffffffffffffffffffffffffffff600154166024604051809481937fc00007b00000000000000000000000000000000000000000000000000000000083523060048401525af180156102b7576128aa575080f35b6128bd903d8084833e6111248183612cee565b5080f35b50346102b4576128d036612c5b565b909173ffffffffffffffffffffffffffffffffffffffff916128f6838354163314613777565b6128fe6137dc565b8192846129105760208461154c612f74565b909192506129268482600754163090339061384b565b8060025416803b156108e2576040517f7acb7757000000000000000000000000000000000000000000000000000000008152600481018690523060248201529084908290818381604481016115bb565b50346102b457807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102b45760206040517359cfcd384746ec3035299d90782be065e466800b8152f35b50346102b4576129d236612c5b565b909173ffffffffffffffffffffffffffffffffffffffff916129f8838354163314613777565b612a006137dc565b819284612a125760208461154c612f74565b602092935080612a2c86604493600254163090339061384b565b60015416948460405196879485937f17b18c89000000000000000000000000000000000000000000000000000000008552600485015260248401525af190811561165d579061162b5760209150388080611541565b50346102b45780612a9136612c5b565b9073ffffffffffffffffffffffffffffffffffffffff612ab5818554163314613777565b612abd6137dc565b82612acb57836109a2612f74565b612add8382600754163090339061384b565b8060025416803b156102c2576040517f7acb775700000000000000000000000000000000000000000000000000000000815260048101859052306024820152908590829081838160448101611e8b565b50346102b45780612b3d36612c06565b9073ffffffffffffffffffffffffffffffffffffffff939293612b64818554163314613777565b6001541690813b156108e2576040517f04acbb9900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff959095166004860152602485015260448401919091528290606490829084905af180156102b757612bda575080f35b61079e90612c8f565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361066657565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc60609101126106665760043573ffffffffffffffffffffffffffffffffffffffff8116810361066657906024359060443590565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6040910112610666576004359060243590565b67ffffffffffffffff8111612ca357604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040810190811067ffffffffffffffff821117612ca357604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117612ca357604052565b67ffffffffffffffff8111612ca357601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b9060807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8301126106665773ffffffffffffffffffffffffffffffffffffffff9160043583811681036106665792602435908116810361066657916044359160643567ffffffffffffffff8111610666578160238201121561066657806004013590612df482612d2f565b92612e026040519485612cee565b828452602483830101116106665781600092602460209301838601378301015290565b60043590811515820361066657565b15612e3b57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f21617574685f61646d696e0000000000000000000000000000000000000000006044820152fd5b5190811515820361066657565b67ffffffffffffffff8111612ca35760051b60200190565b60209081818403126106665780519067ffffffffffffffff821161066657019180601f84011215610666578251612ef481612ea6565b93612f026040519586612cee565b818552838086019260051b820101928311610666578301905b828210612f29575050505090565b81518152908301908301612f1b565b91908203918211612f4557565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff806003541660409081517f02fb0c5e0000000000000000000000000000000000000000000000000000000081526020908181600481865afa9081156132105760009161321b575b50612fdc575b50505050565b6024918185600154168551948580927fd9f96e8d0000000000000000000000000000000000000000000000000000000082523060048301525afa928315613210576000936131e1575b5083517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528281602481855afa9283156131d6576000936131a5575b50508183106131155750613086908460035416946000541692612f38565b833b156106665782517f47e7ef2400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921660048301526024820152916000908390604490829084905af190811561310b57506130fc575b505b38808080612fd6565b61310590612c8f565b386130f1565b513d6000823e3d90fd5b6000549094169161312591612f38565b833b156106665782517ff3fef3a300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9290921660048301526024820152916000908390604490829084905af190811561310b5750613196575b506130f3565b61319f90612c8f565b38613190565b8181949293943d83116131cf575b6131bd8183612cee565b810103126102b4575051903880613068565b503d6131b3565b85513d6000823e3d90fd5b90928282813d8311613209575b6131f88183612cee565b810103126102b45750519138613025565b503d6131ee565b84513d6000823e3d90fd5b908282813d8311613249575b6132318183612cee565b810103126102b4575061324390612e99565b38612fd0565b503d613227565b519073ffffffffffffffffffffffffffffffffffffffff8216820361066657565b9081602091031261066657517fffffffff00000000000000000000000000000000000000000000000000000000811681036106665790565b919082519283825260005b8481106132f35750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016132b4565b9092613343949360809373ffffffffffffffffffffffffffffffffffffffff8092168452166020830152604082015281606082015201906132a9565b90565b9291909273ffffffffffffffffffffffffffffffffffffffff9030828216036135e6578160015416330361358857818516926040958651937f8da5cb5b00000000000000000000000000000000000000000000000000000000855260209560009587816004818a865af1908115613549578791613553575b50828a51917fbfff576f0000000000000000000000000000000000000000000000000000000083526024600484015216602482015287816044818a7341a5881c17185383e19df6fa4ec158a6f4851a695af1908115613549579083918891613511575b5016036134e857613430613bd6565b84541690813b156134bc578486946134768a51998a96879586947ff1053bfb00000000000000000000000000000000000000000000000000000000865260048601613307565b03925af19384156134b257509261348c57505090565b6133439250803d106134ab575b6134a38183612cee565b810190613271565b503d613499565b51903d90823e3d90fd5b50505050505050507ff1053bfb0000000000000000000000000000000000000000000000000000000090565b600488517fae59d4f4000000000000000000000000000000000000000000000000000000008152fd5b809250898092503d8311613542575b61352a8183612cee565b810103126105f15761353c8391613250565b38613421565b503d613520565b8a513d89823e3d90fd5b90508781813d8311613581575b61356a8183612cee565b810103126105f15761357b90613250565b386133be565b503d613560565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600d60248201527f63616c6c6572217374616b6572000000000000000000000000000000000000006044820152fd5b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f2153656e646572000000000000000000000000000000000000000000000000006044820152fd5b919073ffffffffffffffffffffffffffffffffffffffff30818316148061376a575b1561370c576000541690813b156136e35760006020946136b5604051978896879586947f336d152300000000000000000000000000000000000000000000000000000000865260048601613307565b03925af19081156112bd576000916136cb575090565b613343915060203d81116134ab576134a38183612cee565b50505050507f336d15230000000000000000000000000000000000000000000000000000000090565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601460248201527f696e76616c696420616674657220706172616d730000000000000000000000006044820152fd5b5080600154163314613666565b1561377e57565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f21617574680000000000000000000000000000000000000000000000000000006044820152fd5b6002600554146137ed576002600555565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152fd5b9290604051927f23b872dd00000000000000000000000000000000000000000000000000000000602085015273ffffffffffffffffffffffffffffffffffffffff809216602485015216604483015260648201526064815260a081019181831067ffffffffffffffff841117612ca3576138c7926040526138c9565b565b73ffffffffffffffffffffffffffffffffffffffff16906139546040516138ef81612cd2565b6020938482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564858301526000808587829751910182855af13d15613a0a573d9161393983612d2f565b926139476040519485612cee565b83523d868885013e613b24565b908151806139625750505050565b828491810103126102b45750816139799101612e99565b1561398657808080612fd6565b608490604051907f08c379a00000000000000000000000000000000000000000000000000000000082526004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152fd5b606091613b24565b90919015613aa15750805115613a255790565b73d533a949740bb3306d119cc777fa900ba034cd523b15613a435790565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152fd5b815115613ab15750805190602001fd5b613aef906040519182917f08c379a00000000000000000000000000000000000000000000000000000000083526020600484015260248301906132a9565b0390fd5b90919015613aa15750805115613b065790565b734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b3b15613a435790565b91929015613b415750815115613b38575090565b3b15613a435790565b825190915015613ab15750805190602001fd5b60209081818403126106665780519067ffffffffffffffff821161066657019180601f84011215610666578251613b8a81612ea6565b93613b986040519586612cee565b818552838086019260051b820101928311610666578301905b828210613bbf575050505090565b838091613bcb84613250565b815201910190613bb1565b6002549060009173ffffffffffffffffffffffffffffffffffffffff80911690838181541692803b156104f557604080517f6b09169500000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff9590951660248601529391908290604490829084905af18015613e7057613e28575b50838251917f70a0823100000000000000000000000000000000000000000000000000000000808452306004850152602093848160248173d533a949740bb3306d119cc777fa900ba034cd525afa908115613e1e578491613ded575b5080613dda575b5084519081523060048201528381602481734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b5afa908115613dd0578391613d9d575b506004935080613d8a575b50613d1461407e565b600154168351928380927f12edb24c0000000000000000000000000000000000000000000000000000000082525afa918215613d81575083613d5e939492613d66575b5050614760565b6138c761442b565b613d7a92503d8091833e61114b8183612cee565b3880613d57565b513d85823e3d90fd5b613d979082845416613f92565b38613d0b565b9250509181813d8311613dc9575b613db58183612cee565b810103126106665760049185915138613d00565b503d613dab565b85513d85823e3d90fd5b613de79083855416613e7a565b38613cca565b809450858092503d8311613e17575b613e068183612cee565b810103126106665786925138613cc3565b503d613dfc565b86513d86823e3d90fd5b67ffffffffffffffff8195929511613e435782529238613c67565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b83513d87823e3d90fd5b613954604051613f0981613edd602096878301967fa9059cbb000000000000000000000000000000000000000000000000000000008852602484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612cee565b60405190613f1682612cd2565b8482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648583015260008094819251908273d533a949740bb3306d119cc777fa900ba034cd525af13d15613f8a573d90613f6f82612d2f565b91613f7d6040519384612cee565b82523d858784013e613a12565b606090613a12565b613954604051613ff581613edd602096878301967fa9059cbb000000000000000000000000000000000000000000000000000000008852602484016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b6040519061400282612cd2565b8482527f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c656485830152600080948192519082734e3fbd56cd56c3e72c1403e103b45db9da5b9d2b5af13d15614076573d9061405b82612d2f565b916140696040519384612cee565b82523d858784013e613af3565b606090613af3565b60408051907f13114a9d000000000000000000000000000000000000000000000000000000008252602090600473c9acb83ada68413a6aa57007bc720ee2e2b3c46d9383818381885afa908115614256576000916143fe575b508251947f70a0823100000000000000000000000000000000000000000000000000000000918287523084880152733432b6a60d23ca0dfca7761b7ab56459d9c964d09686816024818b5afa9081156143f3576000916143c6575b508181029181830414901517156143985761271090049081614261575b5050825190815230828201528381602481885afa90811561425657600091614229575b5080614180575b5050505050565b6000805484517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff90911693810193845260208401929092529094849286928391829060400103925af190811561310b57506141f5575b808080614179565b81813d8311614222575b6142098183612cee565b810103126106665761421a90612e99565b5038806141ed565b503d6141ff565b908482813d831161424f575b61423f8183612cee565b810103126102b457505138614172565b503d614235565b83513d6000823e3d90fd5b8573ffffffffffffffffffffffffffffffffffffffff85541660248751809481937f998cbb43000000000000000000000000000000000000000000000000000000008352898301525afa9081156131d65790869160009161435e575b5085517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116858201908152602081019390935291829081906040015b038160008a5af180156132105761432a575b8061414f565b8481813d8311614357575b61433f8183612cee565b810103126106665761435090612e99565b5038614324565b503d614335565b9182813d8311614391575b6143738183612cee565b810103126102b457506143129161438a8792613250565b90926142bd565b503d614369565b6011847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b908782813d83116143ec575b6143dc8183612cee565b810103126102b457505138614132565b503d6143d2565b86513d6000823e3d90fd5b908482813d8311614424575b6144148183612cee565b810103126102b4575051386140d7565b503d61440a565b600354604080517f02fb0c5e00000000000000000000000000000000000000000000000000000000815260009273ffffffffffffffffffffffffffffffffffffffff916020918316908281600481855afa9081156146b15786916146bb575b50614496575050505050565b83517f70a082310000000000000000000000000000000000000000000000000000000081523060048201528281602481855afa9081156146b1578691614684575b5060248385600154168751928380927fd9f96e8d0000000000000000000000000000000000000000000000000000000082523060048301525afa93841561467a57879461464a575b50501580614641575b6145a9575b5050806003541690835416813b156108e2578291602485949285935195869384927fc00007b000000000000000000000000000000000000000000000000000000000845260048401525af19081156145a0575061458c57808080614179565b6145968291612c8f565b6102b457806141ed565b513d84823e3d90fd5b82855416813b1561463d5784517f47e7ef2400000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff919091166004820152602481019290925284908290604490829084905af180156146305761461d575b8061452d565b61462990939193612c8f565b9138614617565b50505051903d90823e3d90fd5b8580fd5b50811515614528565b9080929450813d8311614673575b6146628183612cee565b8101031261463d575191388061451f565b503d614658565b86513d89823e3d90fd5b90508281813d83116146aa575b61469b8183612cee565b8101031261463d5751386144d7565b503d614691565b85513d88823e3d90fd5b90508281813d83116146e9575b6146d28183612cee565b8101031261463d576146e390612e99565b3861448a565b503d6146c8565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114612f455760010190565b80518210156147315760209160051b010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000915b81518310156149125773ffffffffffffffffffffffffffffffffffffffff92733432b6a60d23ca0dfca7761b7ab56459d9c964d0846147a3838661471d565b5116036147be575b6147b7919293506146f0565b9190614764565b836147c9828561471d565b51166040908151958680927f70a08231000000000000000000000000000000000000000000000000000000008252306004830152602098899160249586915afa908115613210576000916148e3575b5086976147b79697828793614836575b5097965050505050506147ab565b6148d7967fa9059cbb00000000000000000000000000000000000000000000000000000000968661486d6148d2976148a69661471d565b51169660005416915197889586015284016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101845283612cee565b6138c9565b38808083818881614828565b908882813d831161490b575b6148f98183612cee565b810103126102b45750516147b7614818565b503d6148ef565b915050565b92919261492382612ea6565b60409261493284519283612cee565b819581835260208093019160061b84019381851161066657915b84831061495b57505050505050565b8583830312610666578551908682019082821067ffffffffffffffff8311176149a25787928692845261498d86613250565b8152828601518382015281520192019161494c565b602460007f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b91908201809211612f455756fea26469706673582212200af7d1314e6e41efeecc06e9a64a57cc5a64aebb4c8a03142726887b78e2bc2464736f6c63430008110033604060e08152346200033b5762003361803803806200001e8162000340565b92833981019060c0818303126200033b5780516001600160401b03908181116200033b57820190601f8481840112156200033b57825190828211620002cc57602091601f1994620000758487858501160162000340565b978289528483830101116200033b57839060005b8381106200032657505060009188010152620000a782860162000366565b95620000b588870162000366565b620000c36060880162000366565b90620000e060a0620000d860808b0162000366565b990162000366565b986001600160a01b03908116918215620002e2577fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8c60018060a01b03199480866000541617600055815190600082528a820152a11690600354161760035560a0528051938411620002cc57600254926001938481811c91168015620002c1575b82821014620002ab578381116200025f575b5080928511600114620001f4575083945090839291600094620001e8575b50501b916000199060031b1c1916176002555b60805260c05251612fe590816200037c8239608051818181610e890152611b9b015260a0518181816114ba0152611bc3015260c051818181611bea01526120b80152f35b01519250388062000191565b929484908116600260005284600020946000905b888383106200024457505050106200022a575b505050811b01600255620001a4565b015160001960f88460031b161c191690553880806200021b565b85870151885590960195948501948793509081019062000208565b6002600052816000208480880160051c820192848910620002a1575b0160051c019085905b8281106200029457505062000173565b6000815501859062000284565b925081926200027b565b634e487b7160e01b600052602260045260246000fd5b90607f169062000161565b634e487b7160e01b600052604160045260246000fd5b8b5162461bcd60e51b815260048101889052601960248201527f4f776e657220616464726573732063616e6e6f742062652030000000000000006044820152606490fd5b8181018301518a820184015285920162000089565b600080fd5b6040519190601f01601f191682016001600160401b03811183821017620002cc57604052565b51906001600160a01b03821682036200033b5756fe608080604052600436101561001357600080fd5b60003560e01c90816306fdde03146125b757508063092193ab14611edb5780630a3be75714611e9f5780631627540c14611d6a5780631cf2a6f014611c4d578063445fbd0514611c1157806347f8495914611b46578063513872bd14611b0a57806353a47bb714611ab85780636472eee114610b5657806379ba509714610a1d5780638980f11f1461095f57806389fc08a01461085f5780638da5cb5b1461080d578063a147a2161461079b578063ad281c001461075f578063b61d27f61461066d578063bdacb303146105cd578063cb17d14f14610591578063d34dd80d14610555578063e839663b146104eb578063f43a7b1b1461015d5763fb9bbab01461011c57600080fd5b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020601154604051908152f35b600080fd5b34610158576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101585760043567ffffffffffffffff9182821161015857366023830112156101585781600401359283116101585760248083019360059382369183871b0101116101585773ffffffffffffffffffffffffffffffffffffffff948560005416331480156104de575b6101fb90612f19565b6801000000000000000082116104b0576004548260045580831061046f575b5080600460005260005b83811061043557505060005b600454811015610401578661024e610249838686612f9f565b612f7e565b16600052858552604060002060017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00825416179055610291610249828585612f9f565b600454907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019182116103d3576040805173ffffffffffffffffffffffffffffffffffffffff92909216825260208201929092528892917f5d71af466624a92026f2f6b108f22de71d7c0fc766d030a9201218fde1bf143f91a160ff60105416610326575b6103219150612825565b610230565b856004610332836128b7565b9190549160405195869384927febe2b12b00000000000000000000000000000000000000000000000000000000845260031b1c165afa80156103c757600090610398575b6103219250600f80548211610390575b5050879150610317565b558880610386565b508582813d83116103c0575b6103ae8183612763565b81010312610158576103219151610376565b503d6103a4565b6040513d6000823e3d90fd5b857f4e487b710000000000000000000000000000000000000000000000000000000060005260116004526000fd5b60105460ff811661040e57005b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016601055005b6001908661044284612f7e565b930192817f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b015501610224565b827f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b91820191015b8181106104a4575061021a565b60008155600101610497565b827f4e487b710000000000000000000000000000000000000000000000000000000060005260416004526000fd5b50600354861633146101f2565b346101585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101585773ffffffffffffffffffffffffffffffffffffffff610537612802565b166000526005602052602060ff604060002054166040519015158152f35b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020600d54604051908152f35b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020600f54604051908152f35b346101585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857610604612802565b73ffffffffffffffffffffffffffffffffffffffff90816000541633148015610660575b61063190612f19565b167fffffffffffffffffffffffff00000000000000000000000000000000000000006003541617600355600080f35b5060035482163314610628565b346101585760607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576106a4612802565b60443567ffffffffffffffff91828211610158573660238301121561015857816004013592831161015857366024848401011161015857602460009392849361070f73ffffffffffffffffffffffffffffffffffffffff808754163314908115610751575b50612f19565b8060405193849301833781018481520391602435905af161072e612d92565b9061074d604051928392151583526040602084015260408301906127a4565b0390f35b905060035416331488610709565b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020600c54604051908152f35b346101585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101585773ffffffffffffffffffffffffffffffffffffffff6107e7612802565b16600052600960205260408060002054600e602052816000205482519182526020820152f35b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602073ffffffffffffffffffffffffffffffffffffffff60005416604051908152f35b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857604051806004548083526020809301809160046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b9060005b868282106109355786866108df82880383612763565b604051928392818401908285525180915260408401929160005b82811061090857505050500390f35b835173ffffffffffffffffffffffffffffffffffffffff16855286955093810193928101926001016108f9565b835473ffffffffffffffffffffffffffffffffffffffff16855290930192600192830192016108c9565b346101585760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158577f55350610fe57096d8c0ffa30beede987326bccfcb0b4415804164d0dd50ce8b16109b7612802565b602435906109f38273ffffffffffffffffffffffffffffffffffffffff6109ed8160005416918233149081156107515750612f19565b83612df0565b6040805173ffffffffffffffffffffffffffffffffffffffff9290921682526020820192909252a1005b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126101585760015473ffffffffffffffffffffffffffffffffffffffff90818116803303610ad2577fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c60406000549481519086168152836020820152a17fffffffffffffffffffffffff00000000000000000000000000000000000000009283161760005516600155005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f596f75206d757374206265206e6f6d696e61746564206265666f726520796f7560448201527f2063616e20616363657074206f776e65727368697000000000000000000000006064820152fd5b346101585760407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857610b8d612802565b602435610bd08183604051610ba181612747565b601b81527f67617567655f72656c61746976655f7765696768745f777269746500000000006020820152612c4e565b610c1a601154610c1581604051610be681612747565b601981527f676175676552656c61746976655772697465436f756e746572000000000000006020820152612a14565b612825565b60115573ffffffffffffffffffffffffffffffffffffffff82166000526005602052610c4d60ff60406000205416612852565b600754804211610e0b575b505060115490604051916080830183811067ffffffffffffffff821117610ddc5773ffffffffffffffffffffffffffffffffffffffff936000928392604052604182527f6761756765207765696768742077726974652072657475726e2076616c75652c60208301527f2067617567652c206d736773656e6465722c2063616c6c656420636f756e746560408301527f72000000000000000000000000000000000000000000000000000000000000006060830152610d916040518092610d5160208301957f8ef3f3990000000000000000000000000000000000000000000000000000000087526080602485015260a48401906127a4565b9089891660448401523360648401526084830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b51906a636f6e736f6c652e6c6f675afa508181166000526009602052610dc3604060002054610dbe6129db565b612a14565b1660005260096020526020604060002054604051908152f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610e7290604051610e1b8161272b565b602381527f626c6f636b2e74696d657374616d70203e2074696d655f746f74616c5f73746f60208201527f726564000000000000000000000000000000000000000000000000000000000060408201524290612b35565b73ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000166040517f513872bd000000000000000000000000000000000000000000000000000000008152602081600481855afa9081156103c757600091611a86575b506007556040517f0a3be757000000000000000000000000000000000000000000000000000000008152602081600481855afa9081156103c757600091611a54575b506006556000916000600454905b818110611969575050610fcf60009260209273ffffffffffffffffffffffffffffffffffffffff871673ffffffffffffffffffffffffffffffffffffffff8716148061194a575b610f879061291d565b600a8590556040517f6472eee1000000000000000000000000000000000000000000000000000000008152306004820152602481019190915293849283919082906044820190565b03925af180156103c757600090611916575b611025915080600855604051610ff681612747565b601e81527f746f74616c5f66616d696c69616c5f72656c61746976655f77656967687400006020820152612a14565b60005b6004548110156112d35773ffffffffffffffffffffffffffffffffffffffff611050826128b7565b90549060031b1c16600052600560205260ff6040600020541661107c575b61107790612825565b611028565b806110e473ffffffffffffffffffffffffffffffffffffffff6110a06004946128b7565b90549060031b1c16826040516110b581612747565b601181527f616374697665206761756765206c6f6f700000000000000000000000000000006020820152612bb7565b602073ffffffffffffffffffffffffffffffffffffffff611104836128b7565b90549060031b1c16604051938480927f64f2c0600000000000000000000000000000000000000000000000000000000082525afa80156103c75760009061129f575b611077925073ffffffffffffffffffffffffffffffffffffffff611169836128b7565b90549060031b1c16600052600b908160205260406000205561121973ffffffffffffffffffffffffffffffffffffffff6111a2846128b7565b90549060031b1c1673ffffffffffffffffffffffffffffffffffffffff6111c8856128b7565b90549060031b1c1660005282602052604060002054906040516111ea81612747565b601e81527f67617567655f746f5f746f74616c5f636f6d62696e65645f77656967687400006020820152612c4e565b73ffffffffffffffffffffffffffffffffffffffff611237836128b7565b90549060031b1c16600052602052611298611259604060002054600a54612982565b80600a5560405161126981612747565b601e81527f66616d696c69616c5f746f74616c5f636f6d62696e65645f77656967687400006020820152612a14565b905061106e565b506020823d6020116112cb575b816112b960209383612763565b81010312610158576110779151611146565b3d91506112ac565b509060005b60045481101561146e578073ffffffffffffffffffffffffffffffffffffffff61130461132a936128b7565b919054600392831b1c16600052600560205260ff6040600020541661132f575b50612825565b6112d8565b61146890611398836040516113438161272b565b603181527f7570646174696e6720677561676520746f74616c20636f6d62696e656420776560208201527f696768747320726562616c616e63696e670000000000000000000000000000006040820152612a14565b73ffffffffffffffffffffffffffffffffffffffff6113b6846128b7565b905490831b1c16600052600b6020526113e36113da6040600020546008549061298f565b600a54906129a2565b73ffffffffffffffffffffffffffffffffffffffff611401856128b7565b905490841b1c166000526009908160205260406000205573ffffffffffffffffffffffffffffffffffffffff80611437866128b7565b905490851b1c1692611448866128b7565b9054911b1c16600052602052604060002054906114636129db565b612c4e565b84611324565b506040517f092193ab000000000000000000000000000000000000000000000000000000008152306004820152604081602481600073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af180156103c7576000916000916118da575b5061156d90600d9281845580600c557fee71a95c651665fca6d5f74125f0b232c374a2cd53b6ca6a20daf332e4d142ec6060604051308152836020820152846040820152a160405161153e81612747565b602081527f7265776172647320636c61696d65642066726f6d206469737472696275746f726020820152612b35565b60005b6004548110156116c4578073ffffffffffffffffffffffffffffffffffffffff61159c6115c1936128b7565b919054600392831b1c16600052600560205260ff604060002054166115c65750612825565b611570565b6116be9061160b6113da865473ffffffffffffffffffffffffffffffffffffffff6115f0876128b7565b905490861b1c16600052600b6020526040600020549061298f565b73ffffffffffffffffffffffffffffffffffffffff611629856128b7565b905490841b1c16600052600e908160205260406000205573ffffffffffffffffffffffffffffffffffffffff8061165f866128b7565b905490851b1c1692611670866128b7565b9054911b1c166000526020526040600020549060405161168f81612747565b601581527f67617567655f746f5f7265776172645f74616c6c7900000000000000000000006020820152612c4e565b85611324565b505060005b6004548110156118d0576116dc816128b7565b9190549173ffffffffffffffffffffffffffffffffffffffff60039381871692851b1c16141580611894575b61171c575b6117179150612825565b6116c9565b6117a673ffffffffffffffffffffffffffffffffffffffff61173d836128b7565b905490851b1c16826040516117518161272b565b602a81527f63616c6c696e672073796e635f67617567655f77656967687473206f6e206f7460208201527f68657220676175676573000000000000000000000000000000000000000000006040820152612bb7565b73ffffffffffffffffffffffffffffffffffffffff6117c4826128b7565b905490841b1c16803b1561015857600080916024604051809481937ff77e34d1000000000000000000000000000000000000000000000000000000008352600160048401525af180156103c757611717936118809273ffffffffffffffffffffffffffffffffffffffff92611885575b5061183e846128b7565b9054911b1c168260405161185181612747565b601581527f676175676520776569676874732073796e6365642100000000000000000000006020820152612bb7565b61170d565b61188e90612717565b87611834565b5073ffffffffffffffffffffffffffffffffffffffff6118b3826128b7565b905490841b1c16600052600560205260ff60406000205416611708565b5090508180610c58565b9150506040813d60401161190e575b816118f660409383612763565b810103126101585761156d60208251920151906114ed565b3d91506118e9565b506020813d602011611942575b8161193060209383612763565b81010312610158576110259051610fe1565b3d9150611923565b5073ffffffffffffffffffffffffffffffffffffffff87163314610f7e565b73ffffffffffffffffffffffffffffffffffffffff611987826128b7565b919054600392831b1c1673ffffffffffffffffffffffffffffffffffffffff8816146119bd575b506119b890612825565b610f37565b81955073ffffffffffffffffffffffffffffffffffffffff906119e26119b8936128b7565b9054911b1c1694611a4e866040516119f98161272b565b603481527f67617567652063616c6c696e6720666f756e64212063616c6c65722c2067617560208201527f676520696e7075742c206d73672e73656e6465720000000000000000000000006040820152612aa3565b906119ae565b90506020813d602011611a7e575b81611a6f60209383612763565b81010312610158575184610f29565b3d9150611a62565b90506020813d602011611ab0575b81611aa160209383612763565b81010312610158575184610ee7565b3d9150611a94565b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857602073ffffffffffffffffffffffffffffffffffffffff60015416604051908152f35b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020600754604051908152f35b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857608073ffffffffffffffffffffffffffffffffffffffff806003541690604051918252807f0000000000000000000000000000000000000000000000000000000000000000166020830152807f00000000000000000000000000000000000000000000000000000000000000001660408301527f0000000000000000000000000000000000000000000000000000000000000000166060820152f35b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020600454604051908152f35b346101585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857600435611d1d73ffffffffffffffffffffffffffffffffffffffff91826000541633148015611d5d575b611caf90612f19565b7fbe2fc14b97be6926b6b1ebbbaf3bb777a5965126b8453d3fc8226297c8ca29c2611cd9826128b7565b905490611d15848760405194859460031b1c16836020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b0390a16128b7565b90549060031b1c16600052600560205260406000207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008154169055600080f35b5060035483163314611ca6565b346101585760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857611da1612802565b73ffffffffffffffffffffffffffffffffffffffff9081600054163303611e1b577f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce229160209116807fffffffffffffffffffffffff00000000000000000000000000000000000000006001541617600155604051908152a1005b60846040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4f6e6c792074686520636f6e7472616374206f776e6572206d6179207065726660448201527f6f726d207468697320616374696f6e00000000000000000000000000000000006064820152fd5b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610158576020600654604051908152f35b34610158576020807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857611f13612802565b90611f79604051611f238161272b565b602481527f46414d494c593a206469737472696275746552657761726428292063616c6c65838201527f642062790000000000000000000000000000000000000000000000000000000060408201523390612aa3565b611f8b601254610c1581610dbe612ce6565b60125573ffffffffffffffffffffffffffffffffffffffff8083169081600052600580845260ff90611fc38260406000205416612852565b600f549182421015612123575b604086867fce236b79ef5ebedc7ba64c0bf2b1716af73cc23ba80f8ba2ff52455c72bfa7bf8a82600052600e845261206585600020548287516120128161272b565b602a81527f44697374726962757465205245574152442c20706f737420706572696f644669888201527f6e69736820636865636b0000000000000000000000000000000000000000000089820152612c4e565b82600052600e84528460002054926120b18483885161208381612747565b601281527f4761756765207265776172642074616c6c79000000000000000000000000000089820152612c4e565b6120dc84837f0000000000000000000000000000000000000000000000000000000000000000612df0565b6000908152600e855285812081905585902054855173ffffffffffffffffffffffffffffffffffffffff9290921682526020820152604090a1600c54918351928352820152f35b60405161212f8161272b565b612188602f918281527f46414d494c593a2064697374726962757465526577617264282920706572696f898201527f6446696e697368207265616368656400000000000000000000000000000000006040820152612d1f565b834203934285116125885762093a808095049460019586810180911161258857818102918183041490151715612588576121c490879392612982565b600f55600454600091825b828110612480575050501685811480612477575b6121ec9061291d565b6000845b612304575b5050505050507fce236b79ef5ebedc7ba64c0bf2b1716af73cc23ba80f8ba2ff52455c72bfa7bf60409361225b855161222d81612747565b601681527f636f6d706c65746564206661726d2073796e63696e670000000000000000000086820152612d1f565b612269601254610dbe612ce6565b6000601255600080612279612ce6565b87516122eb816122b98a8201947fb60e72cc0000000000000000000000000000000000000000000000000000000086528c602484015260648301906127a4565b856044830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b51906a636f6e736f6c652e6c6f675afa50938580611fd0565b60045481101561247257808261231a88936128b7565b939054600394851b1c1614158061244d575b612341575b61233b9150612825565b846121f0565b6123908761234e836128b7565b905490851b1c168260405161236281612747565b601681527f63616c6c696e672073796e63206f6e20676175676573000000000000000000008d820152612bb7565b8661239a826128b7565b905490841b1c16803b1561015857600080916004604051809481937ffff6cae90000000000000000000000000000000000000000000000000000000083525af180156103c75761233b93612439928a9261243e575b506123f9846128b7565b9054911b1c1660405161240b81612747565b600681527f53594e43454400000000000000000000000000000000000000000000000000008c820152612aa3565b612331565b61244790612717565b8d6123ef565b5086612458826128b7565b905490841b1c16600052848952836040600020541661232c565b6121f5565b503386146121e3565b90919293806124fd8c84612493816128b7565b9490547f46414d494c593a20646973747269627574655265776172642829207365742060604051946124c48661272b565b8a86528501527f5f67617567655f63616c6c696e676000000000000000000000000000000000006040850152600395861b1c1691612bb7565b81612507846128b7565b905490831b1c168b1461252a575b505061252090612825565b90879392916121cf565b829550612539612520936128b7565b9054911b1c169361257f858c7f67617567652063616c6c696e67206973000000000000000000000000000000006040519161257383612747565b60108352820152612aa3565b9050878c612515565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b346101585760007ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261015857600060025490600182811c9181841691821561270d575b60209485851084146126de5785879486865291826000146126a0575050600114612643575b5061262f92500383612763565b61074d6040519282849384528301906127a4565b84915060026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace906000915b85831061268857505061262f935082010185612622565b80548389018501528794508693909201918101612671565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168582015261262f95151560051b85010192508791506126229050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b92607f16926125fd565b67ffffffffffffffff8111610ddc57604052565b6060810190811067ffffffffffffffff821117610ddc57604052565b6040810190811067ffffffffffffffff821117610ddc57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610ddc57604052565b919082519283825260005b8481106127ee5750507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8460006020809697860101520116010190565b6020818301810151848301820152016127af565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361015857565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146125885760010190565b1561285957565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4761756765206e6f7420616374697665000000000000000000000000000000006044820152fd5b6004548110156128ee5760046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b1561292457565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4e6f742061206368696c642067617567650000000000000000000000000000006044820152fd5b9190820180921161258857565b8181029291811591840414171561258857565b81156129ac570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b604051906129e882612747565b601d82527f67617567655f746f5f6c6173745f72656c61746976655f7765696768740000006020830152565b600091908291612a906040518092612a5e60208301957fb60e72cc0000000000000000000000000000000000000000000000000000000087526040602485015260648401906127a4565b906044830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b51906a636f6e736f6c652e6c6f675afa50565b600091908291612a90604051809273ffffffffffffffffffffffffffffffffffffffff612b0260208401967f319af3330000000000000000000000000000000000000000000000000000000088526040602486015260648501906127a4565b91166044830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b60009291612a908493604051928391612b8060208401967fca47c4eb0000000000000000000000000000000000000000000000000000000088526060602486015260848501906127a4565b9160448401526064830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b73ffffffffffffffffffffffffffffffffffffffff612a906000948594604051938492612c1660208501977f1c7ec4480000000000000000000000000000000000000000000000000000000089526060602487015260848601906127a4565b926044850152166064830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b60009291612a90849360405192839173ffffffffffffffffffffffffffffffffffffffff612cae60208501977f0d26b9250000000000000000000000000000000000000000000000000000000089526060602487015260848601906127a4565b921660448401526064830152037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b60405190612cf382612747565b601e82527f64697374726962757465207265776172642063616c6c20636f756e74657200006020830152565b60008091604051612a9081612d6660208201947f41304fac0000000000000000000000000000000000000000000000000000000086526020602484015260448301906127a4565b037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08101835282612763565b3d15612deb573d9067ffffffffffffffff8211610ddc5760405191612ddf60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184612763565b82523d6000602084013e565b606090565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff9093166024820152604481019390935291612e4e8160648101612d66565b600092839283809351925af190612e63612d92565b9082612ed1575b505015612e7357565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5472616e7366657248656c7065723a205452414e534645525f4641494c4544006044820152fd5b9080925051918215928315612eeb575b5050503880612e6a565b819293509060209181010312612f155760200151908115158203612f125750388080612ee1565b80fd5b5080fd5b15612f2057565b60646040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4e6f74206f776e6572206f722074696d656c6f636b00000000000000000000006044820152fd5b3573ffffffffffffffffffffffffffffffffffffffff811681036101585790565b91908110156128ee5760051b019056fea26469706673582212203c0be083426dbf653278b476d5c139fd340993044845b93601fbb5ec934bd5f764736f6c634300081100336080604090808252346200058d5762005ed480380380916200002282856200073c565b833981019060e0818303126200058d576200003d8162000760565b60208201519093906001600160401b0381116200058d5783620000629184016200078d565b818301519092906001600160401b0381116200058d5784620000869183016200078d565b60608201519091906001600160401b0381116200058d57810185601f820112156200058d57805191620000b98362000775565b91620000c8865193846200073c565b838352602083016020819560051b830101918983116200058d57602001905b8282106200072b5750505060808101516001600160401b0381116200058d5787620001149183016200078d565b60a082015190976001600160401b0382116200058d576200013e60c091620001469385016200078d565b920162000760565b976001600160a01b03169687156200071a577fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c8660018060a01b031999808b6000541617600055815190600082526020820152a16001600255671bc16d674ec80000806006556301e1338060075562091050600855673782dace9d9000009081600955600a55600b55865160018060401b0381116200045057680100000000000000008111620004505760105481601055808210620006dc575b50602088016010600052602060002060005b838110620006be5750508251929150506001600160401b03821162000450576801000000000000000082116200045057602090601154836011558084106200069d575b50016011600052602060002060005b8381106200067f5750508251929150506001600160401b03821162000450576801000000000000000082116200045057602090601254836012558084106200065e575b50016012600052602060002060005b838110620006405750509151929150506001600160401b038211620004505768010000000000000000821162000450576013548260135580831062000602575b506013600052602060002060005b838110620005ed575050505060005b835181101562000466576001600160a01b0362000331828662000816565b5116600052601460205280836000205560158054680100000000000000008110156200045057600181018083558110156200043a5760009182526020822001556001600160a01b0362000385828462000816565b51166001600160a01b036200039b838762000816565b5116600052600f60205283600020908682541617905560198054680100000000000000008110156200045057600181018083558110156200043a576000918252602082200155601a8054680100000000000000008110156200045057600181018083558110156200043a5760009182526020822001556000198114620004245760010162000313565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b8285874260055562093a80420180421162000424576004908155602780548416735f4ec3df9cbd43714fe2740f5e3616155c5b841917905560218054600160281b600160c81b031916602893841b600160281b600160c81b0316179081905584516313ce416760e21b815292602092849290918391901c6001600160a01b03165afa9081156200059b57600091620005a6575b50602060049160018060a01b0316808460225416176022558451928380926303aa30b960e11b82525afa9081156200059b5760009162000554575b5060018060a01b0316906023541617602355516156a890816200082c8239f35b90506020813d60201162000592575b8162000572602093836200073c565b810103126200058d57620005869062000760565b8362000534565b600080fd5b3d915062000563565b83513d6000823e3d90fd5b90506020813d602011620005e4575b81620005c4602093836200073c565b810103126200058d576020620005dc60049262000760565b9150620004f9565b3d9150620005b5565b60019060208451940193818401550162000304565b601360005262000639907f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090908101908401620007fd565b38620002f6565b82516001600160a01b031681830155602090920191600101620002b6565b6200067890601260005284846000209182019101620007fd565b38620002a7565b82516001600160a01b03168183015560209092019160010162000264565b620006b790601160005284846000209182019101620007fd565b3862000255565b82516001600160a01b03168183015560209092019160010162000212565b601060005262000713907f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae672908101908301620007fd565b3862000200565b8551639b15e16f60e01b8152600490fd5b8151815260209182019101620000e7565b601f909101601f19168101906001600160401b038211908210176200045057604052565b51906001600160a01b03821682036200058d57565b6001600160401b038111620004505760051b60200190565b81601f820112156200058d57805191620007a78362000775565b92620007b760405194856200073c565b808452602092838086019260051b8201019283116200058d578301905b828210620007e3575050505090565b838091620007f18462000760565b815201910190620007d4565b81811062000809575050565b60008155600101620007fd565b80518210156200043a5760209160051b01019056fe60406080815260048036101561001457600080fd5b600091823560e01c9182628cc2621461373957826304acbb99146136755782630d7bac4f1461365557826312edb24c146135765782631627540c146134b857826317b18c89146132b95782631bcb7d901461325e5782631c1f78eb146131c55782631e090f01146130c15782631face856146130a0578263218751b21461306b578263231b68dc1461303d57826328408bab14612ff75782632c0c2a0a14612fd157826336f89af214612f8d578263386a952514612f6f578263387edc8614612ee357826341a16f3f14612e9c5782634ef39f8214612e2b5782634f39059c14612df65782634fd2b53614612dc957826353a47bb714612d945782635518977314612c5b5782635bfd925814612c3e57826364f2c06014612c1f578263670322f814612bc05782636933924514612b7c5782636c430dbb14612b385782636e27cef914612b1957826370641a3614612af057826372f702f314612ab8578263741d3c18146129d3578263774d4ae7146129aa57826378aae1cb146125a95782637910d17b146125695782637970833e146124e157826379ba5097146124205782637ae11f33146123075782637d6ef08e146122c35782637f472e5414612280578263806465e914611fef5782638170820c14611f675782638395cef414611dcb5782638980f11f14611d465782638b870e33146116695782638bad86a7146116265782638da5cb5b146115f357826391cf600a1461152c5782639637927f14611508578263a0f2347614611399578263a22cb465146112e6578263aa1d4fce146112c7578263b10d2b4714611266578263b94c4dcb14611247578263bdb123e314611227578263c00007b0146111b4578263c354382614611171578263c8f33c9114611152578263ca6df29d1461110e578263cc2abd6414611046578263cdc82e8014611027578263d2010fb414611008578263d42fc9b414610fe2578263d5e1a9c614610e96578263d7400d5614610d53578263d9d80e3d14610c24578263d9f96e8d14610be0578263de1a655114610b24578263e01f62bf14610b05578263e034bae014610ac5578263e1ba95d214610a15578263e7f30582146108e6578263ebe2b12b146108c7578263f288baf6146108a8578263f2a8d34914610889578263f2caeb1e14610862578263f77e34d11461063e578263facefb64146104a3578263ff61011a146103b057505063fff6cae91461039257600080fd5b346103ad57806003193601126103ad576103aa6147c0565b80f35b80fd5b9091503461049f576103c136613809565b93919392909233865260209160258352838720858852835273ffffffffffffffffffffffffffffffffffffffff848820961695868852835283872054156104785750907fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a79291338752602582528287208588528252828720868852825261044c838820918254613d4f565b90553386526025815281862084875281528186208587528152818620549082519485528401523392a380f35b83517f34ed7e71000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b91503461049f5760c060031936011261049f57366023121561049f57805160c0810181811067ffffffffffffffff82111761061257825260c48136821161060e5784905b8282106105fe5750505073ffffffffffffffffffffffffffffffffffffffff845416331415806105e0575b6105b957608081019182519360a08301948551116105925760018451108015610587575b610560575081516006556020820151600a55810151600b5560600151600955516007555160085580f35b90517fdc851289000000000000000000000000000000000000000000000000000000008152fd5b506001855110610536565b90517faa19932b000000000000000000000000000000000000000000000000000000008152fd5b50517ffee4291a000000000000000000000000000000000000000000000000000000008152fd5b50738412ebf45bac1b340bbe8f318b928c466c4e39ca331415610512565b81358152602091820191016104e7565b8580fd5b6024856041867f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b83903461085e57602091826003193601126103ad5761065b613865565b92815b60115481101561085a57610671816139eb565b73ffffffffffffffffffffffffffffffffffffffff809254600392831b1c166106a5575b50506106a090613d15565b61065e565b868715610843575b1561069557816106bc846139eb565b90548a517f6472eee1000000000000000000000000000000000000000000000000000000008152308a820190815242602082015290938893859390871b1c169082908a90829060400103925af1908115610839579187939186938891610802575b506107649061072b87613a59565b90919082549060031b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811b9283911b16911916179055565b61076d856139eb565b9054911b1c168851928380927f513872bd0000000000000000000000000000000000000000000000000000000082525afa9081156107f85784916107c5575b50906107be6106a09261072b83613afe565b9087610695565b90508281813d83116107f1575b6107dc8183613926565b810103126107ed57516107be6107ac565b8380fd5b503d6107d2565b87513d86823e3d90fd5b929450509181813d8311610832575b61081b8183613926565b8101031261060e579184916107648894519061071d565b503d610811565b89513d88823e3d90fd5b5061084d83613afe565b905490821b1c42116106ad565b8280f35b5080fd5b9083346103ad5760206003193601126103ad575061088260209235613bb0565b9051908152f35b83823461085e578160031936011261085e57602090600b549051908152f35b83823461085e578160031936011261085e57602090600a549051908152f35b9091503461049f578260031936011261049f5760209250549051908152f35b91503461049f57602091826003193601126107ed57610903613760565b90338552600d845260ff8386205416156109ee5750338452600e835261098e82852073ffffffffffffffffffffffffffffffffffffffff80931690818752855260ff84872054161590338752600e865284872090875285528386209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b828052818420541633146109a0578280f35b806109e69184207fffffffffffffffffffffffff00000000000000000000000000000000000000008154169055601d8352601f8185205493338652528320918254613d42565b905538808280f35b82517fb9e5cf7c000000000000000000000000000000000000000000000000000000008152fd5b91503461049f578260031936011261049f5773ffffffffffffffffffffffffffffffffffffffff83541633141580610aa7575b610a8157826021547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0060ff808316151691161760215580f35b517ffee4291a000000000000000000000000000000000000000000000000000000008152fd5b50738412ebf45bac1b340bbe8f318b928c466c4e39ca331415610a48565b83823461085e57608060031936011261085e57602090610afc610ae6613760565b610aee613788565b90606435916044359161546b565b90519015158152f35b83823461085e578160031936011261085e57602090601b549051908152f35b9091503461049f578160031936011261049f57610b3f613760565b91610b48613788565b9273ffffffffffffffffffffffffffffffffffffffff928386541633141580610bcf575b610ba8575082168452600f602052832091167fffffffffffffffffffffffff000000000000000000000000000000000000000082541617905580f35b82517fa38bddf4000000000000000000000000000000000000000000000000000000008152fd5b50610bda8233613967565b15610b6c565b83823461085e57602060031936011261085e578060209273ffffffffffffffffffffffffffffffffffffffff610c14613760565b168152601d845220549051908152f35b91503461049f57610c3436613840565b90926002805414610d2c5760028055610c4c3361433a565b3385526024602052610c69610c6385858820613874565b50614dea565b908215610d05575090610ce67f3ce1c1c6e7e1e9ea494c468ec5039855a9d5333a54460cda9648f5d34e538e5c9392610cc18373ffffffffffffffffffffffffffffffffffffffff60215460281c16309033906150eb565b602081015190610cd48486830151613d4f565b60806060830151920151928833615289565b610cf081336152e1565b815193845260208401523392a2600160025580f35b83517f063921df000000000000000000000000000000000000000000000000000000008152fd5b82517fcb073ccf000000000000000000000000000000000000000000000000000000008152fd5b91503461049f576020806003193601126107ed5773ffffffffffffffffffffffffffffffffffffffff80610d85613760565b1693848652600d835260ff848720541615610e6f57848652600e8352838620338752835260ff848720541615610e485750610e179291601f91338752818052808488205416610e1c575b50338652808052828620857fffffffffffffffffffffffff0000000000000000000000000000000000000000825416179055601d815282862054948652528320918254613d4f565b905580f35b601d8252838720549082805284882054168752828252610e40848820918254613d42565b905538610dcf565b83517f4d5a416b000000000000000000000000000000000000000000000000000000008152fd5b83517fb9e5cf7c000000000000000000000000000000000000000000000000000000008152fd5b91503461049f57608060031936011261049f57610eb1613760565b91610eba6137ab565b906064359373ffffffffffffffffffffffffffffffffffffffff918286168603610fde578287541633141580610fcd575b610fa6575091610f976103aa959492610f659416918288526014602052610f51610f17858a20546139b4565b6024359082549060031b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811b9283911b16911916179055565b8288526014602052610f65848920546139eb565b90919082549060031b9173ffffffffffffffffffffffffffffffffffffffff9283811b93849216901b16911916179055565b85526014602052842054613a22565b84517fa38bddf4000000000000000000000000000000000000000000000000000000008152fd5b50610fd88233613967565b15610eeb565b8680fd5b83823461085e57602060031936011261085e57602090610882611003613760565b613fd0565b83823461085e578160031936011261085e576020906003549051908152f35b83823461085e578160031936011261085e576020906006549051908152f35b9091503461049f57606060031936011261049f57611062613865565b9161106b613856565b916044359182151580930361060e5773ffffffffffffffffffffffffffffffffffffffff865416331415806110f0575b610a8157505061ff00907fffffffffffffffffffffffffffffffffffffffffffffffffffffffff000000ff63ff00000062ff00006021549360101b1695151560181b1691161791151560081b16171760215580f35b50738412ebf45bac1b340bbe8f318b928c466c4e39ca33141561109b565b83823461085e57602060031936011261085e578060209273ffffffffffffffffffffffffffffffffffffffff611142613760565b1681526024845220549051908152f35b83823461085e578160031936011261085e576020906005549051908152f35b83823461085e57602060031936011261085e5760209073ffffffffffffffffffffffffffffffffffffffff6111ac6111a7613760565b614046565b915191168152f35b9083346103ad5760206003193601126103ad57506111d0613760565b91600280541461120057506111ec6111fc9260028055336144ea565b90600160025551918291826137ce565b0390f35b90517fcb073ccf000000000000000000000000000000000000000000000000000000008152fd5b83823461085e578160031936011261085e5760209051641eb1206cb38152f35b83823461085e578160031936011261085e576020906007549051908152f35b83823461085e57606060031936011261085e5780602092611285613760565b61128d6137ab565b73ffffffffffffffffffffffffffffffffffffffff9182168352602586528383206024358452865283832091168252845220549051908152f35b83823461085e578160031936011261085e576020906009549051908152f35b83823461085e578060031936011261085e57611300613760565b90611309613856565b90338452602660205273ffffffffffffffffffffffffffffffffffffffff81852093169283855260205261136a828286209060ff7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0083541691151516179055565b5190151581527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3160203392a380f35b9091503461049f57602092836003193601126103ad576113b7613760565b9173ffffffffffffffffffffffffffffffffffffffff8451937f70a082310000000000000000000000000000000000000000000000000000000085521681840152848360248173c8418af6358ffdda74e09ca9cc3fe03ca6adc5b05afa9283156114fe5782936114cf575b50670de0b6b3a764000092838102908082048514811517156114a3576ec097ce7bc90715b34b9f10000000000293818504149015171561147757505061088290611471600b5460035490613b35565b90613b77565b9060116024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b6024846011857f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b9092508481813d83116114f7575b6114e78183613926565b8101031261085e57519138611422565b503d6114dd565b84513d84823e3d90fd5b83823461085e578160031936011261085e5760209060ff6021541690519015158152f35b83823461085e57602060031936011261085e57611547613760565b73ffffffffffffffffffffffffffffffffffffffff9081845416331415806115d5575b6115ad57168252600d6020528120805460ff81811615167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00909116179055905080f35b8483517ffee4291a000000000000000000000000000000000000000000000000000000008152fd5b50738412ebf45bac1b340bbe8f318b928c466c4e39ca33141561156a565b83823461085e578160031936011261085e5773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b83823461085e57602060031936011261085e576111fc9061164d611648613760565b614f78565b9251918252602082015260408101919091529081906060820190565b9083346103ad5760c06003193601126103ad57611684613760565b9261168d613788565b604435926064356084359384151580950361049f5760a4359760029485805414611d1e5785805573ffffffffffffffffffffffffffffffffffffffff80921693848652602097602689528a8720338852895260ff8b8820541615611c5a575b8a9b61170e8b9c51976116fe896138bf565b808952868c8a019616865261433a565b61171a8585511661433a565b858d8b839d888b5116803b611b72575b5091505061173c915086895116615096565b90858551168015908115611b65575b50611b3d57606082019283514210801590611b2c575b611b04578e8301805186118015611afc575b611ad3578f91928f8e948e6001928f958f8e916117938e84845116615371565b518d03611aaa576117a69350511661522e565b149283611a7f575b50505090506000146119c35750509180828c8b97957f9eb672f91cd06e0df204922695050e4f5be9311e33f7a2f0ef944efa0a80b90a8e8c8c8f9b99868d8f926117fd848d6024935116615096565b918c8c5116865252818420548310611980575b50505050505b61182383878751166152e1565b858951169261184c8c888851169651938493846040919493926060820195825260208201520152565b0390a3511692833b61186b575b8b8b878760018c558351928352820152f35b83929187915116916118e18d51978896879586947f336d15230000000000000000000000000000000000000000000000000000000086528501919060a0939173ffffffffffffffffffffffffffffffffffffffff8092168452166020830152604082015260806060820152600060808201520190565b03925af1908115611976577ff1053bfb00000000000000000000000000000000000000000000000000000000917fffffffff00000000000000000000000000000000000000000000000000000000918491611949575b5016146103ad57838382808080611859565b6119699150863d881161196f575b6119618183613926565b8101906154e5565b89611937565b503d611957565b87513d84823e3d90fd5b8181015115611810576060429101511161199b575b38611810565b6119ab928a8a5116815220613874565b50016119b8848254613d4f565b90558c8c8c86611995565b84959c9b9a508284956119e5949551169260808c8401519151930151936153f4565b82825116855260248752888520547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8101908111611a53579280899a9b92938c7f9eb672f91cd06e0df204922695050e4f5be9311e33f7a2f0ef944efa0a80b90a9b97958b979c8d99611816565b60248660118d7f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b600393506024611a9b93958851968c8c51169052528c20613874565b50015410158a90898f806117ae565b5116865260248852868620611abf9190613874565b5001611acc8a8254613d42565b90556117a6565b50878f517f2c5211c6000000000000000000000000000000000000000000000000000000008152fd5b508515611773565b878f517f372a7fe5000000000000000000000000000000000000000000000000000000008152fd5b50600160ff60215416151514611761565b868e517f1e4ec46b000000000000000000000000000000000000000000000000000000008152fd5b905086895116148f61174b565b611be8938d8b8b51169151809681958294867ff1053bfb000000000000000000000000000000000000000000000000000000009b8c86528501919060a0939173ffffffffffffffffffffffffffffffffffffffff8092168452166020830152604082015260806060820152600060808201520190565b03925af1908115611c4f57907fffffffff00000000000000000000000000000000000000000000000000000000918b91611c32575b501603611c2e57858d8b8e3861172a565b8780fd5b611c4991508d803d1061196f576119618183613926565b38611c1d565b508e513d8b823e3d90fd5b858752602589528a87208a885289528a872033885289528a8720548203611ca357899a9b86885260258a528c88208b89528a528c88203389528a52878d8120555b9b9a506116ec565b858752602589528a87208a885289528a87203388528952818b88205411600014611cf657899a9b86885260258a528c88208b89528a528c88203389528a528c8820611cef848254613d42565b9055611c9b565b848b517f13be252b000000000000000000000000000000000000000000000000000000008152fd5b8289517fcb073ccf000000000000000000000000000000000000000000000000000000008152fd5b9091503461049f578160031936011261049f57611d61613760565b9173ffffffffffffffffffffffffffffffffffffffff84541633141580611dba575b611d9457836103aa60243585614ce3565b517fa38bddf4000000000000000000000000000000000000000000000000000000008152fd5b50611dc58333613967565b15611d83565b83823461085e578060031936011261085e578235611de7613788565b926002805414611f3f5760028055600160ff60215460081c16151514611f1757610c638284611e2993611e1a88336144ea565b50338152602460205220613874565b93606085015180421080611f0a575b611ed5575050816020940180519384611e5a575b505050600160025551908152f35b73ffffffffffffffffffffffffffffffffffffffff91611e8286838560215460281c166146e1565b611e8c843361522e565b611e97815133615371565b519284519384528684015216828201527f88ac64fdaa180cbd77b625cbb795a39a7b7d1b3b478d09f28f6bb89ee0fa1e5160603392a2838080611e4c565b604492508351917f9e689402000000000000000000000000000000000000000000000000000000008352820152426024820152fd5b5060ff6021541615611e38565b8483517f6022a9e7000000000000000000000000000000000000000000000000000000008152fd5b8483517fcb073ccf000000000000000000000000000000000000000000000000000000008152fd5b83823461085e578060031936011261085e57611f81613760565b907fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a760243591338552602560205280852083865260205273ffffffffffffffffffffffffffffffffffffffff818620941693848652602052848181205580519283528460208401523392a380f35b91503461049f57611fff36613840565b919092600280541461120057600280556120183361433a565b338552602060248152612030610c6386858920613874565b42851115612258576120424286613d42565b9260608201514281116000146122515761205d904290613d42565b84111561222a5760085484106122035760075484116121dc5750836120919101518561208885613fa6565b91428933615289565b331515806120db575b508251948552840152429083015260608201527f74a87253d9ba74c75ad7626f1fffa970c4ba507bf6cfbc951e77dbdb8650bb2760803392a2600160025580f35b6120e433614f78565b92612162575b338952600c845285892055808210612130576121098161211e93613d42565b9061211682601c54613d4f565b601c55613d4f565b338752601e8252838720555b3861209a565b61213d6121529282613d42565b9061214a82601c54613d42565b601c55613d42565b338752601e82528387205561212a565b9692939097959161217233613ed9565b98875b8a518110156121cd578061218c6121c8928d613d5c565b51338b5260178952898b20828c528952898b20556121a981613a90565b905490338c5260168a528a8c20838d528a5260031b1c898b2055613d15565b612175565b509194939790929698506120ea565b84517f42d144ad000000000000000000000000000000000000000000000000000000008152fd5b84517fda0f0f2a000000000000000000000000000000000000000000000000000000008152fd5b84517fbdddfeec000000000000000000000000000000000000000000000000000000008152fd5b508761205d565b8284517fa51620a7000000000000000000000000000000000000000000000000000000008152fd5b83823461085e57602060031936011261085e57602090670de0b6b3a76400006122bb6122b26122ad613760565b61400b565b600b5490613b35565b049051908152f35b83823461085e57602060031936011261085e578060209273ffffffffffffffffffffffffffffffffffffffff6122f7613760565b168152601f845220549051908152f35b91503461049f578060031936011261049f57612321613760565b9061232a613788565b60215493858351917f4b820093000000000000000000000000000000000000000000000000000000009283815273ffffffffffffffffffffffffffffffffffffffff978880981683830152816024818660209c8d9560281c165af18015612416579160249391899695936123f9575b508760215460281c169087519889968795865216908401525af19081156123f057506123c3578280f35b816123e292903d106123e9575b6123da8183613926565b8101906146c9565b5038808280f35b503d6123d0565b513d85823e3d90fd5b61240f90873d89116123e9576123da8183613926565b5038612399565b86513d85823e3d90fd5b9091503461049f578260031936011261049f576001549073ffffffffffffffffffffffffffffffffffffffff92838316918233036124ba57507fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c9085549481519086168152836020820152a17fffffffffffffffffffffffff00000000000000000000000000000000000000008093161783551660015580f35b90517fd74b334e000000000000000000000000000000000000000000000000000000008152fd5b91503461049f578060031936011261049f576124fb613760565b9273ffffffffffffffffffffffffffffffffffffffff6024359416815260246020528181209081548510156103ad575060a09361253791613874565b508054926001820154926002830154916003840154930154938151958652602086015284015260608301526080820152f35b9083346103ad57816003193601126103ad5750612584613760565b9161258d613856565b50600280541461120057506111ec6111fc9260028055336144ea565b83903461085e5760a060031936011261085e576125c4613760565b90606435928315158094036103ad57600290818054146129825781805585516125ec816138bf565b33815273ffffffffffffffffffffffffffffffffffffffff9360209480868401971687526126193361433a565b6126258188511661433a565b6084359681845116803b61289b575b506024988935996126488b85885116615096565b84845116801590811561288e575b5061286657606081019081514210801590612855575b61282d578d8101938451946044359586118015612825575b611ad3578f8f8f90918f948f908f94918f928e848e8e9a6126aa828560019a5116615371565b51036127fd576126bc9350511661522e565b1493846127d2575b50505050905060001461271657505092828c82937f9eb672f91cd06e0df204922695050e4f5be9311e33f7a2f0ef944efa0a80b90a8e8c8f9b998f9b99868f928f92908f91848d6117fd925116615096565b8596979d9c9b5083859661273a94959651169260808d8401519151930151936153f4565b83835116865280885289862054907fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82019182116127a8575092808a9b938a9b7f9eb672f91cd06e0df204922695050e4f5be9311e33f7a2f0ef944efa0a80b90a9b97948b979c8d99611816565b866011877f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b600394506127ec93958851968d8d51169052528d20613874565b50015410158b908f8e8c91876126c4565b511687528789528487206128119190613874565b500161281e8c8254613d42565b90556126bc565b508515612684565b868e517f372a7fe5000000000000000000000000000000000000000000000000000000008152fd5b50600160ff6021541615151461266c565b858d517f1e4ec46b000000000000000000000000000000000000000000000000000000008152fd5b905085885116148e612656565b8282511690888c518092818a816129158b7ff1053bfb00000000000000000000000000000000000000000000000000000000998a845286602435928501919060a0939173ffffffffffffffffffffffffffffffffffffffff8092168452166020830152604082015260806060820152600060808201520190565b03925af190811561297857907fffffffff0000000000000000000000000000000000000000000000000000000091889161295b575b501603612957578a612634565b8480fd5b61297291508a3d8c1161196f576119618183613926565b8d61294a565b8c513d89823e3d90fd5b8286517fcb073ccf000000000000000000000000000000000000000000000000000000008152fd5b83823461085e578060031936011261085e576020906108826129ca613760565b60243590614e26565b9091503461049f57602060031936011261049f576129ef613760565b73ffffffffffffffffffffffffffffffffffffffff908185541633141580612a9a575b612a725716918215612a4c5750507fffffffffffffffffffffffff0000000000000000000000000000000000000000602754161760275580f35b517f1e1d0ab5000000000000000000000000000000000000000000000000000000008152fd5b8284517ffee4291a000000000000000000000000000000000000000000000000000000008152fd5b50738412ebf45bac1b340bbe8f318b928c466c4e39ca331415612a12565b83823461085e578160031936011261085e5760209073ffffffffffffffffffffffffffffffffffffffff60215460281c169051908152f35b83823461085e578160031936011261085e576111fc90612b0e613d70565b9051918291826137ce565b83823461085e578160031936011261085e576020906008549051908152f35b83823461085e57602060031936011261085e578060209273ffffffffffffffffffffffffffffffffffffffff612b6c613760565b1681526018845220549051908152f35b83823461085e57602060031936011261085e578060209273ffffffffffffffffffffffffffffffffffffffff612bb0613760565b1681526014845220549051908152f35b83823461085e578060031936011261085e5760a090612c1d612bec612be3613760565b60243590615096565b9151809260808091805184526020810151602085015260408101516040850152606081015160608501520151910152565bf35b83823461085e578160031936011261085e57602090601c549051908152f35b83823461085e578160031936011261085e5760209061088261551d565b83823461085e578060031936011261085e57612c75613760565b90612c7e613856565b612d87575b73ffffffffffffffffffffffffffffffffffffffff82169182151580612ca7578480f35b612cb082614f78565b93909192612d0b575b50848652600c60205283862055808210612cee5761210981612cda93613d42565b918352601e6020528220555b818080808480f35b61213d612cfb9282613d42565b918352601e602052822055612ce6565b612d1b9096949391959296613ed9565b95845b8751811015612d795780612d35612d74928a613d5c565b5185885260209060178252878920838a52825287892055612d5582613a90565b905491878a5260168152888a2090848b525260031b1c86882055613d15565b612d1e565b509194909293955086612cb9565b612d8f6147c0565b612c83565b83823461085e578160031936011261085e5760209073ffffffffffffffffffffffffffffffffffffffff600154169051908152f35b83823461085e57602060031936011261085e57602090670de0b6b3a76400006122bb6122b2611003613760565b83823461085e578160031936011261085e5760209073ffffffffffffffffffffffffffffffffffffffff602254169051908152f35b5082346103ad57816003193601126103ad576003612e8d612e4a613760565b8473ffffffffffffffffffffffffffffffffffffffff60243592169485815260246020526002612e7c84848420613874565b500154958152602460205220613874565b50015482519182526020820152f35b83823461085e57602060031936011261085e576020918173ffffffffffffffffffffffffffffffffffffffff9182612ed2613760565b168152600f85522054169051908152f35b91503461049f57602060031936011261049f57612efe613760565b506002805414612f4957600160ff60215460101c16151514612f235782600160025580f35b517f05bfa6d4000000000000000000000000000000000000000000000000000000008152fd5b517fcb073ccf000000000000000000000000000000000000000000000000000000008152fd5b83823461085e578160031936011261085e576020905162093a808152f35b83823461085e57602060031936011261085e578060209273ffffffffffffffffffffffffffffffffffffffff612fc1613760565b168152601e845220549051908152f35b83823461085e57602060031936011261085e57602090610882612ff2613760565b61408a565b83823461085e57602060031936011261085e576020918173ffffffffffffffffffffffffffffffffffffffff918261302d613760565b1681528480522054169051908152f35b83823461085e578060031936011261085e57602090610afc61305d613760565b613065613788565b90613967565b83823461085e578160031936011261085e5760209073ffffffffffffffffffffffffffffffffffffffff602354169051908152f35b83823461085e57602060031936011261085e576020906108826122ad613760565b83823461085e57602091826003193601126103ad579173ffffffffffffffffffffffffffffffffffffffff6130f4613760565b168352602481528183209081549061310b82613cae565b9161311885519384613926565b8083528183018094875282872087915b83831061319e57505050508351938185019282865251809352840192945b8281106131535784840385f35b9091928260a08261318f6001948a5160808091805184526020810151602085015260408101516040850152606081015160608501520151910152565b01960191019492919094613146565b6005856001926131b2859c98999a9c614dea565b8152019201920191909795949397613128565b83823461085e578160031936011261085e576013546131e381613cc6565b92805b8281106131fa578351806111fc87826137ce565b61320381613bb0565b62093a8090818102918183041490151715613232579061322d916132278288613d5c565b52613d15565b6131e6565b6024836011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b83823461085e578060031936011261085e5760ff8160209361327e613760565b613286613788565b73ffffffffffffffffffffffffffffffffffffffff91821683526026875283832091168252855220549151911615158152f35b83823461085e576132c936613840565b92906002805414611f3f57600280556132e13361433a565b60215460ff8160181c16613490576008548510613468576007548511613440578161332891309073ffffffffffffffffffffffffffffffffffffffff339160281c166150eb565b6133476133358542613d4f565b61333e86613fa6565b908342336153f4565b61335181336152e1565b3382526024602052828220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff948582019182116134145784519283526020830152838201523360608201527fc25a1b6c6f54d0676457e0809403ac58f58d94fd6d7cbad1ab2e09c1f4e2fe2b60803392a23381526024602052818120549283019283116133e85760208383600160025551908152f35b806011857f4e487b71000000000000000000000000000000000000000000000000000000006024945252fd5b6024846011897f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b8584517f42d144ad000000000000000000000000000000000000000000000000000000008152fd5b8584517fda0f0f2a000000000000000000000000000000000000000000000000000000008152fd5b8584517f26d1807b000000000000000000000000000000000000000000000000000000008152fd5b9091503461049f57602060031936011261049f576134d4613760565b73ffffffffffffffffffffffffffffffffffffffff9182855416330361354f5750916020917f906a1c6bd7e3091ea86693dd029a831c19049ce77f1dce2ce0bab1cacbabce22931690817fffffffffffffffffffffffff0000000000000000000000000000000000000000600154161760015551908152a180f35b83517f5fc483c5000000000000000000000000000000000000000000000000000000008152fd5b5082346103ad57806003193601126103ad579080519182906010549182855260208095018093601084527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae67290845b81811061362b57505050816135da910382613926565b83519485948186019282875251809352850193925b8281106135fe57505050500390f35b835173ffffffffffffffffffffffffffffffffffffffff16855286955093810193928101926001016135ef565b825473ffffffffffffffffffffffffffffffffffffffff16845292880192600192830192016135c4565b9083346103ad5760206003193601126103ad575061088260209235613fa6565b91503461049f5761368536613809565b9092919333865260209060258252838720858852825273ffffffffffffffffffffffffffffffffffffffff8488209616958688528252838720546137125750907fb3fd5071835887567a0671151121894ddccc2842f1d10bedad13e0d17cace9a792913387526025815282872085885281528287208688528152818388205582519485528401523392a380f35b83517f1e1d0ab5000000000000000000000000000000000000000000000000000000008152fd5b83823461085e57602060031936011261085e576111fc90612b0e61375b613760565b613ed9565b6004359073ffffffffffffffffffffffffffffffffffffffff8216820361378357565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff8216820361378357565b6044359073ffffffffffffffffffffffffffffffffffffffff8216820361378357565b6020908160408183019282815285518094520193019160005b8281106137f5575050505090565b8351855293810193928101926001016137e7565b60031960609101126137835760043573ffffffffffffffffffffffffffffffffffffffff8116810361378357906024359060443590565b6003196040910112613783576004359060243590565b60243590811515820361378357565b60043590811515820361378357565b8054821015613890576000526005602060002091020190600090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6040810190811067ffffffffffffffff8211176138db57604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60a0810190811067ffffffffffffffff8211176138db57604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff8211176138db57604052565b60005473ffffffffffffffffffffffffffffffffffffffff91821692908216830361399457505050600190565b8116600052600f60205260406000205416146139af57600090565b600190565b6013548110156138905760136000527f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a0900190600090565b6011548110156138905760116000527f31ecc21a745e3968a04e9570e4425bc18fa8019c68028196b546d1669c200c680190600090565b6012548110156138905760126000527fbb8a6a4669ba250d26cd7a459eca9d215f8307e33aebe50379bc5a3617ec34440190600090565b6019548110156138905760196000527f944998273e477b495144fb8794c914197f3ccb46be2900f4698fd0ef743c96950190600090565b6015548110156138905760156000527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec4750190600090565b6010548110156138905760106000527f1b6847dc741a1b0cd08d278845f9d819d87b734759afb55fe2de5cb82a9ae6720190600090565b601a5481101561389057601a6000527f057c384a7d1c54f3a1b2e5e67b2617b8224fdfd1ea7234eea573a6ff665ff63e0190600090565b81810292918115918404141715613b4857565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b8115613b81570490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b613bb9816139eb565b905473ffffffffffffffffffffffffffffffffffffffff9160031b1c811615613c9a576020600491613bea846139eb565b90549060031b1c16604051928380927f0a3be7570000000000000000000000000000000000000000000000000000000082525afa908115613c8e57600091613c55575b50613c5190613c44670de0b6b3a764000093613a59565b90549060031b1c90613b35565b0490565b906020823d8211613c86575b81613c6e60209383613926565b810103126103ad575051670de0b6b3a7640000613c2d565b3d9150613c61565b6040513d6000823e3d90fd5b50613ca4906139b4565b90549060031b1c90565b67ffffffffffffffff81116138db5760051b60200190565b90613cd082613cae565b613cdd6040519182613926565b8281527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0613d0b8294613cae565b0190602036910137565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114613b485760010190565b91908203918211613b4857565b91908201809211613b4857565b80518210156138905760209160051b010190565b601b54158015613ebd575b15613def57604051808160155480835260208093019060156000527f55f448fdea98c4d29eb340757ef0a66cd03dbb9538908a6a81d96026b71ec475936000905b828210613dd557505050613dd292500382613926565b90565b855484526001958601958795509381019390910190613dbc565b613dfa601054613cc6565b60008060155490613e09613ec7565b9060055493601c54915b848110613e235750505050505090565b613e2c81613a90565b9054613e4a613e3b8988613d42565b613e4485613bb0565b90613b35565b670de0b6b3a764000090818102918183041490151715613e905791613e8191613e7787613e8b9695613b77565b9160031b1c613d4f565b613227828a613d5c565b613e13565b6024857f4e487b710000000000000000000000000000000000000000000000000000000081526011600452fd5b50601c5415613d7b565b600454804210600014613dd257504290565b90613ee2613d70565b6010549073ffffffffffffffffffffffffffffffffffffffff613f0483613cc6565b9416906000828152601e9160209083825260409384842054613f2a575b50505050505050565b835b878110613f395750613f21565b613fa190878652828552613f97670de0b6b3a7640000613f7d89892054613e44613f63868a613d5c565b518d8c5260168b528c8c20878d528b528c8c205490613d42565b048988526017875288882083895287528888205490613d4f565b613227828d613d5c565b613f2c565b613fbf613fb66006548093613b35565b60075490613b77565b80821015613fcb575090565b905090565b613c51670de0b6b3a76400009173ffffffffffffffffffffffffffffffffffffffff6003549116600052601d60205260406000205490613b35565b613c51670de0b6b3a76400009173ffffffffffffffffffffffffffffffffffffffff6003549116600052601f60205260406000205490613b35565b73ffffffffffffffffffffffffffffffffffffffff808216600052600d60205260ff6040600020541660001461407a575090565b9050602080526040600020541690565b9061409482614046565b73ffffffffffffffffffffffffffffffffffffffff818116801591906000908315614298575050604051907f70a082310000000000000000000000000000000000000000000000000000000082528516600482015260208160248173c8418af6358ffdda74e09ca9cc3fe03ca6adc5b05afa908115613c8e57600091614267575b50935b600a54946141326141298783613b35565b60095490613b35565b91604051907f18160ddd00000000000000000000000000000000000000000000000000000000825260208260048173c8418af6358ffdda74e09ca9cc3fe03ca6adc5b05afa918215613c8e57600092614234575b50670de0b6b3a76400009384830292808404861490151715613b485784926141ad91613b77565b956000951561422057506122b26141c391613fd0565b045b806141ef575b505050808211156141e75750915b8083116141e35750565b9150565b9050916141d9565b9091809350820291808304841490151715613b4857614212869161421793613b77565b613b35565b043880806141cb565b61422e91506122b29061400b565b046141c5565b90916020823d821161425f575b8161424e60209383613926565b810103126103ad5750519038614186565b3d9150614241565b906020823d8211614290575b8161428060209383613926565b810103126103ad57505138614115565b3d9150614273565b909150604051907f70a08231000000000000000000000000000000000000000000000000000000008252600482015260208160248173c8418af6358ffdda74e09ca9cc3fe03ca6adc5b05afa91821561432e5780926142fa575b505093614118565b9091506020823d8211614326575b8161431560209383613926565b810103126103ad57505138806142f2565b3d9150614308565b604051903d90823e3d90fd5b906143436147c0565b73ffffffffffffffffffffffffffffffffffffffff821680151580614369575b50509050565b61437284614f78565b9190926143d6575b604093949550600092858452600c60205284842055808210156000146143ba57612109816143a793613d42565b928152601e60205220555b803880614363565b61213d6143c79282613d42565b928152601e60205220556143b2565b939190946143e390613ed9565b9460005b865181101561444c57806143fe6144479289613d5c565b518660005260206017815260409182600020846000528252826000205561442483613a90565b90549189600052601681528360002090856000525260031b1c9060002055613d15565b6143e7565b50919450849390919061437a565b9073ffffffffffffffffffffffffffffffffffffffff8216801515806144805750509050565b61448984614f78565b9190926144bd57604093949550600092858452600c60205284842055808210156000146143ba57612109816143a793613d42565b939190946144ca90613ed9565b9460005b865181101561444c57806143fe6144e59289613d5c565b6144ce565b906144f48261433a565b73ffffffffffffffffffffffffffffffffffffffff809216600092818452602090601882526040904282872055600194602154968660ff6010998a1c16151514614642576145428854613cc6565b9781885b614557575b50505050505050505090565b815481101561463d576145b590888452601780895287852082865289528b614583838a88205492613d5c565b52898552885286842081855288528387812055888b8287896145a58385613d5c565b516145bb575b5050505050613d15565b88614546565b614611837f1d2f2ca53af5d2f333bd32fdd45f9c52ad8ebe31414f7792912077fcb3876dff9561460c6145ef606097613ac7565b96905490866145fe8686613d5c565b51926003998a1b1c166146e1565b613d5c565b519161461c87613ac7565b9054911b1c168b519182528c8201528989168b820152a2888b8287896145ab565b61454b565b600484517f05bfa6d4000000000000000000000000000000000000000000000000000000008152fd5b3d156146c4573d9067ffffffffffffffff82116138db57604051916146b860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160184613926565b82523d6000602084013e565b606090565b90816020910312613783575180151581036137835790565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000006020820190815273ffffffffffffffffffffffffffffffffffffffff9390931660248201526044808201949094529283526000928392908390614749606482613926565b51925af161475561466b565b9015908115614790575b5061476657565b60046040517f19a97085000000000000000000000000000000000000000000000000000000008152fd5b80518015159250826147a5575b50503861475f565b6147b892506020809183010191016146c9565b15388061479d565b60005b60115481101561499e576147d6816139eb565b919073ffffffffffffffffffffffffffffffffffffffff809154600394851b1c1661480c575b506148079150613d15565b6147c3565b61481582613afe565b905490841b1c4211156147fc578061482c836139eb565b905490851b1c166040918251947f6472eee100000000000000000000000000000000000000000000000000000000865260209586816004958160008161489842308c84016020909392919373ffffffffffffffffffffffffffffffffffffffff60408201951681520152565b03925af190811561499357908793929160009161495f575b506148be9061072b88613a59565b6148c7866139eb565b9054911b1c168351928380927f513872bd0000000000000000000000000000000000000000000000000000000082525afa9182156149555750600091614921575b50614807925061491b9061072b83613afe565b386147fc565b919282813d831161494e575b6149378183613926565b810103126103ad575051614807919061491b614908565b503d61492d565b513d6000823e3d90fd5b91929382813d831161498c575b6149768183613926565b810103126103ad575051869291906148be6148b0565b503d61496c565b85513d6000823e3d90fd5b506149a761551d565b6003908155600480549091904210614c8c5760005b601254811015614a7d5773ffffffffffffffffffffffffffffffffffffffff6149e482613a22565b905490841b1c1680614a00575b506149fb90613d15565b6149bc565b60006040809260248251809481937f092193ab000000000000000000000000000000000000000000000000000000008352308b8401525af18015614a7257614a49575b506149f1565b813d8311614a6b575b614a5c8183613926565b81010312613783573880614a43565b503d614a52565b82513d6000823e3d90fd5b5090805462093a809081614a918242613d42565b04600060105460018301809311915b818110614b39575050614b0b57828102928184041490151715614add5790614ac791613d4f565b9055614ad1614c98565b614ad961551d565b9055565b6011837f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b6011847f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b614b4281613bb0565b86810290808204881490151715614c5e5783614c5e5784614b6291613b35565b614b6b82613ac7565b9073ffffffffffffffffffffffffffffffffffffffff91829154908c1b1c16906040918251938480927f70a082310000000000000000000000000000000000000000000000000000000082528d3090830152602093849160249889915afa92831561499357600093614c2d575b505011614bf057505050614beb90613d15565b614aa0565b8a614bfc8b9495613ac7565b9054911b1c169051917f861a0404000000000000000000000000000000000000000000000000000000008352820152fd5b8181949293943d8311614c57575b614c458183613926565b810103126103ad575051903880614bd8565b503d614c3b565b6011887f4e487b71000000000000000000000000000000000000000000000000000000006000525260246000fd5b5050614c96614c98565b565b614ca0613d70565b9060005b601554811015614cd35780614cc9614cbf614cce9386613d5c565b5161072b83613a90565b613d15565b614ca4565b509050614cde613ec7565b600555565b90600080601054905b818110614da1575b5050808091614d70575b8115614d40575b5015614d1657614c969133906146e1565b60046040517f609e5abb000000000000000000000000000000000000000000000000000000008152fd5b90501580614d4f575b38614d05565b5073ffffffffffffffffffffffffffffffffffffffff600054163314614d49565b905073ffffffffffffffffffffffffffffffffffffffff808416600052600f60205260406000205416331490614cfe565b614daa81613ac7565b905473ffffffffffffffffffffffffffffffffffffffff908188169260031b1c1614614dde57614dd990613d15565b614cec565b50505060013880614cf4565b90604051614df78161390a565b608060048294805484526001810154602085015260028101546040850152600381015460608501520154910152565b9190600092614e5c610c6373ffffffffffffffffffffffffffffffffffffffff6000931693848452602460205260408420613874565b91808252601860205260408220546020840151809110600014614f6d575b606084018051909290428111614f3357508352601860205260408320548251809110614eb5575b505050506080905b01518083116141e35750565b614ecf929394965090614ec791613d42565b915142613d42565b90614ee0816142128160011c613fa6565b92821560011715614f06575091611471614efc92608094613d4f565b9290388080614ea1565b807f4e487b7100000000000000000000000000000000000000000000000000000000602492526011600452fd5b6080959750614f679450614f599150614f5f9392614f5091613d42565b91429051613d42565b90613d4f565b60011c613fa6565b92614ea9565b506040822054614e7a565b906000809273ffffffffffffffffffffffffffffffffffffffff811692838552602094601e86526040918282205490614fb08561408a565b90878452601d8952848420541580615087575b8015615076575b15615058576024829990505b84975b898652602482528686205489101561504b579061504261503c602493614f598b8f6150358f670de0b6b3a7640000928f8f83615020610c6361502f96856150269520613874565b97614e26565b95015194613d4f565b83613b35565b0490613d4f565b99613d15565b98909150614fd9565b9750509450955095505050565b600c8952602461506b8686205484613d4f565b60011c999050614fd6565b50600c895284842054821015614fca565b50601e89528484205415614fc3565b613dd2916040608073ffffffffffffffffffffffffffffffffffffffff610c639483516150c28161390a565b600093818580935282602082015282878201528260608201520152168152602460205220613874565b9091600080949381946040519160208301947f23b872dd00000000000000000000000000000000000000000000000000000000865273ffffffffffffffffffffffffffffffffffffffff80921660248501521660448301526064820152606481526151558161390a565b51925af161516161466b565b901590811561519b575b5061517257565b60046040517e298ffd000000000000000000000000000000000000000000000000000000008152fd5b80518015159250826151b0575b50503861516b565b6151c392506020809183010191016146c9565b1538806151a8565b91906151ff576080816004925184556020810151600185015560408101516002850155606081015160038501550151910155565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b615283614c969260408051936152438561390a565b73ffffffffffffffffffffffffffffffffffffffff6000918287528260208801528284880152826060880152826080880152168152602460205220613874565b906151cb565b614c969573ffffffffffffffffffffffffffffffffffffffff92939561528395604051976152b68961390a565b6000895260208901526040880152606087015260808601521660005260246020526040600020613874565b614c969173ffffffffffffffffffffffffffffffffffffffff808316906000828152602091828052806040832054169361531d86601b54613d4f565b601b55808352601d845260408320615336878254613d4f565b90558252828052604082205416615351575b5050505061445a565b601f6040926153669483525220918254613d4f565b905538808080615348565b614c969173ffffffffffffffffffffffffffffffffffffffff80831660009181835260208052604083205416906153aa84601b54613d42565b601b558252601d602052604082206153c3848254613d42565b9055806153d3575b50505061445a565b816040916153ea9352601f60205220918254613d42565b90553880806153cb565b73ffffffffffffffffffffffffffffffffffffffff909492949391931660005260246020526040600020936040519361542c8561390a565b600085526020850152604084015260608301526080820152815491680100000000000000008310156138db5782615283916001614c9695018155613874565b929173ffffffffffffffffffffffffffffffffffffffff80941660009481865260266020526040862093169283865260205260ff6040862054166000146154b6575050505050600190565b84526025602052604084209084526020526040832090835260205260408220541015600014613dd25750600190565b9081602091031261378357517fffffffff00000000000000000000000000000000000000000000000000000000811681036137835790565b73ffffffffffffffffffffffffffffffffffffffff908160235416604051907f70a0823100000000000000000000000000000000000000000000000000000000825260048201526020928382602481735e8422345238f34275888049021821e8e08caa1f5afa918215613c8e57600092615643575b50641eb1206cb391828102928184041490151715613b48578360049160225416604051928380927f18160ddd0000000000000000000000000000000000000000000000000000000082525afa938415613c8e57600094615614575b5050916155fa9192613b77565b6402540be40090818102918183041490151715613b485790565b81813d831161563c575b6156288183613926565b810103126107ed575192506155fa386155ed565b503d61561e565b90918482813d831161566b575b61565a8183613926565b810103126103ad5750519038615592565b503d61565056fea26469706673582212203c01542f27d6f169626fc24cf4d583219e40a8c4889d031bd82677ec9024868f64736f6c634300081100336080806040523461001657610183908161001c8239f35b600080fdfe608080604052600436101561001357600080fd5b60003560e01c908163336d152314610077575063f1053bfb1461003557600080fd5b3461007257610043366100b2565b505050505060206040517ff1053bfb000000000000000000000000000000000000000000000000000000008152f35b600080fd5b3461007257602090610088366100b2565b50505050507f336d1523000000000000000000000000000000000000000000000000000000008152f35b60807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc8201126100725773ffffffffffffffffffffffffffffffffffffffff9160043583811681036100725792602435908116810361007257916044359160643567ffffffffffffffff928382116100725780602383011215610072578160040135938411610072576024848301011161007257602401919056fea2646970667358221220f803671fe93583b6a9c4b2f314d77acfbac5a4753b1257126c38a51e6a9328cb64736f6c63430008110033a2646970667358221220fe98ff21274a201cfe0a2a5a35501441d9977de3f49feed4d3fba4dd90c600d164736f6c63430008110033",
    "sourceMap": "1504:33475:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2596:81;1504:33475;2596:81;;;1504:33475;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1834:20;1504:33475;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1718:28;1504:33475;;;;;;;;;;;;;;;;;;;;;;4403:78;1504:33475;;;;;;;;;;;;;;;;;;;;;;1629:44;1504:33475;;;;;;;;;;;;;;;;;;;;;;4240:88;1504:33475;;;;;;;;;;;;;;;;;;;;;;4006:86;1504:33475;;;;;;;;;;;;;;;;;;;;;;3586:86;1504:33475;;;;;;;;;;;;;;;;;;;;;;3864:76;1504:33475;;;;;;;;;;;;;;;;;;;;;;1860:18;1504:33475;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4098:78;1504:33475;;;;;;;;;;;;;;;;;;;;;;5086:77;1504:33475;;;;;;;;;;;;;;;;;;;;;;4488:69;1504:33475;;;;;;;;;;;;;;;;;;;;;;1889:66;1504:33475;;;;;;;;;;;;;;;;;;;;;;2930:84;1504:33475;;;;;;;;;;;;;;;;;;;;;;4661:77;1504:33475;;;;;;;;;;;;;;;;;;;;;;3109:78;1504:33475;;;;;;;;;;;;;;;;;;;;;;1602:21;1504:33475;;;;;;;;;;;;;;;;;;;;;;1554:42;1504:33475;;;;;;;;;;;;;;;;;;;;;5043:36;1504:33475;;;;;;;;;;;;;;;;;;;;4997:39;1504:33475;;;;;;;;;;;;;;;;;;;;;2414:82;1504:33475;;;;;;;;;;;;;;;;;;;;;;2280:110;1504:33475;;;;;;;;;;;;;;;;;;;;;;4334:30;1504:33475;;;;;;;;;;;;;;;;;;;;;;2502:88;1504:33475;;;;;;;;;;;;;;;;;;;;;;2063:84;1504:33475;;;;;;;;;;;;;;;;;;;;;;3339:87;1504:33475;;;;;;;;;;;;;;;;;;;;;;4370:27;1504:33475;;;;;;;;;;;;;;;;;;;;;;1961:69;1504:33475;;;;;;;;;;;;;;;;;;;;;;2153:74;1504:33475;;;;;;;;;;;;;;;;;;;;;;3491:89;1504:33475;;;;;;;;;;;;;;;;;;;;;;3233:82;1504:33475;;;;;;;;;;;;;;;;;;;;;;1799:28;1504:33475;;;;;;;;;;;;;;;;;;;;;;2683:83;1504:33475;;;;;;;;;;;;;;;;;;;;;;;1671:64:0;;;;;;;;;;;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;;;;;;1671:64:0;1504:33475:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12121:8;1504:33475;;;;1248:14:1;1504:33475:22;12213:11;1248:14:1;1504:33475:22;;12191:35;;;;1504:33475;;12191:35;1248:14:1;12191:35:22;;1504:33475;12191:35;;1504:33475;12191:35;;1504:33475;12191:35;;1504:33475;12191:35;;;;;;;;1504:33475;;;;;;;;;12303:35;;1504:33475;12303:35;;;1504:33475;12303:35;;1671:64:0;1504:33475:22;1671:64:0;;;;1504:33475:22;1671:64:0;;;;;;;;;;1504:33475:22;1671:64:0;;;1504:33475:22;1671:64:0;12292:9:22;1504:33475;12267:72;;12303:35;;12267:72;;;;;;:::i;:::-;;1504:33475;;;12363:6;1504:33475;;;12213:11;1248:14:1;1504:33475:22;;;;;12375:67;;;;;;1504:33475;12375:67;;1504:33475;;12375:67;;;;;:::i;:::-;12363:80;;;;;;;:::i;:::-;12349:94;;;1504:33475;1671:64:0;;;12464:31:22;;1504:33475;;;;;12464:31;1504:33475;;;;;;;;1671:64:0;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;12524:9;9081:5:0;;9077:99;;;;1504:33475:22;;;;;;;12363:6;1504:33475;;;;12659:13;1504:33475;;;;12624:68;;;;;1248:14:1;12624:68:22;;1504:33475;12624:68;;1504:33475;12674:17;1504:33475;;;;12624:68;;;;;;;;1504:33475;;;12659:13;1504:33475;;;;1671:64:0;;1504:33475:22;1671:64:0;;;;1504:33475:22;1671:64:0;;;;;;1504:33475:22;1671:64:0;;;;;1504:33475:22;;;12292:9;1504:33475;12741:33;;1504:33475;;1248:14:1;12702:84:22;;1504:33475;;;1671:64:0;;;1504:33475:22;12702:84;;1504:33475;12741:33;1504:33475;;;;;;;;;;;;12524:9;1504:33475;;;;12702:84;;;;;;;;1504:33475;;;;;;;;12213:11;1248:14:1;1504:33475:22;;;;12807:52;;;;12375:67;12807:52;;1504:33475;12807:52;;1504:33475;12807:52;;;;;;;;;;;1504:33475;;;;;;;;;1671:64:0;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;;;12524:9;7096:6:0;;;7092:100;;;;1504:33475:22;1248:14:1;;;;1504:33475:22;13096:7;1248:14:1;1504:33475:22;;13133:11;1248:14:1;1504:33475:22;;;;1248:14:1;13096:50:22;;;1504:33475;13096:50;;1504:33475;;13096:50;1504:33475;13096:50;;;;;;;;;;;;;1504:33475;;;;;;;;;;;;13186:47;;;;1248:14:1;13186:47:22;;;1504:33475;13186:47;;1504:33475;13186:47;;;;;;;;;;;1504:33475;;;;;1671:64:0;1504:33475:22;;;;;;13292:57;;;;1248:14:1;13292:57:22;;12524:9;1504:33475;13292:57;;1504:33475;13335:12;1504:33475;;;;13292:57;;;;;;;;;;;1504:33475;;;;;;;13096:7;1248:14:1;1504:33475:22;;;13133:11;1248:14:1;1504:33475:22;;;;13377:50;;;;1248:14:1;13377:50:22;;1504:33475;13377:50;;1504:33475;13377:50;;;;;;;;;;;1504:33475;;;;;;;;;;;;;;;;;;;;13437:83;1504:33475;;;;1671:64:0;;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;;;;13437:83;;:::i;:::-;1504:33475;13096:7;1248:14:1;1504:33475:22;;;13133:11;1248:14:1;1504:33475:22;;;;13563:47;;;;1248:14:1;13563:47:22;;1504:33475;13563:47;;1504:33475;13563:47;;;;;;;;;;;1504:33475;;;;;;13680:12;;:::i;:::-;1504:33475;13096:7;1248:14:1;1504:33475:22;1248:14:1;1504:33475:22;13834:13;1248:14:1;1504:33475:22;;;1248:14:1;13797:52:22;;;1504:33475;13797:52;;1504:33475;;13797:52;1504:33475;13797:52;;;;;;;;;;;;;1504:33475;;;;;;;;13894:49;1248:14:1;13894:49:22;;1504:33475;13894:49;;1504:33475;;13894:49;1504:33475;13894:49;;;;;;;;;;;;;1504:33475;;;;;;;;;;;13133:11;1248:14:1;1504:33475:22;;;13953:39;;;;;1248:14:1;13953:39:22;;1504:33475;13953:39;;1504:33475;13953:39;;;;;;;;1504:33475;1248:14:1;1504:33475:22;13133:11;1248:14:1;1504:33475:22;;;13834:13;1248:14:1;1504:33475:22;;;;;;;;;;;;;;;14115:92;;;;;1248:14:1;14115:92:22;;1504:33475;14115:92;;1504:33475;;;;;;;;;;;;;;;;;;;14115:92;;;;;;;1504:33475;14115:92;;;1504:33475;;;;;;;13096:7;1248:14:1;1504:33475:22;;13133:11;1248:14:1;1504:33475:22;;;14349:50;1248:14:1;14349:50:22;;1504:33475;14349:50;;1504:33475;;14349:50;1504:33475;14349:50;;;;;;;;;;;;;1504:33475;;;;;;;;13834:13;1248:14:1;1504:33475:22;;;;14435:52;;;;1248:14:1;14435:52:22;;1504:33475;14435:52;;1504:33475;14435:52;;;;;;;;;;;1504:33475;;;;;;14497:83;1504:33475;;;;;;;;;;1671:64:0;;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;14497:83;:::i;:::-;1504:33475;;;;;;;;;;;;;;;;;14590:99;1504:33475;;;;1671:64:0;;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;14590:99;;:::i;:::-;1504:33475;13096:7;1248:14:1;1504:33475:22;;13133:11;1248:14:1;1504:33475:22;;;14774:47;1248:14:1;14774:47:22;;1504:33475;14774:47;;1504:33475;;14774:47;1504:33475;14774:47;;;;;;;;;;;;;1504:33475;;;;;;;;13834:13;1248:14:1;1504:33475:22;;;;14864:49;;;;1248:14:1;14864:49:22;;1504:33475;14864:49;;1504:33475;14864:49;;;;;;;;;;;1504:33475;;;;;;14923:122;1504:33475;;;;14962:49;1504:33475;;;;;;;;14962:49;;:::i;:::-;1504:33475;;1671:64:0;;;;:::i;:::-;13096:7:22;1671:64:0;;1504:33475:22;;;;;14923:122;:::i;:::-;15055:127;1504:33475;;;;15096:51;1504:33475;;;;;;;;15096:51;;:::i;:::-;1504:33475;;1671:64:0;;;;:::i;:::-;12659:13:22;1671:64:0;;1504:33475:22;;;;;15055:127;:::i;:::-;1504:33475;15278:17;;;;1504:33475;;;1248:14:1;15278:17:22;;;;1504:33475;15278:17;;1504:33475;15278:17;;;;;;;;1504:33475;1248:14:1;;1504:33475:22;13133:11;1248:14:1;1504:33475:22;;;13834:13;1248:14:1;1504:33475:22;;;;;;;;;;;;;;;15305:92;;;;;1248:14:1;15305:92:22;;1504:33475;15305:92;;1504:33475;;;;;;;;;;;;;;15394:2;1504:33475;;;;15305:92;;;;;;;;1504:33475;15453:12;;;:::i;:::-;1504:33475;13096:7;1248:14:1;1504:33475:22;;;13834:13;1248:14:1;1504:33475:22;;;;15581:52;;;;1248:14:1;15581:52:22;;1504:33475;15581:52;;1504:33475;15581:52;;;;;;;;;;1504:33475;15572:135;1504:33475;;;;;;;;1671:64:0;;;;:::i;:::-;13834:13:22;1671:64:0;;1504:33475:22;;;;;;;;;;15572:135;:::i;:::-;1504:33475;13096:7;1248:14:1;1504:33475:22;;;13133:11;1248:14:1;1504:33475:22;;;;15726:50;;;;1248:14:1;15726:50:22;;1504:33475;15726:50;;1504:33475;15726:50;;;;;;;;;;1504:33475;15717:129;1504:33475;;;;;;;;1671:64:0;;;;:::i;:::-;13133:11:22;1671:64:0;;1504:33475:22;;;;;;;;;;15717:129;:::i;:::-;13133:11;1248:14:1;13834:13:22;1248:14:1;1504:33475:22;;;;;;;;;;;;;;;1248:14:1;15929:105:22;;1504:33475;;;;;15929:105;;1504:33475;;;;;;;;;;;;;;;13480:1;1504:33475;;;;;;;;;;;;;;;;;;;;;15929:105;;;;;;;1504:33475;15929:105;;;1504:33475;;;;;;;13096:7;1248:14:1;1504:33475:22;;13133:11;1248:14:1;1504:33475:22;;;16166:50;1248:14:1;16166:50:22;;1504:33475;16166:50;;1504:33475;;16166:50;1504:33475;16166:50;;;;;;;;;;;;;1504:33475;;;;;;;;13834:13;1248:14:1;1504:33475:22;;;;16252:52;;;;1248:14:1;16252:52:22;;1504:33475;16252:52;;1504:33475;16252:52;;;;;;;;;;;1504:33475;;;;;;16314:91;1504:33475;;;;;;;;;;1671:64:0;;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;;;16314:91;:::i;:::-;16415:97;1504:33475;;;;;;;;;;1671:64:0;;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;;;16415:97;:::i;:::-;1504:33475;13096:7;1248:14:1;1504:33475:22;;13133:11;1248:14:1;1504:33475:22;;;16597:47;1248:14:1;16597:47:22;;1504:33475;16597:47;;1504:33475;;16597:47;1504:33475;16597:47;;;;;;;;;;;;;1504:33475;;;;;;;;13834:13;1248:14:1;1504:33475:22;;;;16687:49;;;;1248:14:1;16687:49:22;;1504:33475;16687:49;;1504:33475;16687:49;;;;;;;;;;;1504:33475;;;;;;16746:121;1504:33475;;;;16785:47;1504:33475;;;;;;;;16785:47;;:::i;:::-;1504:33475;;1671:64:0;;;;:::i;:::-;13096:7:22;1671:64:0;;1504:33475:22;;;;;16746:121;:::i;:::-;16877:125;1504:33475;;;;16918:49;1504:33475;;;;;;;;16918:49;;:::i;:::-;1504:33475;;1671:64:0;;;;:::i;:::-;12659:13:22;1671:64:0;;1504:33475:22;;;;;16877:125;:::i;:::-;1504:33475;17086:17;;;;1504:33475;;;1248:14:1;17086:17:22;;;;1504:33475;17086:17;;1504:33475;17086:17;;;;;;;;1504:33475;1248:14:1;;1504:33475:22;13133:11;1248:14:1;1504:33475:22;;;17148:3;1504:33475;;;;;;;;;;;17113:74;;;;;1248:14:1;17113:74:22;;1504:33475;17113:74;;1504:33475;;;;;12121:8;1504:33475;;;;;;;;;;;;;;17113:74;;;;;;;;1504:33475;16318:15:5;17295:7:22;16318:15:5;1504:33475:22;16318:15:5;1504:33475:22;;;;16310:31:5;;;;1504:33475:22;;1248:14:1;16310:31:5;;17295:7:22;16318:15:5;1504:33475:22;;16310:31:5;;1504:33475:22;;16310:31:5;1504:33475:22;16310:31:5;;1504:33475:22;16310:31:5;;;;;;;;1504:33475:22;;17313:51;1504:33475;;1671:64:0;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;;;17313:51;:::i;:::-;1504:33475;13096:7;1248:14:1;1504:33475:22;;13133:11;1248:14:1;1504:33475:22;;;1248:14:1;17397:50:22;;;1504:33475;17397:50;;1504:33475;;17397:50;1504:33475;17397:50;;;;;;;;;;;;;1504:33475;;;;;;;;;13834:13;1248:14:1;1504:33475:22;;;;17482:52;;;;1248:14:1;17482:52:22;;;1504:33475;17482:52;;1504:33475;17482:52;;;;;;;;;;;1504:33475;;;;;;;;;;;17632:60;1504:33475;;;;1671:64:0;1504:33475:22;;;17632:60;;:::i;:::-;1504:33475;;;;;;;;;;;;;;;17632:85;1504:33475;;;17632:85;;:::i;:::-;1504:33475;;;;;;1248:14:1;17566:176:22;;1504:33475;;;;;;17566:176;;1504:33475;;;;;;;;;;;;13480:1;1504:33475;;;;;;;;;;;;;;;;;;;17566:176;;;;;;;1504:33475;17566:176;;;1504:33475;;;;;;;13096:7;1248:14:1;1504:33475:22;1248:14:1;1504:33475:22;13133:11;1248:14:1;1504:33475:22;;;17827:47;1248:14:1;17827:47:22;;1504:33475;17827:47;;1504:33475;;17827:47;1504:33475;17827:47;;;;;;;;;;;;;1504:33475;;;;;;;;13834:13;1248:14:1;1504:33475:22;;;;17917:49;;;;1248:14:1;17917:49:22;;1504:33475;17917:49;;1504:33475;17917:49;;;;;;;;;;1504:33475;18118:188;1504:33475;;;;;;17976:132;1504:33475;;;;1671:64:0;1504:33475:22;;;;;1671:64:0;;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;;;17976:132;:::i;:::-;18160:97;1504:33475;;;;;18196:60;1504:33475;;;;;1671:64:0;1504:33475:22;;;;;;;18196:60;;:::i;:::-;18160:97;;:::i;:::-;1504:33475;;1671:64:0;;;;:::i;:::-;12213:11:22;1671:64:0;;1504:33475:22;;;;;;;;;;18118:188;:::i;:::-;1504:33475;18317:14;;;;1504:33475;;;1248:14:1;18317::22;;;;1504:33475;18317:14;;1504:33475;18317:14;;;;;;;;1504:33475;;18342:33;1504:33475;;1671:64:0;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;18342:33;:::i;:::-;1504:33475;;18317:14;;;;:::i;:::-;1504:33475;;18317:14;;;;;1504:33475;;;;;;;;;17917:49;;1504:33475;17917:49;;1504:33475;17917:49;;;;;;1504:33475;17917:49;;;:::i;:::-;;;1504:33475;;;;18118:188;1504:33475;;17917:49;;1504:33475;;;;17917:49;;;-1:-1:-1;17917:49:22;;;1504:33475;;;;;;;;;17827:47;;;1504:33475;17827:47;;1504:33475;17827:47;;;;;;1504:33475;17827:47;;;:::i;:::-;;;1504:33475;;;;;17827:47;;;;;;-1:-1:-1;17827:47:22;;;1504:33475;;;;;;;;;17566:176;;;;1504:33475;17566:176;1504:33475;17566:176;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;1504:33475;;;;;;;;;;17482:52;;;1504:33475;17482:52;;1504:33475;17482:52;;;;;;1504:33475;17482:52;;;:::i;:::-;;;1504:33475;;;;;17482:52;;;;;;-1:-1:-1;17482:52:22;;;1504:33475;;;;;;;;;17397:50;;;1504:33475;17397:50;;1504:33475;17397:50;;;;;;1504:33475;17397:50;;;:::i;:::-;;;1504:33475;;;;;17397:50;;;;;;-1:-1:-1;17397:50:22;;16310:31:5;;;;:::i;:::-;;;;;1504:33475:22;;;;;;;;;;;;;;;;;;;17113:74;;;1504:33475;17113:74;1504:33475;17113:74;;;;;;;:::i;:::-;;;;17086:17;;;;:::i;:::-;1504:33475;;17086:17;;;;1504:33475;;;;16687:49;;;1504:33475;16687:49;;1504:33475;16687:49;;;;;;1504:33475;16687:49;;;:::i;:::-;;;1504:33475;;;;;16687:49;;;;;;-1:-1:-1;16687:49:22;;16597:47;;;1504:33475;16597:47;;1504:33475;16597:47;;;;;;1504:33475;16597:47;;;:::i;:::-;;;1504:33475;;;;;16597:47;;;;;;-1:-1:-1;16597:47:22;;16252:52;;;1504:33475;16252:52;;1504:33475;16252:52;;;;;;1504:33475;16252:52;;;:::i;:::-;;;1504:33475;;;;;16252:52;;;;;;-1:-1:-1;16252:52:22;;16166:50;;;1504:33475;16166:50;;1504:33475;16166:50;;;;;;1504:33475;16166:50;;;:::i;:::-;;;1504:33475;;;;;16166:50;;;;;;-1:-1:-1;16166:50:22;;15929:105;;;;1504:33475;15929:105;1504:33475;15929:105;;;;;;;:::i;:::-;;;;;;15726:50;;1504:33475;15726:50;;1504:33475;15726:50;;;;;;1504:33475;15726:50;;;:::i;:::-;;;1504:33475;;;;15717:129;1504:33475;;15726:50;;;;;-1:-1:-1;15726:50:22;;15581:52;;1504:33475;15581:52;;1504:33475;15581:52;;;;;;1504:33475;15581:52;;;:::i;:::-;;;1504:33475;;;;15572:135;1504:33475;;15581:52;;;;;-1:-1:-1;15581:52:22;;15305:92;;;1504:33475;15305:92;1504:33475;15305:92;;;;;;;:::i;:::-;;;;15278:17;;;;:::i;:::-;1504:33475;;15278:17;;;;14864:49;;;1504:33475;14864:49;;1504:33475;14864:49;;;;;;1504:33475;14864:49;;;:::i;:::-;;;1504:33475;;;;;14864:49;;;;;;-1:-1:-1;14864:49:22;;14774:47;;;1504:33475;14774:47;;1504:33475;14774:47;;;;;;1504:33475;14774:47;;;:::i;:::-;;;1504:33475;;;;;14774:47;;;;;;-1:-1:-1;14774:47:22;;1504:33475;;;;;;;;;;14435:52;;;1504:33475;14435:52;;1504:33475;14435:52;;;;;;1504:33475;14435:52;;;:::i;:::-;;;1504:33475;;;;;14435:52;;;;;;-1:-1:-1;14435:52:22;;14349:50;;;1504:33475;14349:50;;1504:33475;14349:50;;;;;;1504:33475;14349:50;;;:::i;:::-;;;1504:33475;;;;;14349:50;;;;;;-1:-1:-1;14349:50:22;;14115:92;;;;1504:33475;14115:92;1504:33475;14115:92;;;;;;;:::i;:::-;;;;;;13953:39;;;;;;;;;;:::i;:::-;1504:33475;13953:39;;;;1504:33475;;;;;;1671:64:0;1504:33475:22;;;;13953:39;;;1504:33475;;;;;;;;;;;;;1671:64:0;1504:33475:22;;;;;;;;;;;;1671:64:0;1504:33475:22;;;1671:64:0;;:::i;:::-;1504:33475:22;;;13953:39;;;1504:33475;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13953:39;;;;;;1504:33475;;;;;;;;;;;;;;;;;;;;;;;1671:64:0;;;;;1504:33475:22;1671:64:0;;1504:33475:22;;;;;;;;13894:49;;;;1504:33475;13894:49;;1504:33475;13894:49;;;;;;1504:33475;13894:49;;;:::i;:::-;;;1504:33475;;;;;;;;13894:49;;;;;-1:-1:-1;13894:49:22;;13797:52;;;;1504:33475;13797:52;;1504:33475;13797:52;;;;;;1504:33475;13797:52;;;:::i;:::-;;;1504:33475;;;;;;;13797:52;;;;;;-1:-1:-1;13797:52:22;;13563:47;;;1504:33475;13563:47;;1504:33475;13563:47;;;;;;1504:33475;13563:47;;;:::i;:::-;;;1504:33475;;;;;13563:47;;;;;;-1:-1:-1;13563:47:22;;13377:50;;;1504:33475;13377:50;;1504:33475;13377:50;;;;;;1504:33475;13377:50;;;:::i;:::-;;;1504:33475;;;;;13377:50;;;;;;-1:-1:-1;13377:50:22;;13292:57;;;1504:33475;13292:57;;1504:33475;13292:57;;;;;;1504:33475;13292:57;;;:::i;:::-;;;1504:33475;;;;;13292:57;;;;;;-1:-1:-1;13292:57:22;;13186:47;;;;;1504:33475;13186:47;;1504:33475;13186:47;;;;;;1504:33475;13186:47;;;:::i;:::-;;;1504:33475;;;;;;;;;13186:47;;;;;-1:-1:-1;13186:47:22;;13096:50;;;;1504:33475;13096:50;;1504:33475;13096:50;;;;;;1504:33475;13096:50;;;:::i;:::-;;;1504:33475;;;;;;;;;;13096:50;;;;;-1:-1:-1;13096:50:22;;7092:100:0;7123:30;;1504:33475:22;;;7123:30:0;;;;;:::i;:::-;;;;6809:200;;7092:100;;;;;6809:200;6899:30;1504:33475:22;6840:40:0;1504:33475:22;;;;;;;;;;;;;;;;;1671:64:0;1504:33475:22;;;6840:40:0;1504:33475:22;;6899:30:0;;;;;;1504:33475:22;;;;;;;;;;;;;;;;;;;;;;;6899:30:0;;;;1504:33475:22;;6948:30:0;;;1504:33475:22;;;;;;;;;;;;;;12524:9;1504:33475;;;;;;;;6948:30:0;;;;;;:::i;:::-;6809:200;;;12807:52:22;;;1504:33475;12807:52;;1504:33475;12807:52;;;;;;1504:33475;12807:52;;;:::i;:::-;;;1504:33475;;;;;12807:52;;;;;;-1:-1:-1;12807:52:22;;12702:84;1504:33475;12702:84;;;;;;;;;;;;:::i;:::-;;;1504:33475;;;;12702:84;;;;;;;;1504:33475;;;;;;;-1:-1:-1;1504:33475:22;;-1:-1:-1;1504:33475:22;;;;;;;;;;1248:14:1;1504:33475:22;;1671:64:0;;1504:33475:22;1671:64:0;;1504:33475:22;1671:64:0;1504:33475:22;;1671:64:0;12624:68:22;;;1504:33475;12624:68;1504:33475;12624:68;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;9077:99:0;9107:30;;1504:33475:22;;;9107:30:0;;;;;:::i;:::-;;;;8794:200;;9077:99;;;;;8794:200;8884:30;1504:33475:22;8824:41:0;1504:33475:22;;;;;;;;;;;;;;;;;1671:64:0;1504:33475:22;;;8824:41:0;1504:33475:22;;8884:30:0;;;;;;1504:33475:22;;;;;;;;;;;;;;;;;;;;;;;8884:30:0;;;;1504:33475:22;;8933:30:0;;;1504:33475:22;;;;;;;;;;;;;;12524:9;1504:33475;;;;;;;;8933:30:0;;;;;;:::i;:::-;8794:200;;;12191:35:22;;;;:::i;:::-;1504:33475;;12191:35;;;;1504:33475;;;;;;;;;;;;;;3020:82;1504:33475;;;;;;;;;;;;;;;;;;;;2596:81;1504:33475;;;;;;;;;;;;;;;;;;;;;;;;2772:129;1504:33475;;;;;;;;;;;;;;;;;;;;;5878:14;1504:33475;;;;5915:15;1504:33475;;;5953:11;1504:33475;;;;5701:274;;;;;;;;;;;;;;;;;;;;;;1504:33475;5701:274;;;;1504:33475;;;;;;;;;;;;;5787:4;1504:33475;;;;5787:4;1504:33475;;;;;;;;;;;;;;;;5701:274;;;;;;;;;1504:33475;;;;;;5684:291;1504:33475;;;5684:291;1504:33475;;;1671:64:0;;;;:::i;:::-;1504:33475:22;1671:64:0;;1504:33475:22;;;;;7591:54:14;1504:33475:22;;7591:54:14;;1504:33475:22;;7591:54:14;;;;;;1504:33475:22;7591:54:14;;;1504:33475:22;;;;;;:::i;:::-;;;;;;7591:54:14;;;;;;;;:::i;:::-;1671:64:0;852:159:14;591:42;852:159;;;1504:33475:22;6191:8;1504:33475;;6164:13;1504:33475;;;;;;;;;;;6164:13;1504:33475;;;;;;;;;;;;;;;;;7591:54:14;1504:33475:22;;6264:15;1504:33475;;;;;;;;;;;6264:15;1504:33475;;;;;;;;;;;;;;;;6440:12;1504:33475;;;;;;;;;;;6440:12;1504:33475;;;;;;6458:7;1504:33475;;;;;5684:291;1504:33475;;6554:19;1504:33475;;;;;;;;;;;6554:19;1504:33475;;;;;;;;;;;;;;;;;5684:291;1504:33475;;6613:17;1504:33475;;;;;;;;;;;6613:17;1504:33475;;;;;;6613:17;1504:33475;;;;;;;;;;;;;6729:11;1248:14:1;1504:33475:22;;6713:41;;;;1504:33475;;6713:41;1248:14:1;6713:41:22;;1504:33475;6713:41;;1504:33475;6743:10;7591:54:14;1248:14:1;;1504:33475:22;6713:41;;1504:33475;6713:41;;1504:33475;6713:41;;;;;;;;1504:33475;1248:14:1;;1504:33475:22;6780:13;1248:14:1;1504:33475:22;;6764:43;;;;1504:33475;;6764:43;1248:14:1;6764:43:22;;1504:33475;6764:43;;1504:33475;6743:10;7591:54:14;1248:14:1;;1504:33475:22;6764:43;;1504:33475;6764:43;;1504:33475;6764:43;;;;;;;;1504:33475;6817:34;;1504:33475;6817:34;;;;1504:33475;;;1248:14:1;6817:34:22;;5787:4;1504:33475;6817:34;;1504:33475;6743:10;7591:54:14;1248:14:1;;1504:33475:22;6817:34;;1504:33475;6817:34;;1504:33475;6817:34;;;;;;;;1504:33475;;;6875:8;1504:33475;;;6861:23;;;;1504:33475;;6861:23;1248:14:1;6861:23:22;;1504:33475;6861:23;;1504:33475;6861:23;;7591:54:14;6861:23:22;;1504:33475;6861:23;;;;;;;;1504:33475;;;;6191:8;1504:33475;;;;;6894:54;;;;1248:14:1;6894:54:22;;5787:4;1504:33475;6894:54;;1504:33475;6935:12;7591:54:14;1248:14:1;;1504:33475:22;6894:54;;;;;;;;1504:33475;6958:14;1504:33475;6958:14;;;;1504:33475;;;1248:14:1;6958::22;;;;1504:33475;6958:14;;1504:33475;6958:14;;;;;;;;1504:33475;;;;7580:14;1504:33475;;;;7450:145;;;;;;5701:274;7450:145;;;;;;;;;;;;;;5787:4;7450:145;;;1504:33475;;;;;1248:14:1;;;;;6164:13:22;1504:33475;1248:14:1;;;1504:33475:22;;;;;;;;5787:4;1504:33475;;-1:-1:-1;1248:14:1;;;;;;7450:145:22;;;;;;1248:14:1;;1504:33475:22;7450:145;;;1248:14:1;;1504:33475:22;6264:15;1504:33475;;;;;;1248:14:1;1504:33475:22;1248:14:1;1504:33475:22;1248:14:1;;;;;;7450:145:22;;;;;;1248:14:1;;1504:33475:22;7450:145;;;1248:14:1;;1504:33475:22;6440:12;1504:33475;;;;;;;6440:12;1504:33475;;;1248:14:1;;;;;;;;7450:145:22;;;;;;1248:14:1;;1504:33475:22;7450:145;;;1248:14:1;;1504:33475:22;6613:17;1504:33475;;;;;;1248:14:1;1504:33475:22;1248:14:1;1504:33475:22;1248:14:1;;;;;;7450:145:22;;;;;;1248:14:1;;1504:33475:22;7450:145;;;1248:14:1;;1504:33475:22;6554:19;1504:33475;;;;;;;6554:19;1504:33475;;;1248:14:1;1504:33475:22;1248:14:1;;;;;;-1:-1:-1;;;7450:145:22;;;1504:33475;1248:14:1;1504:33475:22;7450:145;;;;;;;;;;7631:24;1504:33475;7437:158;1504:33475;;;;;;;;7437:158;1504:33475;1248:14:1;1504:33475:22;7621:7;1248:14:1;1504:33475:22;;;;7631:24;:::i;:::-;7605:51;1504:33475;7605:51;;;;;1504:33475;;;;;7605:51;;;;;1248:14:1;7605:51:22;;1504:33475;7605:51;;;:::i;:::-;;;;1504:33475;7605:51;;;;;;;;1248:14:1;;;7727:35:22;1504:33475;7621:7;1248:14:1;1504:33475:22;7727:35;:::i;:::-;7772:38;1504:33475;7437:158;1248:14:1;1504:33475:22;7772:38;:::i;:::-;1504:33475;5684:291;1504:33475;;7863:42;;;;;;1504:33475;;1248:14:1;7863:42:22;;7591:54:14;1248:14:1;;1504:33475:22;;7863:42;;1248:14:1;7727:12:22;1504:33475;;;;;;;;7727:12;1504:33475;;;1248:14:1;1504:33475:22;1248:14:1;;;;;;7863:42:22;;;;;;;;;;;;;;;;;;;;;1248:14:1;1504:33475:22;;7991:9;1504:33475;;;7969:33;;;;1504:33475;;7969:33;1248:14:1;7969:33:22;;1504:33475;7969:33;;1504:33475;7969:33;;7591:54:14;7969:33:22;;1504:33475;7969:33;;;;;;;;1248:14:1;;1504:33475:22;7621:7;1248:14:1;1504:33475:22;;5953:11;1504:33475;;;5684:291;1504:33475;;8143:102;;;;;1248:14:1;1504:33475:22;;;;;8143:102;;;;;1248:14:1;8143:102:22;;1504:33475;8143:102;;1504:33475;6458:7;7591:54:14;1248:14:1;;1504:33475:22;1248:14:1;1504:33475:22;1248:14:1;;1504:33475:22;;1248:14:1;;1504:33475:22;8143:102;;;;;;;;1248:14:1;1504:33475:22;;5915:15;1504:33475;;;5684:291;1504:33475;;8305:98;;;;;1504:33475;;;;;;;8305:98;;;;;1248:14:1;8305:98:22;;1504:33475;8305:98;;1504:33475;1248:14:1;7591:54:14;1248:14:1;;;8397:4:22;1504:33475;1248:14:1;;1504:33475:22;8305:98;;;;;;;;1248:14:1;1504:33475:22;;5878:14;1504:33475;;;7621:7;1248:14:1;1504:33475:22;8490:60;;;;;1504:33475;;;;;;;8490:60;;;;;1248:14:1;8490:60:22;;1504:33475;8490:60;;1504:33475;1248:14:1;7591:54:14;1248:14:1;;1504:33475:22;1248:14:1;1504:33475:22;1248:14:1;;1504:33475:22;8490:60;;;;;;;;1248:14:1;1504:33475:22;;5878:14;1504:33475;;;5684:291;1504:33475;;8611:66;;;;;1504:33475;;;;;;;8611:66;;;;;1248:14:1;8611:66:22;;1504:33475;8611:66;;1504:33475;1248:14:1;7591:54:14;1248:14:1;;1504:33475:22;;;1248:14:1;;1504:33475:22;8611:66;;;;;;;;1248:14:1;8688::22;;1504:33475;8688:14;;;;1504:33475;;;1248:14:1;8688::22;;;;1504:33475;8688:14;;1504:33475;8688:14;;;;;;;;1248::1;1504:33475:22;;;;8780:11;;;;;5701:274;8780:11;;;;;;;;;;;;;;;;;;;;;;;;;1504:33475;;8769:22;1504:33475;;;;;;8769:22;1504:33475;;7621:7;1248:14:1;1504:33475:22;;;7580:14;1504:33475;;;;8870:19;1504:33475;;;;;;;;8801:89;;;;1504:33475;1248:14:1;1504:33475:22;;;;;;8801:89;;;;;1248:14:1;8801:89:22;;5787:4;1504:33475;8801:89;;1504:33475;7591:54:14;1248:14:1;;1504:33475:22;;1248:14:1;;1504:33475:22;;1248:14:1;;1504:33475:22;;;8801:89;;;;;;;;1248:14:1;;1504:33475:22;9012:11;1248:14:1;1504:33475:22;9026:22;1504:33475;8769:22;1248:14:1;1504:33475:22;9026:22;:::i;:::-;8996:53;1504:33475;8996:53;;;;;1504:33475;;;;;8996:53;;;;;1248:14:1;8996:53:22;;1504:33475;8996:53;;;:::i;:::-;;;;1504:33475;8996:53;;;;;;;;1248:14:1;;1504:33475:22;9075:13;1248:14:1;1504:33475:22;9091:22;1504:33475;8769:22;1248:14:1;1504:33475:22;9091:22;:::i;:::-;9059:55;1504:33475;9059:55;;;;;1504:33475;;;;;9059:55;;;;;1248:14:1;9059:55:22;;1504:33475;9059:55;;;:::i;:::-;;;;1504:33475;9059:55;;;;;;;;1248:14:1;1504:33475:22;;9140:9;1504:33475;;9152:22;1504:33475;8769:22;1248:14:1;1504:33475:22;9152:22;:::i;:::-;9124:51;1504:33475;9124:51;;;;;1504:33475;;;;;9124:51;;;;;1248:14:1;9124:51:22;;1504:33475;9124:51;;;:::i;:::-;;;;1504:33475;9124:51;;;;;;;;1248:14:1;1504:33475:22;;;1248:14:1;9222:75:22;;9230:66;1504:33475;9222:75;;1504:33475;;9222:75;7591:54:14;9222:75:22;1504:33475;9222:75;;;;;;1504:33475;9222:75;;;;;1248:14:1;1504:33475:22;;9214:83;1504:33475;;;;;;;9214:83;1504:33475;;9307:26;;;;1504:33475;;;9307:26;1248:14:1;9307:26:22;;1504:33475;;;9307:26;;1504:33475;6743:10;7591:54:14;1248:14:1;;1504:33475:22;9307:26;;1504:33475;9307:26;;1504:33475;9307:26;;;;;;;;1248:14:1;1504:33475:22;;9214:83;1504:33475;;;9393:24;;;;1504:33475;;9393:24;1248:14:1;9393:24:22;;1504:33475;9393:24;;1504:33475;;7591:54:14;1248:14:1;;;;1504:33475:22;1248:14:1;;1504:33475:22;1248:14:1;1504:33475:22;;;1248:14:1;9393:24:22;;1248:14:1;9393:24:22;;1504:33475;9393:24;;;;;;;;1248:14:1;1504:33475:22;;;1248:14:1;9434:75:22;;9442:66;1504:33475;9434:75;;1504:33475;;9434:75;7591:54:14;9434:75:22;1504:33475;9434:75;;;;;;1504:33475;9434:75;;;;;1248:14:1;1504:33475:22;;9428:81;1504:33475;;;;;;;9428:81;1504:33475;;9519:24;;;;1504:33475;;;9519:24;1248:14:1;9519:24:22;;1504:33475;;;9519:24;;1504:33475;6743:10;7591:54:14;1248:14:1;;1504:33475:22;9519:24;;1504:33475;9519:24;;1504:33475;9519:24;;;;;;;;1248:14:1;1504:33475:22;;9428:81;1504:33475;;;9553:20;;;;1504:33475;;9553:20;1248:14:1;9553:20:22;;1504:33475;9553:20;;1504:33475;;7591:54:14;1248:14:1;;;1504:33475:22;;1248:14:1;;1504:33475:22;1248:14:1;1504:33475:22;;;1248:14:1;9553:20:22;;1248:14:1;9553:20:22;;1504:33475;9553:20;;;;;;;;1248:14:1;;1504:33475:22;6729:11;1248:14:1;1504:33475:22;;9584:41;;;;1504:33475;;9584:41;1248:14:1;9584:41:22;;1504:33475;9584:41;;1504:33475;6743:10;7591:54:14;1248:14:1;;1504:33475:22;9584:41;;1504:33475;9584:41;;1504:33475;9584:41;;;;;;;;1248:14:1;;1504:33475:22;6780:13;1248:14:1;1504:33475:22;;9635:43;;;;1504:33475;;9635:43;1248:14:1;9635:43:22;;1504:33475;9635:43;;1504:33475;6743:10;7591:54:14;1248:14:1;;1504:33475:22;9635:43;;1504:33475;9635:43;;1504:33475;9635:43;;;;;;;;1248:14:1;;;1504:33475:22;9762:13;1248:14:1;1504:33475:22;;;;;1248:14:1;7591:54:14;1248:14:1;;;9762:29:22;;;;;1504:33475;9762:29;;1504:33475;9762:29;;;;;;;;1504:33475;9762:29;;;;;1248:14:1;1504:33475:22;;;9736:56;1504:33475;;;9736:56;1504:33475;9859:44;1504:33475;;1671:64:0;;;:::i;:::-;7580:14:22;1671:64:0;;1248:14:1;1504:33475:22;1248:14:1;;;9859:44:22;:::i;:::-;1504:33475;;9926:16;;;;;;;;;;5701:274;9926:16;;;;;;;;;;;;;;;;;;;;1504:33475;;10106:24;1504:33475;;;;;;;;;;1248:14:1;1504:33475:22;6729:11;1248:14:1;1504:33475:22;;;;10106:24;:::i;:::-;10076:55;1504:33475;10076:55;;;;;1504:33475;;;;;10076:55;;;;;1248:14:1;10076:55:22;;1504:33475;10076:55;;;:::i;:::-;;;;1504:33475;10076:55;;;;;;;;;;;1248:14:1;;;1504:33475:22;6780:13;1248:14:1;1504:33475:22;10173:24;1504:33475;;1248:14:1;1504:33475:22;10173:24;:::i;:::-;10141:57;1504:33475;10141:57;;;;;1504:33475;;;;;10141:57;;;;;1248:14:1;10141:57:22;;1504:33475;10141:57;;;:::i;:::-;;;;1504:33475;10141:57;;;;;;;;;;;1248:14:1;;;1504:33475:22;;1248:14:1;1504:33475:22;;10267:29;;;;1504:33475;;10267:29;1248:14:1;10267:29:22;;1504:33475;10267:29;;1504:33475;10267:29;;7591:54:14;10267:29:22;;1504:33475;10267:29;;;;;;;;;;;1248:14:1;1504:33475:22;;;;10464:38;1504:33475;;1671:64:0;;;:::i;:::-;1504:33475:22;1671:64:0;;1248:14:1;;;;;10464:38:22;:::i;:::-;7591:54:14;1504:33475:22;9762:13;1248:14:1;1504:33475:22;;;;10535:29;;;;;;;;1504:33475;10535:29;;1504:33475;10535:29;;;;;;1504:33475;10535:29;;;;;1248:14:1;1504:33475:22;;;10512:53;1504:33475;;;10512:53;1504:33475;;;10535:29;;;;1504:33475;10535:29;1504:33475;10535:29;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;10267;;;;:::i;:::-;1504:33475;;10267:29;;;;1504:33475;;;10267:29;1504:33475;;;10141:57;;;;:::i;:::-;1504:33475;;10141:57;;;;;1504:33475;;;;10076:55;;;;:::i;:::-;1504:33475;;10076:55;;;;9926:16;7591:54:14;1671:64:0;;;;;1504:33475:22;1671:64:0;;9762:29:22;;;;1504:33475;9762:29;1504:33475;9762:29;;;;;;;:::i;:::-;;;;9635:43;;;;:::i;:::-;1504:33475;;9635:43;;;;9584:41;;;;:::i;:::-;1504:33475;;9584:41;;;;9553:20;;;;:::i;:::-;1504:33475;;9553:20;;;;9519:24;;;;:::i;:::-;1504:33475;;9519:24;;;;9434:75;;;;1504:33475;9434:75;1504:33475;9434:75;;;;;;;:::i;:::-;;;;9393:24;;;;:::i;:::-;1504:33475;;9393:24;;;;9307:26;;;;:::i;:::-;1504:33475;;9307:26;;;;9222:75;;;;1504:33475;9222:75;1504:33475;9222:75;;;;;;;:::i;:::-;;;;9124:51;;;;:::i;:::-;1504:33475;;9124:51;;;;9059:55;;;;:::i;:::-;1504:33475;;9059:55;;;;8996:53;;;;:::i;:::-;1504:33475;;8996:53;;;;8801:89;;;;:::i;:::-;1504:33475;;8801:89;;;;8780:11;1504:33475;;;;;;;;;;;8780:11;7591:54:14;1671:64:0;;;;;1504:33475:22;1671:64:0;;8688:14:22;;;;:::i;:::-;1504:33475;;8688:14;;;;8611:66;;;;:::i;:::-;1504:33475;;8611:66;;;;8490:60;;;;:::i;:::-;1504:33475;;8490:60;;;;8305:98;;;;:::i;:::-;1504:33475;;8305:98;;;;8143:102;;;;:::i;:::-;1504:33475;;8143:102;;;;7969:33;;;;:::i;:::-;1504:33475;;7969:33;;;;7863:42;;;;:::i;:::-;1504:33475;;7863:42;;;;1248:14:1;1504:33475:22;;;;;;;1248:14:1;;;;1504:33475:22;1248:14:1;;;;;;;7605:51:22;;;;:::i;:::-;1504:33475;;7605:51;;;;1248:14:1;1504:33475:22;;;;;;1248:14:1;;-1:-1:-1;1504:33475:22;1248:14:1;;;;1504:33475:22;1248:14:1;;;;;;;;1504:33475:22;;;;;;1248:14:1;;-1:-1:-1;1504:33475:22;1248:14:1;;;;1504:33475:22;1248:14:1;;;;;;;;;;1504:33475:22;;1248:14:1;;-1:-1:-1;1504:33475:22;1248:14:1;;;;1504:33475:22;1248:14:1;;;;;;;;1504:33475:22;;;;;;1248:14:1;;-1:-1:-1;1504:33475:22;1248:14:1;;;;1504:33475:22;1248:14:1;;;;;;;;1504:33475:22;;;;;;1248:14:1;;-1:-1:-1;1504:33475:22;1248:14:1;;;;1504:33475:22;1248:14:1;;;;;;;7450:145:22;7591:54:14;1671:64:0;;;;;1504:33475:22;1671:64:0;;6958:14:22;;;;:::i;:::-;1504:33475;;6958:14;;;;6894:54;;;1504:33475;6894:54;1504:33475;6894:54;;;;;;;:::i;:::-;;;;;6861:23;;;;:::i;:::-;1504:33475;;6861:23;;;;6817:34;;;;:::i;:::-;1504:33475;;6817:34;;;;6764:43;;;;:::i;:::-;1504:33475;;6764:43;;;;6713:41;;;;:::i;:::-;;;;1504:33475;7591:54:14;1504:33475:22;;;;6191:8;1504:33475;;;;7591:54:14;1504:33475:22;;;;6191:8;1504:33475;;;;;;;;;;;;;;;;;;;4571:77;1504:33475;;;;;1671:64:0;;;;;;;;:::o;:::-;1504:33475:22;1671:64:0;;;;;;;;;;;1504:33475:22;1671:64:0;:::o;:::-;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;;1671:64:0;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::i;:::-;1504:33475:22;1671:64:0;1504:33475:22;;1671:64:0;;;:::i;:::-;;;;-1:-1:-1;1671:64:0;;;;:::o;:::-;;;:::o;:::-;;;;;;;;;;1504:33475:22;;;1671:64:0;;;;;:::o;1819:584::-;1873:7;1504:33475:22;;;;;;;;;;;;;;;1896:14:0:o;1869:528::-;1941:25;2939:104;;;1980:374;;2367:19;;;:::o;1980:374::-;1504:33475:22;;;;;2196:43:0;;;;1504:33475:22;;;1671:64:0;1504:33475:22;1671:64:0;;1504:33475:22;;2196:43:0;;;;;:::i;:::-;2086:175;1671:64;1504:33475:22;;2086:175:0;;1671:64;2196:43;2086:175;;1671:64;;;;;;;;;;;;:::i;:::-;;;2086:175;1671:64;2086:175;;;;;;;:::i;:::-;2047:232;;;;;2312:27;2047:232;;:::i;:::-;2196:43;1671:64;;;2312:27;;;;;;:::i;:::-;2367:19;:::o;1504:33475:22:-;7727:12;1504:33475;;;;;;;;;;;7727:12;1504:33475;;;;;;;;7727:12;-1:-1:-1;1504:33475:22;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;1504:33475:22;;;;;-1:-1:-1;1504:33475:22;1248:14:1;;;;-1:-1:-1;1671:64:0;;;:::i;:::-;1504:33475:22;1671:64:0;1504:33475:22;;1671:64:0;;;:::i;:::-;;;;1248:14:1;;;;;:::o;:::-;;1671:64:0;;1504:33475:22;1248:14:1;;1671:64:0;;1504:33475:22;;;;;;;;;1248:14:1;;;:::i;:::-;1671:64:0;;1248:14:1;;;:::o;:::-;;;1504:33475:22;1248:14:1;;;1504:33475:22;;;1248:14:1;;;;;;;;:::i;:::-;;;;;;;;;;1504:33475:22;;;1248:14:1;;;;;:::o;6108:121:14:-;-1:-1:-1;6108:121:14;;1504:33475:22;;6179:42:14;;1504:33475:22;6179:42:14;;;;;;;;;;;1504:33475:22;;;;;;:::i;:::-;6179:42:14;;;;;;;;:::i;:::-;1671:64:0;852:159:14;591:42;852:159;;;6108:121::o;1504:33475:22:-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;5469:178:0:-;;5545:6;;;;5541:100;;;5469:178;;;;;:::o;5541:100::-;5572:30;;1504:33475:22;;;;5572:30:0;;;;;:::i;:::-;;;;5255:203;;5541:100;;;;5255:203;1504:33475:22;;;;5286:41:0;1504:33475:22;;;;;;;;;;;;;;;;;;;;;5286:41:0;1504:33475:22;;;;;;;;;;;;;;;;;;;;5346:31:0;;;;;1504:33475:22;;;;;;;;;;;;;;;;;;;5396:31:0;;;:::i;:::-;5255:203;;;;;2410:424;2939:104;;;2445:359;;2410:424;1504:33475:22;;;2928:1:0;1504:33475:22;;;2928:1:0;1504:33475:22;2410:424:0:o;2445:359::-;1504:33475:22;;2645:67:0;;;;1504:33475:22;;;;1671:64:0;1504:33475:22;;;;2705:4:0;1504:33475:22;;;;;2645:67:0;;1504:33475:22;1671:64:0;;;;;;;;;;;;-1:-1:-1;1671:64:0;2534:196;;1671:64;;;;1504:33475:22;1671:64:0;2534:196;;;1671:64;;;;;;;;;;;;;;:::i;2534:196::-;2499:245;;;;;;;:::i;:::-;;2445:359;;;16255:93:5;13685:6:22;16318:15:5;1504:33475:22;16318:15:5;;1504:33475:22;;;;16310:31:5;;;;;;-1:-1:-1;1504:33475:22;;;;;;16310:31:5;;;;;1248:14:1;16310:31:5;;;;;1504:33475:22;16310:31:5;;;;;;;;16255:93;:::o;16310:31::-;;;;:::i;:::-;16255:93::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "alice()": "fb47e3a2",
    "bob()": "c09cec77",
    "compliantVault()": "4676077e",
    "convexBooster()": "2cdacb50",
    "convexFeeRegistry()": "d2f4b0ca",
    "convexFraxVoterProxy()": "2ebe9869",
    "convexOperator()": "1895c4a7",
    "convexPoolRegistry()": "55c28752",
    "curveLpMinter()": "7495ce11",
    "cvxStkFrxEthLp()": "31f4f95c",
    "cvxToken()": "94112dba",
    "cvxVault()": "8e8f4a9d",
    "cvxfrxEthFrxEth()": "663eeb3d",
    "failed()": "ba414fa6",
    "fraxAdmin()": "903ee26c",
    "fraxToken()": "a45b686a",
    "frxETHCRV()": "3fb847b3",
    "frxEth()": "9bb2eb2b",
    "frxEthFarm()": "8c1eda2b",
    "frxEthMinter()": "0d199eaa",
    "frxFamilyGauge()": "e40b5339",
    "frxFarm()": "6fa89364",
    "fxsDistributor()": "0ac0304f",
    "fxsToken()": "09dacc04",
    "fxsWhale()": "a841a0a8",
    "gaugeController()": "99eecb3b",
    "nonCompliantVault()": "6f539c2e",
    "nonTransferrableGaugeTVL()": "76729f26",
    "receiverOwner()": "ddf42c0d",
    "receiverVault()": "a8848cda",
    "rewardManager()": "0f4ef8a6",
    "rewardToken()": "f7c618c1",
    "senderOwner()": "d558358d",
    "senderVault()": "c2919040",
    "setUp()": "0a9254e4",
    "testEnd2End()": "185a8d73",
    "transferrableGaugeTVL()": "8194fb97",
    "vaultImpl()": "ec1e31a0",
    "vaultOwner()": "1f52692b",
    "vaultRewardsAddress()": "66843cba"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"alice\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"bob\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"compliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexBooster\",\"outputs\":[{\"internalType\":\"contract Booster\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexFeeRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexFraxVoterProxy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexOperator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"convexPoolRegistry\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"curveLpMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxStkFrxEthLp\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cvxfrxEthFrxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fraxToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxETHCRV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEth\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxEthMinter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxFamilyGauge\",\"outputs\":[{\"internalType\":\"contract FraxFamilialPitchGauge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"frxFarm\",\"outputs\":[{\"internalType\":\"contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsDistributor\",\"outputs\":[{\"internalType\":\"contract FraxGaugeFXSRewardsDistributor\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fxsWhale\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"gaugeController\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonCompliantVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonTransferrableGaugeTVL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverOwner\",\"outputs\":[{\"internalType\":\"contract MockVaultOwner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"receiverVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract MockERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderOwner\",\"outputs\":[{\"internalType\":\"contract MockVaultOwner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"senderVault\",\"outputs\":[{\"internalType\":\"contract StakingProxyConvex\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"testEnd2End\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferrableGaugeTVL\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultImpl\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultOwner\",\"outputs\":[{\"internalType\":\"contract MockVaultOwner\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultRewardsAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"receiverOwner()\":{\"notice\":\"The receiving vault owner - IS A CONTRACT\"},\"senderOwner()\":{\"notice\":\"The sending vault owner - IS NOT A CONTRACT\"},\"senderVault()\":{\"notice\":\"The sending vault\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/FraxFarmERC20TransfersTest.t.sol\":\"FraxFarmERC20TransfersTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000},\"remappings\":[\":@convex/=lib/frax-cvx-platform/contracts/contracts/\",\":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":@frax_testing/=lib/frax_testing/src/\",\":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/\",\":@interfaces/=src/interfaces/\",\":@mocks/=test/mocks/\",\":@openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":frax-cvx-platform/=lib/frax-cvx-platform/contracts/\",\":frax-solidity/=lib/frax-solidity/\",\":frax_testing/=lib/frax_testing/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/\",\":solmate/=lib/frax_testing/lib/solmate/src/\"],\"viaIR\":true},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"lib/forge-std/src/Common.sol\":{\"keccak256\":\"0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd\",\"dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN\"]},\"lib/forge-std/src/Components.sol\":{\"keccak256\":\"0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079\",\"dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d\",\"dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116\",\"dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b\",\"dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc\",\"dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a\",\"dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b\",\"dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca\",\"dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9\",\"dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa\",\"dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD\"]},\"lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol\":{\"keccak256\":\"0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961\",\"dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP\"]},\"src/ConvexBoosterImprovedInitializer.sol\":{\"keccak256\":\"0xf6a01dc9223567919a1a0d7d4656643015dd699aa917e1dfc406f1f39d907db9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b85ce0b06c612188d57ba076c0b0f436e3f9a5390a74611329ef5d4a1a08283a\",\"dweb:/ipfs/Qma8Fnof7rYmzuBVQywyKvDTzG8eUx4LQnc2bJUnJXoGah\"]},\"src/ConvexVaultTransferrable.sol\":{\"keccak256\":\"0x7bae856f0d59006589d71b450a37422a7ee93b4f15601f200e9db3842317d4e2\",\"urls\":[\"bzz-raw://5c01ccf852c40d60dbd33b59f52286614d61f3b583c91bd86419bf035daad4f7\",\"dweb:/ipfs/QmTnX3WZihs5eEvsWtqPch8cU2V4bKhDA1zmAs8FGKjrVg\"]},\"src/FraxFamilialPitchGauge.sol\":{\"keccak256\":\"0x158909430f5c0b945e7e7d4ac0d61591f5a70dfcf5678ee02e1046a26249f9d2\",\"urls\":[\"bzz-raw://892d7924e16b4886e44e5f5eeb0e0fe9742822f17fa0d17bb153f7c1fa78b51b\",\"dweb:/ipfs/QmdfCdPbbs61qaUgi5nKxDkEhGZB1MxbQnkrB2JBRpCm9Q\"]},\"src/TransferrableConvexFrxEthFarm.sol\":{\"keccak256\":\"0xf2a1de87a668579ac9281201a56f88e27f358198c56549b16699b5ae9935ee26\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://0dd7b35c0f29fffc2c83fef495027800007edca12135d1976e7a0d39e14a237a\",\"dweb:/ipfs/QmVRc6sMQ5hYaBuhQya9BbNaDMMo9UEshBaZURogJe7rYG\"]},\"src/interfaces/IFraxFarm.sol\":{\"keccak256\":\"0x4bde85cdb1c6ac00efb7384ef936f9d61da5e730a602797393cad8a56e612d50\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1701c51721202007ec7cb2821fa1e9afc504b9fbd98d6f36c21ced8dda1eb4f0\",\"dweb:/ipfs/QmbGPoTGZzsV9Yr2ut8fYSe7FgQyLiHr4iSNC1h35W7756\"]},\"src/interfaces/ILockReceiver.sol\":{\"keccak256\":\"0x88b3ba778f888db7da00f24c15b95cf1e26a0d5d29452fffe2d19113aa8e03cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73b7a6cabf04885c43dddce29efb1f22d31f79f57e7b3b5e9f9ed9f391ff6783\",\"dweb:/ipfs/Qmds1F8on5gW6b5ceEieNSAa8WkHaVBqq5PkUpudDWvMT8\"]},\"test/FraxFarmERC20TransfersTest.t.sol\":{\"keccak256\":\"0x0a951b057550e468581536749f4a2324068dd8a19e12e7215f6fa0774bf2161a\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://baa3f37d5c16dd92afd67c24a7d796abf5995e54df3f5e2ef6a5837f8e5b1762\",\"dweb:/ipfs/QmUstjXLvjbHHmqt9drpJ1u6nfkX3bqnoiprPsjo3ykMwB\"]},\"test/mocks/FraxFXSRewardDistributor.sol\":{\"keccak256\":\"0x7eb985b36bd53ecf5c2b8c837b192b325cc9509db0a047b161ffb52c0cc8c373\",\"urls\":[\"bzz-raw://94d526d33fd0913b64d44d1dd38b786c9011f2b53ada269e7999696724b23fcc\",\"dweb:/ipfs/QmaB7FevCs2rHLSq9gembZnt2rQjNDaT2DboG1gckFhq7C\"]},\"test/mocks/MockERC20.sol\":{\"keccak256\":\"0xef83fbd0fe6be3195adfaf81a9d3451d7330e29048006f5bca2fcd4150a15789\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8af67d3c617293d7e927503173b8291a403da0f08656682a348d5b9abc8764f0\",\"dweb:/ipfs/QmW3cTu5yGeXf4H7mw4q1vQCtnvJXzXYztSBvZbdVZjf1V\"]},\"test/mocks/MockVaultOwner.sol\":{\"keccak256\":\"0x512ba212dedc7b8d3dc619a72006f3f5c9113eaa9460ce843367b99a96fcf420\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5d41c862b02f539ba83451cb959edd294d57f9bf51ccd5662649b8685383ad7\",\"dweb:/ipfs/QmQsQh8VSzWdmsZ8WG382D1JfdLUgTHGA3zPYZsAMmq6Ht\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "alice",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "bob",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "compliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexBooster",
          "outputs": [
            {
              "internalType": "contract Booster",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexFeeRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexFraxVoterProxy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexOperator",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "convexPoolRegistry",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "curveLpMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxStkFrxEthLp",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "cvxfrxEthFrxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fraxAdmin",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fraxToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxETHCRV",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEth",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxEthMinter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxFamilyGauge",
          "outputs": [
            {
              "internalType": "contract FraxFamilialPitchGauge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "frxFarm",
          "outputs": [
            {
              "internalType": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsDistributor",
          "outputs": [
            {
              "internalType": "contract FraxGaugeFXSRewardsDistributor",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsToken",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "fxsWhale",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "gaugeController",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonCompliantVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nonTransferrableGaugeTVL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverOwner",
          "outputs": [
            {
              "internalType": "contract MockVaultOwner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "receiverVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardManager",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardToken",
          "outputs": [
            {
              "internalType": "contract MockERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderOwner",
          "outputs": [
            {
              "internalType": "contract MockVaultOwner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "senderVault",
          "outputs": [
            {
              "internalType": "contract StakingProxyConvex",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testEnd2End"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "transferrableGaugeTVL",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultImpl",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultOwner",
          "outputs": [
            {
              "internalType": "contract MockVaultOwner",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "vaultRewardsAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "receiverOwner()": {
            "notice": "The receiving vault owner - IS A CONTRACT"
          },
          "senderOwner()": {
            "notice": "The sending vault owner - IS NOT A CONTRACT"
          },
          "senderVault()": {
            "notice": "The sending vault"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@convex/=lib/frax-cvx-platform/contracts/contracts/",
        ":@frax/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":@frax_testing/=lib/frax_testing/src/",
        ":@fraxmocks/=lib/frax-solidity/src/hardhat/contracts/mocks/",
        ":@interfaces/=src/interfaces/",
        ":@mocks/=test/mocks/",
        ":@openzeppelin-contracts/=lib/openzeppelin-contracts/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":@staking/=lib/frax-solidity/src/hardhat/contracts/Staking/",
        ":ds-test/=lib/forge-std/lib/ds-test/src/",
        ":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        ":forge-std/=lib/forge-std/src/",
        ":frax-cvx-platform/=lib/frax-cvx-platform/contracts/",
        ":frax-solidity/=lib/frax-solidity/",
        ":frax_testing/=lib/frax_testing/src/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/contracts/",
        ":solmate/=lib/frax_testing/lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 100000
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "test/FraxFarmERC20TransfersTest.t.sol": "FraxFarmERC20TransfersTest"
      },
      "libraries": {},
      "viaIR": true
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Common.sol": {
        "keccak256": "0x1c92c530e5f0fcd895d48829ae786d63b87b02eaa203767813ffb39651d0b9b4",
        "urls": [
          "bzz-raw://75e17c301cf9072de9031b82821bb655e0d718ae16dd4de42f5a1355390697fd",
          "dweb:/ipfs/Qma61YBx9XAmRoRyjLWzUz65rDmRv9ARt79c1QDrMVZeGN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Components.sol": {
        "keccak256": "0xb2734f05b1a56bbdd8fd40c5c4b4f39e609501181583f4026fc4764416a0c350",
        "urls": [
          "bzz-raw://70a495f75d69f2f07c483ef479e1f7491d099329d7c8124d48ef88d528b15079",
          "dweb:/ipfs/QmZiaWVGqE5PagnYiEPXzCxYiDbFcGYzZWtYkqEXf3j1ja"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0xde2bdee8e0e530de3269da50ebba83f4f90dde817971488980b720281e3cde4d",
        "urls": [
          "bzz-raw://cb3f05bb06b654db43f4ce38e22aa7e2296ee00615df5329623c08c9ac030f8d",
          "dweb:/ipfs/QmdKwTpFsTiDFmc8zGwbPRu8mDs4oiKdZvzSj3WpiiGaez"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x4b47eb30f37e79a5bb47ad36b8808b3cfee6c21c9a39d3bf9895d554fba5f969",
        "urls": [
          "bzz-raw://e5000580a2d5b0c7988356afcf5e9e0aadd6a34f12c92c84251195ffa10e3116",
          "dweb:/ipfs/QmXUCKju3KdnnkkYjPdwD2fsqRVrnh1Ag2NdTbpxxWudTK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0x0654e956830a422d35060a2e7b66d4f97951921a3dc119eb89bae7202e4fb078",
        "urls": [
          "bzz-raw://eb22e4d811b49dd14f81fec6d4a1c37cbdd4e7c3ac9d2b5ccb966ab7a112eb9b",
          "dweb:/ipfs/QmXSxM6y6q5Gw6yR28skW3L22MFEazLu8enQG2DSzBoTNR"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x2291ee8f379552b86f34d98acb248d50442c7d4ab94aed03f1c8ddb6aea6852d",
        "urls": [
          "bzz-raw://1ca6ca6fe35692428b507008b24e4ec4ba0cabaf58110fd0b4456a42e0166bdc",
          "dweb:/ipfs/QmUcSeXfYMyusrWxEdPRMeWFYhf9qD6YJaZXCVo29F4eus"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xb0da85ce6999940eba6190a26c15b9bc7aede57123891287e1b30f80333a9cf5",
        "urls": [
          "bzz-raw://d287fd41de40ef992588f7a9531e66d1e9f8e4f3f194b9e721ac576d4613964a",
          "dweb:/ipfs/QmbFYYjoc8WGLKVfDe4rscYPwdGq48incbwRQNoLtcMMjn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x216818221765c43713791708d7dc83fcd5ada81766c9d4ce54551528c191a59f",
        "urls": [
          "bzz-raw://3f03d0ef065ce600e5922f3e9c92f0f54ff7c12895a250fa97d83e9ee38e7e2b",
          "dweb:/ipfs/QmX59m9mNRNEhjhEZnxbDirniesi26pnDaNzF5hPB4A3E8"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xa09cbc7a8f8fda353bc631210b253b2c31ac1dde43999bb68c0e19781b47380d",
        "urls": [
          "bzz-raw://615b73c64da2013535ee1ab2a35c0d8ca2d1be602f06b393db4498b4c9f3bbca",
          "dweb:/ipfs/QmUNY9wdvCyw5u1CxM9VMJiyYVW9hmL6s2jXSpMb2kkC2L"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xfd793ebfb854f707ccf9dfec320b3b75d0d73ba54af0dfae727862fe93bc1cfd",
        "urls": [
          "bzz-raw://9a0a39917aabf39d981b17d1a06c9b82377917c3a0eedce8e9dc00df5c096bf9",
          "dweb:/ipfs/Qme7GpiHd32FFKYNbY4vdhiiciWPV1z1Uwtj1KDQAusxki"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x225cc1ec33efd35c90e78aec0792ed9751cd6217e646271172421e96e2e2cc0f",
        "urls": [
          "bzz-raw://6c6adbd216e40ca2387835b8618c82e7153cb826023d38943bbb0c2e992644aa",
          "dweb:/ipfs/QmZeejwEkm7iH9NHih7dPbuNqivuFn27EkgJesgByzS9wD"
        ],
        "license": "MIT"
      },
      "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol": {
        "keccak256": "0x88f5ae75ddfc7166cc7f0f105013d6d95921275753a0dcc90c900ae8d0828811",
        "urls": [
          "bzz-raw://5771978f98eff31a38677e055402c6dc0996525af040ebc6afc696355f9e7961",
          "dweb:/ipfs/QmVmFVnhY8S7yPAaUBmHF4VVjcHvy5eVu4JhCs9xo3tBUP"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/ConvexBoosterImprovedInitializer.sol": {
        "keccak256": "0xf6a01dc9223567919a1a0d7d4656643015dd699aa917e1dfc406f1f39d907db9",
        "urls": [
          "bzz-raw://b85ce0b06c612188d57ba076c0b0f436e3f9a5390a74611329ef5d4a1a08283a",
          "dweb:/ipfs/Qma8Fnof7rYmzuBVQywyKvDTzG8eUx4LQnc2bJUnJXoGah"
        ],
        "license": "MIT"
      },
      "src/ConvexVaultTransferrable.sol": {
        "keccak256": "0x7bae856f0d59006589d71b450a37422a7ee93b4f15601f200e9db3842317d4e2",
        "urls": [
          "bzz-raw://5c01ccf852c40d60dbd33b59f52286614d61f3b583c91bd86419bf035daad4f7",
          "dweb:/ipfs/QmTnX3WZihs5eEvsWtqPch8cU2V4bKhDA1zmAs8FGKjrVg"
        ],
        "license": null
      },
      "src/FraxFamilialPitchGauge.sol": {
        "keccak256": "0x158909430f5c0b945e7e7d4ac0d61591f5a70dfcf5678ee02e1046a26249f9d2",
        "urls": [
          "bzz-raw://892d7924e16b4886e44e5f5eeb0e0fe9742822f17fa0d17bb153f7c1fa78b51b",
          "dweb:/ipfs/QmdfCdPbbs61qaUgi5nKxDkEhGZB1MxbQnkrB2JBRpCm9Q"
        ],
        "license": null
      },
      "src/TransferrableConvexFrxEthFarm.sol": {
        "keccak256": "0xf2a1de87a668579ac9281201a56f88e27f358198c56549b16699b5ae9935ee26",
        "urls": [
          "bzz-raw://0dd7b35c0f29fffc2c83fef495027800007edca12135d1976e7a0d39e14a237a",
          "dweb:/ipfs/QmVRc6sMQ5hYaBuhQya9BbNaDMMo9UEshBaZURogJe7rYG"
        ],
        "license": "GPL-2.0-or-later"
      },
      "src/interfaces/IFraxFarm.sol": {
        "keccak256": "0x4bde85cdb1c6ac00efb7384ef936f9d61da5e730a602797393cad8a56e612d50",
        "urls": [
          "bzz-raw://1701c51721202007ec7cb2821fa1e9afc504b9fbd98d6f36c21ced8dda1eb4f0",
          "dweb:/ipfs/QmbGPoTGZzsV9Yr2ut8fYSe7FgQyLiHr4iSNC1h35W7756"
        ],
        "license": "MIT"
      },
      "src/interfaces/ILockReceiver.sol": {
        "keccak256": "0x88b3ba778f888db7da00f24c15b95cf1e26a0d5d29452fffe2d19113aa8e03cc",
        "urls": [
          "bzz-raw://73b7a6cabf04885c43dddce29efb1f22d31f79f57e7b3b5e9f9ed9f391ff6783",
          "dweb:/ipfs/Qmds1F8on5gW6b5ceEieNSAa8WkHaVBqq5PkUpudDWvMT8"
        ],
        "license": "MIT"
      },
      "test/FraxFarmERC20TransfersTest.t.sol": {
        "keccak256": "0x0a951b057550e468581536749f4a2324068dd8a19e12e7215f6fa0774bf2161a",
        "urls": [
          "bzz-raw://baa3f37d5c16dd92afd67c24a7d796abf5995e54df3f5e2ef6a5837f8e5b1762",
          "dweb:/ipfs/QmUstjXLvjbHHmqt9drpJ1u6nfkX3bqnoiprPsjo3ykMwB"
        ],
        "license": "UNLICENSED"
      },
      "test/mocks/FraxFXSRewardDistributor.sol": {
        "keccak256": "0x7eb985b36bd53ecf5c2b8c837b192b325cc9509db0a047b161ffb52c0cc8c373",
        "urls": [
          "bzz-raw://94d526d33fd0913b64d44d1dd38b786c9011f2b53ada269e7999696724b23fcc",
          "dweb:/ipfs/QmaB7FevCs2rHLSq9gembZnt2rQjNDaT2DboG1gckFhq7C"
        ],
        "license": null
      },
      "test/mocks/MockERC20.sol": {
        "keccak256": "0xef83fbd0fe6be3195adfaf81a9d3451d7330e29048006f5bca2fcd4150a15789",
        "urls": [
          "bzz-raw://8af67d3c617293d7e927503173b8291a403da0f08656682a348d5b9abc8764f0",
          "dweb:/ipfs/QmW3cTu5yGeXf4H7mw4q1vQCtnvJXzXYztSBvZbdVZjf1V"
        ],
        "license": "MIT"
      },
      "test/mocks/MockVaultOwner.sol": {
        "keccak256": "0x512ba212dedc7b8d3dc619a72006f3f5c9113eaa9460ce843367b99a96fcf420",
        "urls": [
          "bzz-raw://c5d41c862b02f539ba83451cb959edd294d57f9bf51ccd5662649b8685383ad7",
          "dweb:/ipfs/QmQsQh8VSzWdmsZ8WG382D1JfdLUgTHGA3zPYZsAMmq6Ht"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "test/FraxFarmERC20TransfersTest.t.sol",
    "id": 41282,
    "exportedSymbols": {
      "Address": [
        25618
      ],
      "Booster": [
        27314
      ],
      "CommonBase": [
        1841
      ],
      "DSTest": [
        1786
      ],
      "ERC20": [
        44753
      ],
      "FraxFamilialPitchGauge": [
        32819
      ],
      "FraxFarmERC20TransfersTest": [
        41281
      ],
      "FraxGaugeFXSRewardsDistributor": [
        44365
      ],
      "FraxUnifiedFarm_ERC20_V2": [
        39315
      ],
      "IDeposits": [
        39923
      ],
      "IERC20": [
        25728
      ],
      "IERC20Permit": [
        25652
      ],
      "IFraxFarmERC20": [
        39747
      ],
      "IFraxFarmTransfers": [
        39674
      ],
      "IFraxGaugeController": [
        25288
      ],
      "IPoolRegistry": [
        26150
      ],
      "IProxyOwner": [
        26010
      ],
      "IProxyVault": [
        26067
      ],
      "IStaker": [
        26222
      ],
      "ITransferChecker": [
        26077
      ],
      "IVaultType": [
        26083
      ],
      "MockERC20": [
        44797
      ],
      "MockLp": [
        44924
      ],
      "SafeERC20": [
        26004
      ],
      "StdAssertions": [
        2668
      ],
      "StdChains": [
        2991
      ],
      "StdCheats": [
        4925
      ],
      "StdStorage": [
        5830
      ],
      "StdUtils": [
        7693
      ],
      "Test": [
        7727
      ],
      "TestBase": [
        7714
      ],
      "Vault": [
        30535
      ],
      "VaultOwner": [
        44965
      ],
      "Vm": [
        8884
      ],
      "VmSafe": [
        8559
      ],
      "console": [
        16948
      ],
      "console2": [
        25013
      ],
      "stdError": [
        4991
      ],
      "stdJson": [
        5657
      ],
      "stdMath": [
        5799
      ],
      "stdStorage": [
        7264
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:34940:22",
    "nodes": [
      {
        "id": 39858,
        "nodeType": "PragmaDirective",
        "src": "39:24:22",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 39859,
        "nodeType": "ImportDirective",
        "src": "65:28:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 7728,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39860,
        "nodeType": "ImportDirective",
        "src": "94:26:22",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 8885,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39862,
        "nodeType": "ImportDirective",
        "src": "205:124:22",
        "nodes": [],
        "absolutePath": "src/TransferrableConvexFrxEthFarm.sol",
        "file": "../src/TransferrableConvexFrxEthFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 39316,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39861,
              "name": "FraxUnifiedFarm_ERC20_Convex_frxETH_V2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39315,
              "src": "213:38:22",
              "typeDescriptions": {}
            },
            "local": "FraxUnifiedFarm_ERC20_V2",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39864,
        "nodeType": "ImportDirective",
        "src": "330:80:22",
        "nodes": [],
        "absolutePath": "src/ConvexVaultTransferrable.sol",
        "file": "../src/ConvexVaultTransferrable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 30536,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39863,
              "name": "StakingProxyConvex",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30535,
              "src": "338:18:22",
              "typeDescriptions": {}
            },
            "local": "Vault",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39867,
        "nodeType": "ImportDirective",
        "src": "469:77:22",
        "nodes": [],
        "absolutePath": "src/interfaces/IFraxFarm.sol",
        "file": "@interfaces/IFraxFarm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 39828,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39865,
              "name": "IFraxFarmTransfers",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39674,
              "src": "477:18:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 39866,
              "name": "IFraxFarmERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 39747,
              "src": "497:14:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39868,
        "nodeType": "ImportDirective",
        "src": "547:61:22",
        "nodes": [],
        "absolutePath": "lib/frax_testing/src/gauges/Curve/IFraxGaugeController.sol",
        "file": "@frax_testing/gauges/Curve/IFraxGaugeController.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 25289,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39870,
        "nodeType": "ImportDirective",
        "src": "609:71:22",
        "nodes": [],
        "absolutePath": "test/mocks/MockVaultOwner.sol",
        "file": "@mocks/MockVaultOwner.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 44966,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39869,
              "name": "MockVaultOwner",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44965,
              "src": "617:14:22",
              "typeDescriptions": {}
            },
            "local": "VaultOwner",
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39871,
        "nodeType": "ImportDirective",
        "src": "681:53:22",
        "nodes": [],
        "absolutePath": "src/ConvexBoosterImprovedInitializer.sol",
        "file": "../src/ConvexBoosterImprovedInitializer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 27315,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39873,
        "nodeType": "ImportDirective",
        "src": "855:71:22",
        "nodes": [],
        "absolutePath": "src/FraxFamilialPitchGauge.sol",
        "file": "src/FraxFamilialPitchGauge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 32820,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39872,
              "name": "FraxFamilialPitchGauge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32819,
              "src": "863:22:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39875,
        "nodeType": "ImportDirective",
        "src": "927:83:22",
        "nodes": [],
        "absolutePath": "test/mocks/FraxFXSRewardDistributor.sol",
        "file": "@mocks/FraxFXSRewardDistributor.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 44366,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39874,
              "name": "FraxGaugeFXSRewardsDistributor",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44365,
              "src": "935:30:22",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39876,
        "nodeType": "ImportDirective",
        "src": "1011:31:22",
        "nodes": [],
        "absolutePath": "test/mocks/MockERC20.sol",
        "file": "./mocks/MockERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 41282,
        "sourceUnit": 44925,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 39923,
        "nodeType": "ContractDefinition",
        "src": "1044:458:22",
        "nodes": [
          {
            "id": 39887,
            "nodeType": "FunctionDefinition",
            "src": "1070:104:22",
            "nodes": [],
            "functionSelector": "0b4c7e4d",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "add_liquidity",
            "nameLocation": "1079:13:22",
            "parameters": {
              "id": 39883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39880,
                  "mutability": "mutable",
                  "name": "_amounts",
                  "nameLocation": "1111:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39887,
                  "src": "1093:26:22",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                    "typeString": "uint256[2]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 39877,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1093:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 39879,
                    "length": {
                      "hexValue": "32",
                      "id": 39878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1101:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2_by_1",
                        "typeString": "int_const 2"
                      },
                      "value": "2"
                    },
                    "nodeType": "ArrayTypeName",
                    "src": "1093:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$2_storage_ptr",
                      "typeString": "uint256[2]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39882,
                  "mutability": "mutable",
                  "name": "_min_mint_amount",
                  "nameLocation": "1129:16:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39887,
                  "src": "1121:24:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39881,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1121:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1092:54:22"
            },
            "returnParameters": {
              "id": 39886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39885,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39887,
                  "src": "1165:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39884,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1165:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1164:9:22"
            },
            "scope": 39923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39894,
            "nodeType": "FunctionDefinition",
            "src": "1179:68:22",
            "nodes": [],
            "functionSelector": "70a08231",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "balanceOf",
            "nameLocation": "1188:9:22",
            "parameters": {
              "id": 39890,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39889,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1206:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39894,
                  "src": "1198:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39888,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1198:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1197:17:22"
            },
            "returnParameters": {
              "id": 39893,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39892,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39894,
                  "src": "1238:7:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39891,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1238:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1237:9:22"
            },
            "scope": 39923,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39903,
            "nodeType": "FunctionDefinition",
            "src": "1252:74:22",
            "nodes": [],
            "functionSelector": "095ea7b3",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "approve",
            "nameLocation": "1261:7:22",
            "parameters": {
              "id": 39899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39896,
                  "mutability": "mutable",
                  "name": "spender",
                  "nameLocation": "1277:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39903,
                  "src": "1269:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1269:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39898,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1294:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39903,
                  "src": "1286:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39897,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1268:33:22"
            },
            "returnParameters": {
              "id": 39902,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39901,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 39903,
                  "src": "1320:4:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39900,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1320:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1319:6:22"
            },
            "scope": 39923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39908,
            "nodeType": "FunctionDefinition",
            "src": "1331:43:22",
            "nodes": [],
            "functionSelector": "b6b55f25",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1340:7:22",
            "parameters": {
              "id": 39906,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39905,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1356:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39908,
                  "src": "1348:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39904,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1348:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1347:17:22"
            },
            "returnParameters": {
              "id": 39907,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1373:0:22"
            },
            "scope": 39923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39915,
            "nodeType": "FunctionDefinition",
            "src": "1379:56:22",
            "nodes": [],
            "functionSelector": "6e553f65",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "1388:7:22",
            "parameters": {
              "id": 39913,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39910,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "1404:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39915,
                  "src": "1396:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39909,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1396:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39912,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "1421:3:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39915,
                  "src": "1413:11:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1413:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1395:30:22"
            },
            "returnParameters": {
              "id": 39914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:22"
            },
            "scope": 39923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39922,
            "nodeType": "FunctionDefinition",
            "src": "1440:60:22",
            "nodes": [],
            "functionSelector": "60759fce",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "depositAll",
            "nameLocation": "1449:10:22",
            "parameters": {
              "id": 39920,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39917,
                  "mutability": "mutable",
                  "name": "poolId",
                  "nameLocation": "1468:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39922,
                  "src": "1460:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39919,
                  "mutability": "mutable",
                  "name": "andStake",
                  "nameLocation": "1481:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 39922,
                  "src": "1476:13:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 39918,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1476:4:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1459:31:22"
            },
            "returnParameters": {
              "id": 39921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1499:0:22"
            },
            "scope": 39923,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IDeposits",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          39923
        ],
        "name": "IDeposits",
        "nameLocation": "1054:9:22",
        "scope": 41282,
        "usedErrors": []
      },
      {
        "id": 41281,
        "nodeType": "ContractDefinition",
        "src": "1504:33475:22",
        "nodes": [
          {
            "id": 39928,
            "nodeType": "VariableDeclaration",
            "src": "1554:42:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "8c1eda2b",
            "mutability": "mutable",
            "name": "frxEthFarm",
            "nameLocation": "1586:10:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
            },
            "typeName": {
              "id": 39927,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39926,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nameLocations": [
                  "1554:24:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39315,
                "src": "1554:24:22"
              },
              "referencedDeclaration": 39315,
              "src": "1554:24:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39931,
            "nodeType": "VariableDeclaration",
            "src": "1602:21:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "8e8f4a9d",
            "mutability": "mutable",
            "name": "cvxVault",
            "nameLocation": "1615:8:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 39930,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39929,
                "name": "Vault",
                "nameLocations": [
                  "1602:5:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30535,
                "src": "1602:5:22"
              },
              "referencedDeclaration": 30535,
              "src": "1602:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39934,
            "nodeType": "VariableDeclaration",
            "src": "1629:44:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "e40b5339",
            "mutability": "mutable",
            "name": "frxFamilyGauge",
            "nameLocation": "1659:14:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
              "typeString": "contract FraxFamilialPitchGauge"
            },
            "typeName": {
              "id": 39933,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39932,
                "name": "FraxFamilialPitchGauge",
                "nameLocations": [
                  "1629:22:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32819,
                "src": "1629:22:22"
              },
              "referencedDeclaration": 32819,
              "src": "1629:22:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                "typeString": "contract FraxFamilialPitchGauge"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39937,
            "nodeType": "VariableDeclaration",
            "src": "1718:28:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "f7c618c1",
            "mutability": "mutable",
            "name": "rewardToken",
            "nameLocation": "1735:11:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockERC20_$44797",
              "typeString": "contract MockERC20"
            },
            "typeName": {
              "id": 39936,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39935,
                "name": "MockERC20",
                "nameLocations": [
                  "1718:9:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44797,
                "src": "1718:9:22"
              },
              "referencedDeclaration": 44797,
              "src": "1718:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockERC20_$44797",
                "typeString": "contract MockERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39940,
            "nodeType": "VariableDeclaration",
            "src": "1799:28:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "1f52692b",
            "mutability": "mutable",
            "name": "vaultOwner",
            "nameLocation": "1817:10:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
              "typeString": "contract MockVaultOwner"
            },
            "typeName": {
              "id": 39939,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39938,
                "name": "VaultOwner",
                "nameLocations": [
                  "1799:10:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44965,
                "src": "1799:10:22"
              },
              "referencedDeclaration": 44965,
              "src": "1799:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                "typeString": "contract MockVaultOwner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39942,
            "nodeType": "VariableDeclaration",
            "src": "1834:20:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "fb47e3a2",
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "1849:5:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39941,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1834:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39944,
            "nodeType": "VariableDeclaration",
            "src": "1860:18:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "c09cec77",
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "1875:3:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39943,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1860:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39947,
            "nodeType": "VariableDeclaration",
            "src": "1889:66:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "9bb2eb2b",
            "mutability": "mutable",
            "name": "frxEth",
            "nameLocation": "1904:6:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39945,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1889:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835453834323233343532333846333432373538383830343930323138323145384530384341613166",
              "id": 39946,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1913:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5E8422345238F34275888049021821E8E08CAa1f"
            },
            "visibility": "public"
          },
          {
            "id": 39950,
            "nodeType": "VariableDeclaration",
            "src": "1961:69:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "3fb847b3",
            "mutability": "mutable",
            "name": "frxETHCRV",
            "nameLocation": "1976:9:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39948,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1961:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307866343332313139333543373831443563613161343164323034314633393742384137333636433741",
              "id": 39949,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1988:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0xf43211935C781D5ca1a41d2041F397B8A7366C7A"
            },
            "visibility": "public"
          },
          {
            "id": 39956,
            "nodeType": "VariableDeclaration",
            "src": "2063:84:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "663eeb3d",
            "mutability": "mutable",
            "name": "cvxfrxEthFrxEth",
            "nameLocation": "2078:15:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39951,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2063:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843303765353430446246656343463734333145413234373845623238413033393138633143333045",
                  "id": 39954,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2104:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC07e540DbFecCF7431EA2478Eb28A03918c1C30E"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39953,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2096:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 39952,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2096:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 39955,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2096:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39959,
            "nodeType": "VariableDeclaration",
            "src": "2153:74:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "31f4f95c",
            "mutability": "mutable",
            "name": "cvxStkFrxEthLp",
            "nameLocation": "2168:14:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39957,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2153:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307834363539643566463633413145314544443644354444394343333135653036336339353934376430",
              "id": 39958,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2185:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x4659d5fF63A1E1EDD6D5DD9CC315e063c95947d0"
            },
            "visibility": "public"
          },
          {
            "id": 39965,
            "nodeType": "VariableDeclaration",
            "src": "2280:110:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "6fa89364",
            "mutability": "mutable",
            "name": "frxFarm",
            "nameLocation": "2312:7:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
            },
            "typeName": {
              "id": 39961,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39960,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nameLocations": [
                  "2280:24:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39315,
                "src": "2280:24:22"
              },
              "referencedDeclaration": 39315,
              "src": "2280:24:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861353337643634383831623834666166666239416534336339353145456246333638623731636441",
                  "id": 39963,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2347:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa537d64881b84faffb9Ae43c951EEbF368b71cdA"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39962,
                "name": "FraxUnifiedFarm_ERC20_V2",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 39315,
                "src": "2322:24:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315_$",
                  "typeString": "type(contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2)"
                }
              },
              "id": 39964,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2322:68:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39971,
            "nodeType": "VariableDeclaration",
            "src": "2414:82:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "7495ce11",
            "mutability": "mutable",
            "name": "curveLpMinter",
            "nameLocation": "2429:13:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39966,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2414:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861314638413638303763343032453441313565663445426133363532384133464544323445353737",
                  "id": 39969,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2453:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xa1F8A6807c402E4A15ef4EBa36528A3FED24E577"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39968,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2445:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 39967,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2445:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 39970,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2445:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39977,
            "nodeType": "VariableDeclaration",
            "src": "2502:88:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "66843cba",
            "mutability": "mutable",
            "name": "vaultRewardsAddress",
            "nameLocation": "2517:19:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39972,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2502:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343635423832313132373835303561653943366235626130384543443961663935314136383936",
                  "id": 39975,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2547:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3465B8211278505ae9C6b5ba08ECD9af951A6896"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39974,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2539:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 39973,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2539:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 39976,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2539:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39983,
            "nodeType": "VariableDeclaration",
            "src": "2596:81:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "0d199eaa",
            "mutability": "mutable",
            "name": "frxEthMinter",
            "nameLocation": "2611:12:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39978,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2596:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307862414641343445464537393031453034453339446164313331363744303839433535396331313338",
                  "id": 39981,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2634:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xbAFA44EFE7901E04E39Dad13167D089C559c1138"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39980,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2626:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 39979,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2626:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 39982,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2626:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39989,
            "nodeType": "VariableDeclaration",
            "src": "2683:83:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "1895c4a7",
            "mutability": "mutable",
            "name": "convexOperator",
            "nameLocation": "2698:14:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39984,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2683:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846343033433133353831323430384246624538373133623541323361303462334434384141453331",
                  "id": 39987,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2723:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF403C135812408BFbE8713b5A23a04b3D48AAE31"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39986,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2715:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 39985,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2715:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 39988,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2715:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 39995,
            "nodeType": "VariableDeclaration",
            "src": "2772:129:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "0ac0304f",
            "mutability": "mutable",
            "name": "fxsDistributor",
            "nameLocation": "2810:14:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_FraxGaugeFXSRewardsDistributor_$44365",
              "typeString": "contract FraxGaugeFXSRewardsDistributor"
            },
            "typeName": {
              "id": 39991,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39990,
                "name": "FraxGaugeFXSRewardsDistributor",
                "nameLocations": [
                  "2772:30:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44365,
                "src": "2772:30:22"
              },
              "referencedDeclaration": 44365,
              "src": "2772:30:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxGaugeFXSRewardsDistributor_$44365",
                "typeString": "contract FraxGaugeFXSRewardsDistributor"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307832373864433734386564413164386546456631614446423531383534323631326234394663643334",
                  "id": 39993,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2858:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x278dC748edA1d8eFEf1aDFB518542612b49Fcd34"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39992,
                "name": "FraxGaugeFXSRewardsDistributor",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44365,
                "src": "2827:30:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_FraxGaugeFXSRewardsDistributor_$44365_$",
                  "typeString": "type(contract FraxGaugeFXSRewardsDistributor)"
                }
              },
              "id": 39994,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2827:74:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FraxGaugeFXSRewardsDistributor_$44365",
                "typeString": "contract FraxGaugeFXSRewardsDistributor"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40001,
            "nodeType": "VariableDeclaration",
            "src": "2930:84:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "99eecb3b",
            "mutability": "mutable",
            "name": "gaugeController",
            "nameLocation": "2945:15:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 39996,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2930:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833363639433432316237373334304232393739643141303061373932434332656530466345373337",
                  "id": 39999,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2971:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3669C421b77340B2979d1A00a792CC2ee0FcE737"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 39998,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "2963:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 39997,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2963:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40000,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2963:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40007,
            "nodeType": "VariableDeclaration",
            "src": "3020:82:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "0f4ef8a6",
            "mutability": "mutable",
            "name": "rewardManager",
            "nameLocation": "3035:13:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40002,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3020:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307842313734384337393730396634426132446438323833344238633832443461353035303033663237",
                  "id": 40005,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3059:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40004,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3051:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40003,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3051:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40006,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3051:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40013,
            "nodeType": "VariableDeclaration",
            "src": "3109:78:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "903ee26c",
            "mutability": "mutable",
            "name": "fraxAdmin",
            "nameLocation": "3124:9:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40008,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3109:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307842313734384337393730396634426132446438323833344238633832443461353035303033663237",
                  "id": 40011,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3144:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xB1748C79709f4Ba2Dd82834B8c82D4a505003f27"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40010,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3136:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40009,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3136:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40012,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3136:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40019,
            "nodeType": "VariableDeclaration",
            "src": "3233:82:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "2cdacb50",
            "mutability": "mutable",
            "name": "convexBooster",
            "nameLocation": "3248:13:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Booster_$27314",
              "typeString": "contract Booster"
            },
            "typeName": {
              "id": 40015,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40014,
                "name": "Booster",
                "nameLocations": [
                  "3233:7:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 27314,
                "src": "3233:7:22"
              },
              "referencedDeclaration": 27314,
              "src": "3233:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Booster_$27314",
                "typeString": "contract Booster"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835363966354238343242353030366543313742653032423862393435313042413865373946624361",
                  "id": 40017,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3272:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x569f5B842B5006eC17Be02B8b94510BA8e79FbCa"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40016,
                "name": "Booster",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 27314,
                "src": "3264:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_Booster_$27314_$",
                  "typeString": "type(contract Booster)"
                }
              },
              "id": 40018,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3264:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Booster_$27314",
                "typeString": "contract Booster"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40025,
            "nodeType": "VariableDeclaration",
            "src": "3339:87:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "55c28752",
            "mutability": "mutable",
            "name": "convexPoolRegistry",
            "nameLocation": "3354:18:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40020,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3339:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834316135383831633137313835333833653139446636464134454331353861364634383531413639",
                  "id": 40023,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3383:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x41a5881c17185383e19Df6FA4EC158a6F4851A69"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40022,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3375:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40021,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3375:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40024,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3375:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40031,
            "nodeType": "VariableDeclaration",
            "src": "3491:89:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "2ebe9869",
            "mutability": "mutable",
            "name": "convexFraxVoterProxy",
            "nameLocation": "3506:20:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40026,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3491:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307835394346434433383437343665633330333532393944393037383242653036356534363638303042",
                  "id": 40029,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3537:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x59CFCD384746ec3035299D90782Be065e466800B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40028,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3529:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40027,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3529:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40030,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3529:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40037,
            "nodeType": "VariableDeclaration",
            "src": "3586:86:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "d2f4b0ca",
            "mutability": "mutable",
            "name": "convexFeeRegistry",
            "nameLocation": "3601:17:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40032,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3586:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307843396143423833414461363834313361364161353730303742433732304545324532623343343644",
                  "id": 40035,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3629:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xC9aCB83ADa68413a6Aa57007BC720EE2E2b3C46D"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40034,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "3621:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40033,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "3621:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40036,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3621:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40044,
            "nodeType": "VariableDeclaration",
            "src": "3864:76:22",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 40038,
              "nodeType": "StructuredDocumentation",
              "src": "3830:29:22",
              "text": "@notice The sending vault"
            },
            "functionSelector": "c2919040",
            "mutability": "mutable",
            "name": "senderVault",
            "nameLocation": "3877:11:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 40040,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40039,
                "name": "Vault",
                "nameLocations": [
                  "3864:5:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30535,
                "src": "3864:5:22"
              },
              "referencedDeclaration": 30535,
              "src": "3864:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307836663832634434346538413735374330426141376538343146346245373530364235323963653431",
                  "id": 40042,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "3897:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x6f82cD44e8A757C0BaA7e841F4bE7506B529ce41"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40041,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 30535,
                "src": "3891:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$30535_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 40043,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "3891:49:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40051,
            "nodeType": "VariableDeclaration",
            "src": "4006:86:22",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 40045,
              "nodeType": "StructuredDocumentation",
              "src": "3946:55:22",
              "text": "@notice The sending vault owner - IS NOT A CONTRACT"
            },
            "functionSelector": "d558358d",
            "mutability": "mutable",
            "name": "senderOwner",
            "nameLocation": "4024:11:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
              "typeString": "contract MockVaultOwner"
            },
            "typeName": {
              "id": 40047,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40046,
                "name": "VaultOwner",
                "nameLocations": [
                  "4006:10:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44965,
                "src": "4006:10:22"
              },
              "referencedDeclaration": 44965,
              "src": "4006:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                "typeString": "contract MockVaultOwner"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837313263414261453536394235343232324266423845303241383341443938636336443246623330",
                  "id": 40049,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4049:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x712cABaE569B54222BfB8E02A83AD98cc6D2Fb30"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40048,
                "name": "VaultOwner",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44965,
                "src": "4038:10:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_MockVaultOwner_$44965_$",
                  "typeString": "type(contract MockVaultOwner)"
                }
              },
              "id": 40050,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4038:54:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                "typeString": "contract MockVaultOwner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40057,
            "nodeType": "VariableDeclaration",
            "src": "4098:78:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "a8848cda",
            "mutability": "mutable",
            "name": "receiverVault",
            "nameLocation": "4111:13:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 40053,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40052,
                "name": "Vault",
                "nameLocations": [
                  "4098:5:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30535,
                "src": "4098:5:22"
              },
              "referencedDeclaration": 30535,
              "src": "4098:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307837653339466163614335363763384234386230456138384537613530323133393145623834384430",
                  "id": 40055,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4133:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x7e39FacaC567c8B48b0Ea88E7a5021391Eb848D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40054,
                "name": "Vault",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 30535,
                "src": "4127:5:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$30535_$",
                  "typeString": "type(contract StakingProxyConvex)"
                }
              },
              "id": 40056,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4127:49:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40064,
            "nodeType": "VariableDeclaration",
            "src": "4240:88:22",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 40058,
              "nodeType": "StructuredDocumentation",
              "src": "4182:53:22",
              "text": "@notice The receiving vault owner - IS A CONTRACT"
            },
            "functionSelector": "ddf42c0d",
            "mutability": "mutable",
            "name": "receiverOwner",
            "nameLocation": "4258:13:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
              "typeString": "contract MockVaultOwner"
            },
            "typeName": {
              "id": 40060,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40059,
                "name": "VaultOwner",
                "nameLocations": [
                  "4240:10:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 44965,
                "src": "4240:10:22"
              },
              "referencedDeclaration": 44965,
              "src": "4240:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                "typeString": "contract MockVaultOwner"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307861663046446433396535443932343939423065443946363836393344413939433065633165393265",
                  "id": 40062,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4285:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xaf0FDd39e5D92499B0eD9F68693DA99C0ec1e92e"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40061,
                "name": "VaultOwner",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 44965,
                "src": "4274:10:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_MockVaultOwner_$44965_$",
                  "typeString": "type(contract MockVaultOwner)"
                }
              },
              "id": 40063,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4274:54:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                "typeString": "contract MockVaultOwner"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40067,
            "nodeType": "VariableDeclaration",
            "src": "4334:30:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "6f539c2e",
            "mutability": "mutable",
            "name": "nonCompliantVault",
            "nameLocation": "4347:17:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 40066,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40065,
                "name": "Vault",
                "nameLocations": [
                  "4334:5:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30535,
                "src": "4334:5:22"
              },
              "referencedDeclaration": 30535,
              "src": "4334:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40070,
            "nodeType": "VariableDeclaration",
            "src": "4370:27:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "4676077e",
            "mutability": "mutable",
            "name": "compliantVault",
            "nameLocation": "4383:14:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
              "typeString": "contract StakingProxyConvex"
            },
            "typeName": {
              "id": 40069,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40068,
                "name": "Vault",
                "nameLocations": [
                  "4370:5:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30535,
                "src": "4370:5:22"
              },
              "referencedDeclaration": 30535,
              "src": "4370:5:22",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                "typeString": "contract StakingProxyConvex"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40076,
            "nodeType": "VariableDeclaration",
            "src": "4403:78:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "ec1e31a0",
            "mutability": "mutable",
            "name": "vaultImpl",
            "nameLocation": "4418:9:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40071,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4403:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307830336662383534334539333336323462343561626464333139383735343863304439383932463037",
                  "id": 40074,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4438:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x03fb8543E933624b45abdd31987548c0D9892F07"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40073,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4430:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40072,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4430:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40075,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4430:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40079,
            "nodeType": "VariableDeclaration",
            "src": "4488:69:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "a45b686a",
            "mutability": "mutable",
            "name": "fraxToken",
            "nameLocation": "4503:9:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40077,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4488:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307838353364393535614345663832324462303538656238353035393131454437374631373562393965",
              "id": 40078,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4515:42:22",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x853d955aCEf822Db058eb8505911ED77F175b99e"
            },
            "visibility": "public"
          },
          {
            "id": 40085,
            "nodeType": "VariableDeclaration",
            "src": "4571:77:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "09dacc04",
            "mutability": "mutable",
            "name": "fxsToken",
            "nameLocation": "4586:8:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40080,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4571:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307833343332423641363044323343613064464361373736314237616235363435394439433936344430",
                  "id": 40083,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4605:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x3432B6A60D23Ca0dFCa7761B7ab56459D9C964D0"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40082,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4597:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40081,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4597:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40084,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4597:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40091,
            "nodeType": "VariableDeclaration",
            "src": "4661:77:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "94112dba",
            "mutability": "mutable",
            "name": "cvxToken",
            "nameLocation": "4676:8:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40086,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4661:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307834653346424435364344353663336537326331343033653130336234354462396461354239443242",
                  "id": 40089,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "4695:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0x4e3FBD56CD56c3e72c1403e103b45Db9da5B9D2B"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40088,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "4687:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40087,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "4687:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40090,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "4687:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40094,
            "nodeType": "VariableDeclaration",
            "src": "4764:31:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardTokens",
            "nameLocation": "4782:13:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40092,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4764:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40093,
              "nodeType": "ArrayTypeName",
              "src": "4764:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40097,
            "nodeType": "VariableDeclaration",
            "src": "4801:33:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardManagers",
            "nameLocation": "4819:15:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40095,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4801:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40096,
              "nodeType": "ArrayTypeName",
              "src": "4801:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40100,
            "nodeType": "VariableDeclaration",
            "src": "4840:30:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardRates",
            "nameLocation": "4858:12:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 40098,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "4840:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 40099,
              "nodeType": "ArrayTypeName",
              "src": "4840:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40103,
            "nodeType": "VariableDeclaration",
            "src": "4876:35:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_gaugeControllers",
            "nameLocation": "4894:17:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40101,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4876:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40102,
              "nodeType": "ArrayTypeName",
              "src": "4876:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40106,
            "nodeType": "VariableDeclaration",
            "src": "4917:37:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_rewardDistributors",
            "nameLocation": "4935:19:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40104,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4917:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40105,
              "nodeType": "ArrayTypeName",
              "src": "4917:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40109,
            "nodeType": "VariableDeclaration",
            "src": "4960:30:22",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_childGauges",
            "nameLocation": "4978:12:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 40107,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "4960:7:22",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 40108,
              "nodeType": "ArrayTypeName",
              "src": "4960:9:22",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 40111,
            "nodeType": "VariableDeclaration",
            "src": "4997:39:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "76729f26",
            "mutability": "mutable",
            "name": "nonTransferrableGaugeTVL",
            "nameLocation": "5012:24:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40110,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4997:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40113,
            "nodeType": "VariableDeclaration",
            "src": "5043:36:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "8194fb97",
            "mutability": "mutable",
            "name": "transferrableGaugeTVL",
            "nameLocation": "5058:21:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40112,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5043:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40119,
            "nodeType": "VariableDeclaration",
            "src": "5086:77:22",
            "nodes": [],
            "constant": false,
            "functionSelector": "a841a0a8",
            "mutability": "mutable",
            "name": "fxsWhale",
            "nameLocation": "5101:8:22",
            "scope": 41281,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 40114,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5086:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "307846393737383134653930644134346246413033623632393541303631366138393734343161636543",
                  "id": 40117,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "5120:42:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "value": "0xF977814e90dA44bFA03b6295A0616a897441aceC"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 40116,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "5112:7:22",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 40115,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "5112:7:22",
                  "typeDescriptions": {}
                }
              },
              "id": 40118,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "nameLocations": [],
              "names": [],
              "nodeType": "FunctionCall",
              "src": "5112:51:22",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 40582,
            "nodeType": "FunctionDefinition",
            "src": "5170:5579:22",
            "nodes": [],
            "body": {
              "id": 40581,
              "nodeType": "Block",
              "src": "5194:5555:22",
              "nodes": [],
              "statements": [
                {
                  "documentation": "Deploy the fake reward token",
                  "expression": {
                    "id": 40148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40122,
                      "name": "frxFamilyGauge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39934,
                      "src": "5684:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                        "typeString": "contract FraxFamilialPitchGauge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "6672784554484554482046616d696c79204761756765",
                          "id": 40126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5741:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2eb16d428a9973d4501eb7ecc571720161e433e4231d4f0af5c6baeb810d2d63",
                            "typeString": "literal_string \"frxETHETH Family Gauge\""
                          },
                          "value": "frxETHETH Family Gauge"
                        },
                        {
                          "arguments": [
                            {
                              "id": 40129,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5787:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 40128,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5779:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40127,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5779:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40130,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5779:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 40133,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "5814:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 40132,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5806:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40131,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5806:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5806:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 40137,
                              "name": "fxsDistributor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39995,
                              "src": "5878:14:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxGaugeFXSRewardsDistributor_$44365",
                                "typeString": "contract FraxGaugeFXSRewardsDistributor"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxGaugeFXSRewardsDistributor_$44365",
                                "typeString": "contract FraxGaugeFXSRewardsDistributor"
                              }
                            ],
                            "id": 40136,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5870:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40135,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5870:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5870:23:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 40141,
                              "name": "gaugeController",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40001,
                              "src": "5915:15:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5907:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40139,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5907:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40142,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5907:24:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 40145,
                              "name": "rewardToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39937,
                              "src": "5953:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockERC20_$44797",
                                "typeString": "contract MockERC20"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockERC20_$44797",
                                "typeString": "contract MockERC20"
                              }
                            ],
                            "id": 40144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5945:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40143,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5945:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5945:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2eb16d428a9973d4501eb7ecc571720161e433e4231d4f0af5c6baeb810d2d63",
                            "typeString": "literal_string \"frxETHETH Family Gauge\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "5701:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_FraxFamilialPitchGauge_$32819_$",
                          "typeString": "function (string memory,address,address,address,address,address) returns (contract FraxFamilialPitchGauge)"
                        },
                        "typeName": {
                          "id": 40124,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40123,
                            "name": "FraxFamilialPitchGauge",
                            "nameLocations": [
                              "5705:22:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 32819,
                            "src": "5705:22:22"
                          },
                          "referencedDeclaration": 32819,
                          "src": "5705:22:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                            "typeString": "contract FraxFamilialPitchGauge"
                          }
                        }
                      },
                      "id": 40147,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5701:274:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                        "typeString": "contract FraxFamilialPitchGauge"
                      }
                    },
                    "src": "5684:291:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                      "typeString": "contract FraxFamilialPitchGauge"
                    }
                  },
                  "id": 40149,
                  "nodeType": "ExpressionStatement",
                  "src": "5684:291:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "66727846616d696c794761756765",
                        "id": 40153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5998:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47296f47729ee62bc30ee9127abf44150c9a5b13c3abd01d1cb3f3d34d11653d",
                          "typeString": "literal_string \"frxFamilyGauge\""
                        },
                        "value": "frxFamilyGauge"
                      },
                      {
                        "arguments": [
                          {
                            "id": 40156,
                            "name": "frxFamilyGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39934,
                            "src": "6024:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          ],
                          "id": 40155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6016:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40154,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6016:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6016:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_47296f47729ee62bc30ee9127abf44150c9a5b13c3abd01d1cb3f3d34d11653d",
                          "typeString": "literal_string \"frxFamilyGauge\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40150,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "5985:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 40152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5994:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17708,
                      "src": "5985:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address) view"
                      }
                    },
                    "id": 40158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5985:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40159,
                  "nodeType": "ExpressionStatement",
                  "src": "5985:55:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40165,
                            "name": "fxsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40085,
                            "src": "6191:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40164,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6183:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40163,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6183:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6183:17:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40160,
                        "name": "_rewardTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40094,
                        "src": "6164:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6178:4:22",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6164:18:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 40167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6164:37:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40168,
                  "nodeType": "ExpressionStatement",
                  "src": "6164:37:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40174,
                            "name": "rewardManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40007,
                            "src": "6293:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40173,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6285:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40172,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6285:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6285:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40169,
                        "name": "_rewardManagers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40097,
                        "src": "6264:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40171,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6280:4:22",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6264:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 40176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6264:44:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40177,
                  "nodeType": "ExpressionStatement",
                  "src": "6264:44:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31313537343037",
                        "id": 40181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6458:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1157407_by_1",
                          "typeString": "int_const 1157407"
                        },
                        "value": "1157407"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1157407_by_1",
                          "typeString": "int_const 1157407"
                        }
                      ],
                      "expression": {
                        "id": 40178,
                        "name": "_rewardRates",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40100,
                        "src": "6440:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 40180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6453:4:22",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6440:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 40182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6440:26:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40183,
                  "nodeType": "ExpressionStatement",
                  "src": "6440:26:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40189,
                            "name": "frxFamilyGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39934,
                            "src": "6587:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          ],
                          "id": 40188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6579:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40187,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6579:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6579:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40184,
                        "name": "_rewardDistributors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40106,
                        "src": "6554:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40186,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6574:4:22",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6554:24:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 40191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6554:49:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40192,
                  "nodeType": "ExpressionStatement",
                  "src": "6554:49:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40198,
                            "name": "frxFamilyGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39934,
                            "src": "6644:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          ],
                          "id": 40197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6636:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40196,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6636:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6636:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40193,
                        "name": "_gaugeControllers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40103,
                        "src": "6613:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6631:4:22",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "6613:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 40200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6613:47:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40201,
                  "nodeType": "ExpressionStatement",
                  "src": "6613:47:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40207,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40051,
                            "src": "6729:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6721:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40205,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6721:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40208,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6721:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 40209,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6743:10:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40202,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6713:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6716:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "6713:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6713:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40211,
                  "nodeType": "ExpressionStatement",
                  "src": "6713:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40217,
                            "name": "receiverOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40064,
                            "src": "6780:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40216,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6772:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40215,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6772:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6772:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 40219,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6796:10:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40212,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6764:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6767:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "6764:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6764:43:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40221,
                  "nodeType": "ExpressionStatement",
                  "src": "6764:43:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40227,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6833:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 40226,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6825:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40225,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6825:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6825:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 40229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6840:10:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40222,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6817:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6820:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "6817:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6817:34:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40231,
                  "nodeType": "ExpressionStatement",
                  "src": "6817:34:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40235,
                        "name": "fxsWhale",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40119,
                        "src": "6875:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40232,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6861:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40234,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6864:10:22",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "6861:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6861:23:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40237,
                  "nodeType": "ExpressionStatement",
                  "src": "6861:23:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40244,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "6928:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 40243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6920:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40242,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6920:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6920:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "323030303030",
                        "id": 40246,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6935:12:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_200000000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000000"
                        },
                        "value": "200000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_200000000000000000000000_by_1",
                          "typeString": "int_const 200000000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 40239,
                            "name": "fxsToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40085,
                            "src": "6901:8:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40238,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25728,
                          "src": "6894:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$25728_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 40240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6894:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$25728",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 40241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6911:8:22",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25695,
                      "src": "6894:25:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 40247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6894:54:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40248,
                  "nodeType": "ExpressionStatement",
                  "src": "6894:54:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40249,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "6958:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40251,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6961:9:22",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "6958:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6958:14:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40253,
                  "nodeType": "ExpressionStatement",
                  "src": "6958:14:22"
                },
                {
                  "documentation": "todo not needed until the booster & vault logic is changed onchain        // create the new booster",
                  "expression": {
                    "id": 40269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40254,
                      "name": "frxEthFarm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39928,
                      "src": "7437:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40260,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "7487:4:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                                "typeString": "contract FraxFarmERC20TransfersTest"
                              }
                            ],
                            "id": 40259,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7479:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40258,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7479:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7479:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 40262,
                          "name": "_rewardTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40094,
                          "src": "7494:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 40263,
                          "name": "_rewardManagers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40097,
                          "src": "7509:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 40264,
                          "name": "_rewardRates",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40100,
                          "src": "7526:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        {
                          "id": 40265,
                          "name": "_gaugeControllers",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40103,
                          "src": "7540:17:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 40266,
                          "name": "_rewardDistributors",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40106,
                          "src": "7559:19:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        {
                          "id": 40267,
                          "name": "cvxStkFrxEthLp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39959,
                          "src": "7580:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40257,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "7450:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_address_$dyn_memory_ptr_$_t_address_$returns$_t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315_$",
                          "typeString": "function (address,address[] memory,address[] memory,uint256[] memory,address[] memory,address[] memory,address) returns (contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2)"
                        },
                        "typeName": {
                          "id": 40256,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40255,
                            "name": "FraxUnifiedFarm_ERC20_V2",
                            "nameLocations": [
                              "7454:24:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39315,
                            "src": "7454:24:22"
                          },
                          "referencedDeclaration": 39315,
                          "src": "7454:24:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        }
                      },
                      "id": 40268,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "7450:145:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                        "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                      }
                    },
                    "src": "7437:158:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                      "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                    }
                  },
                  "id": 40270,
                  "nodeType": "ExpressionStatement",
                  "src": "7437:158:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40276,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39965,
                            "src": "7621:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 40275,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7613:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40274,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7613:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7613:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40280,
                              "name": "frxEthFarm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39928,
                              "src": "7639:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                                "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                              }
                            ],
                            "id": 40279,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7631:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40278,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7631:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7631:19:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "7651:4:22",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "7631:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 40271,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7605:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7608:4:22",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "7605:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 40283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7605:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40284,
                  "nodeType": "ExpressionStatement",
                  "src": "7605:51:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40290,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39965,
                            "src": "7753:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 40289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7745:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40288,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7745:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7745:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40285,
                        "name": "_childGauges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40109,
                        "src": "7727:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7740:4:22",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7727:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 40292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7727:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40293,
                  "nodeType": "ExpressionStatement",
                  "src": "7727:35:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40299,
                            "name": "frxEthFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39928,
                            "src": "7798:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 40298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7790:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40297,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7790:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7790:19:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40294,
                        "name": "_childGauges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40109,
                        "src": "7772:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 40296,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7785:4:22",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "7772:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 40301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7772:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40302,
                  "nodeType": "ExpressionStatement",
                  "src": "7772:38:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40306,
                        "name": "_childGauges",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40109,
                        "src": "7892:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      ],
                      "expression": {
                        "id": 40303,
                        "name": "frxFamilyGauge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39934,
                        "src": "7863:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                          "typeString": "contract FraxFamilialPitchGauge"
                        }
                      },
                      "id": 40305,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7878:13:22",
                      "memberName": "addChildGauge",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32657,
                      "src": "7863:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address[] memory) external"
                      }
                    },
                    "id": 40307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7863:42:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40308,
                  "nodeType": "ExpressionStatement",
                  "src": "7863:42:22"
                },
                {
                  "documentation": "Change all the necessary state variables",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40314,
                            "name": "fraxAdmin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40013,
                            "src": "7991:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40313,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7983:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40312,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7983:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7983:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40309,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "7969:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "7972:10:22",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "7969:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40316,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7969:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40317,
                  "nodeType": "ExpressionStatement",
                  "src": "7969:33:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40323,
                            "name": "rewardToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39937,
                            "src": "8173:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockERC20_$44797",
                              "typeString": "contract MockERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockERC20_$44797",
                              "typeString": "contract MockERC20"
                            }
                          ],
                          "id": 40322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8165:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8165:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8165:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31313537343037",
                        "id": 40325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8187:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1157407_by_1",
                          "typeString": "int_const 1157407"
                        },
                        "value": "1157407"
                      },
                      {
                        "arguments": [
                          {
                            "id": 40328,
                            "name": "frxFamilyGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39934,
                            "src": "8204:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          ],
                          "id": 40327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8196:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40326,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8196:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8196:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40332,
                            "name": "frxFamilyGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39934,
                            "src": "8229:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          ],
                          "id": 40331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8221:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40330,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8221:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8221:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1157407_by_1",
                          "typeString": "int_const 1157407"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40318,
                        "name": "frxFarm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39965,
                        "src": "8143:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                          "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                        }
                      },
                      "id": 40320,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8151:13:22",
                      "memberName": "setRewardVars",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37391,
                      "src": "8143:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,uint256,address,address) external"
                      }
                    },
                    "id": 40334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8143:102:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40335,
                  "nodeType": "ExpressionStatement",
                  "src": "8143:102:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40342,
                            "name": "frxFamilyGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39934,
                            "src": "8361:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          ],
                          "id": 40341,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8353:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40340,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8353:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8353:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 40346,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8385:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 40345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8378:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_int128_$",
                            "typeString": "type(int128)"
                          },
                          "typeName": {
                            "id": 40344,
                            "name": "int128",
                            "nodeType": "ElementaryTypeName",
                            "src": "8378:6:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8378:9:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "31303030",
                            "id": 40350,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8397:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            }
                          ],
                          "id": 40349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8389:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 40348,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "8389:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8389:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_int128",
                          "typeString": "int128"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 40337,
                            "name": "gaugeController",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40001,
                            "src": "8326:15:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40336,
                          "name": "IFraxGaugeController",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 25288,
                          "src": "8305:20:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IFraxGaugeController_$25288_$",
                            "typeString": "type(contract IFraxGaugeController)"
                          }
                        },
                        "id": 40338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8305:37:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IFraxGaugeController_$25288",
                          "typeString": "contract IFraxGaugeController"
                        }
                      },
                      "id": 40339,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8343:9:22",
                      "memberName": "add_gauge",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 25225,
                      "src": "8305:47:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_int128_$_t_uint256_$returns$__$",
                        "typeString": "function (address,int128,uint256) external"
                      }
                    },
                    "id": 40352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8305:98:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40353,
                  "nodeType": "ExpressionStatement",
                  "src": "8305:98:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40359,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39965,
                            "src": "8527:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 40358,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8519:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40357,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8519:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40360,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8519:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 40361,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8537:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 40362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8544:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 40354,
                        "name": "fxsDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39995,
                        "src": "8490:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraxGaugeFXSRewardsDistributor_$44365",
                          "typeString": "contract FraxGaugeFXSRewardsDistributor"
                        }
                      },
                      "id": 40356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8505:13:22",
                      "memberName": "setGaugeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44302,
                      "src": "8490:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool,bool) external"
                      }
                    },
                    "id": 40363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8490:60:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40364,
                  "nodeType": "ExpressionStatement",
                  "src": "8490:60:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40370,
                            "name": "frxFamilyGauge",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39934,
                            "src": "8648:14:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFamilialPitchGauge_$32819",
                              "typeString": "contract FraxFamilialPitchGauge"
                            }
                          ],
                          "id": 40369,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8640:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40368,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8640:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40371,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8640:23:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 40372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8665:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8672:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 40365,
                        "name": "fxsDistributor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39995,
                        "src": "8611:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraxGaugeFXSRewardsDistributor_$44365",
                          "typeString": "contract FraxGaugeFXSRewardsDistributor"
                        }
                      },
                      "id": 40367,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8626:13:22",
                      "memberName": "setGaugeState",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44302,
                      "src": "8611:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool,bool) external"
                      }
                    },
                    "id": 40374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8611:66:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40375,
                  "nodeType": "ExpressionStatement",
                  "src": "8611:66:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40376,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8688:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40378,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8691:9:22",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "8688:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8688:14:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40380,
                  "nodeType": "ExpressionStatement",
                  "src": "8688:14:22"
                },
                {
                  "expression": {
                    "id": 40386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40381,
                      "name": "cvxVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39931,
                      "src": "8769:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 40384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "8780:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_StakingProxyConvex_$30535_$",
                          "typeString": "function () returns (contract StakingProxyConvex)"
                        },
                        "typeName": {
                          "id": 40383,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40382,
                            "name": "Vault",
                            "nameLocations": [
                              "8784:5:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 30535,
                            "src": "8784:5:22"
                          },
                          "referencedDeclaration": 30535,
                          "src": "8784:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                            "typeString": "contract StakingProxyConvex"
                          }
                        }
                      },
                      "id": 40385,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8780:11:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "8769:22:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 40387,
                  "nodeType": "ExpressionStatement",
                  "src": "8769:22:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40393,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "8829:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxFarmERC20TransfersTest_$41281",
                              "typeString": "contract FraxFarmERC20TransfersTest"
                            }
                          ],
                          "id": 40392,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8821:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40391,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8821:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8821:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 40397,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39965,
                            "src": "8844:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          ],
                          "id": 40396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8836:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40395,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8836:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8836:16:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40399,
                        "name": "cvxStkFrxEthLp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39959,
                        "src": "8854:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40400,
                        "name": "vaultRewardsAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39977,
                        "src": "8870:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40388,
                        "name": "cvxVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39931,
                        "src": "8801:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 40390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8810:10:22",
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 29554,
                      "src": "8801:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address) external"
                      }
                    },
                    "id": 40401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8801:89:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40402,
                  "nodeType": "ExpressionStatement",
                  "src": "8801:89:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40408,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40044,
                            "src": "9012:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 40407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9004:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40406,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9004:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40409,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9004:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40412,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39931,
                              "src": "9034:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9026:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40410,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9026:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9026:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40414,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9044:4:22",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "9026:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 40403,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "8996:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40405,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "8999:4:22",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "8996:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 40415,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8996:53:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40416,
                  "nodeType": "ExpressionStatement",
                  "src": "8996:53:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40422,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40057,
                            "src": "9075:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 40421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9067:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40420,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9067:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40423,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9067:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40426,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39931,
                              "src": "9099:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40425,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9091:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40424,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9091:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9091:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9109:4:22",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "9091:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 40417,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9059:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9062:4:22",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "9059:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 40429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9059:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40430,
                  "nodeType": "ExpressionStatement",
                  "src": "9059:55:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40436,
                            "name": "vaultImpl",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40076,
                            "src": "9140:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40435,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9132:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40434,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9132:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9132:18:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40440,
                              "name": "cvxVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39931,
                              "src": "9160:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9152:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40438,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9152:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9152:17:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9170:4:22",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "9152:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 40431,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9124:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9127:4:22",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "9124:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 40443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9124:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40444,
                  "nodeType": "ExpressionStatement",
                  "src": "9124:51:22"
                },
                {
                  "expression": {
                    "id": 40450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40445,
                      "name": "alice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39942,
                      "src": "9214:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307864656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 40448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9230:66:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          },
                          "value": "0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_100720434726375746010458024839911619878118703404436202866098422983289408962287_by_1",
                            "typeString": "int_const 1007...(70 digits omitted)...2287"
                          }
                        ],
                        "expression": {
                          "id": 40446,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "9222:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 40447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9225:4:22",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "9222:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 40449,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9222:75:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9214:83:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40451,
                  "nodeType": "ExpressionStatement",
                  "src": "9214:83:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40455,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39942,
                        "src": "9315:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 40456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9322:10:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40452,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9307:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40454,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9310:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "9307:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9307:26:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40458,
                  "nodeType": "ExpressionStatement",
                  "src": "9307:26:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40462,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39942,
                        "src": "9402:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "416c696365",
                        "id": 40463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9409:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        },
                        "value": "Alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_81376b9868b292a46a1c486d344e427a3088657fda629b5f4a647822d329cd6a",
                          "typeString": "literal_string \"Alice\""
                        }
                      ],
                      "expression": {
                        "id": 40459,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9393:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40461,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9396:5:22",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "9393:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 40464,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9393:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40465,
                  "nodeType": "ExpressionStatement",
                  "src": "9393:24:22"
                },
                {
                  "expression": {
                    "id": 40471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40466,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39944,
                      "src": "9428:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307865656164626565666465616462656566646561646265656664656164626565666465616462656566646561646265656664656164626565666465616462656566",
                          "id": 40469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9442:66:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          },
                          "value": "0xeeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_107957440303708008224431211402954614118948077446038738118564521983783979564783_by_1",
                            "typeString": "int_const 1079...(70 digits omitted)...4783"
                          }
                        ],
                        "expression": {
                          "id": 40467,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1837,
                          "src": "9434:2:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$8884",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 40468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "9437:4:22",
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "9434:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 40470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9434:75:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9428:81:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 40472,
                  "nodeType": "ExpressionStatement",
                  "src": "9428:81:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40476,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39944,
                        "src": "9527:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 40477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9532:10:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40473,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9519:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9522:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "9519:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9519:24:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40479,
                  "nodeType": "ExpressionStatement",
                  "src": "9519:24:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40483,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39944,
                        "src": "9562:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "426f62",
                        "id": 40484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9567:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        },
                        "value": "Bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_28cac318a86c8a0a6a9156c2dba2c8c2363677ba0514ef616592d81557e679b6",
                          "typeString": "literal_string \"Bob\""
                        }
                      ],
                      "expression": {
                        "id": 40480,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9553:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9556:5:22",
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8117,
                      "src": "9553:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 40485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9553:20:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40486,
                  "nodeType": "ExpressionStatement",
                  "src": "9553:20:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40492,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40051,
                            "src": "9600:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40491,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9592:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40490,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9592:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40493,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9592:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 40494,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9614:10:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40487,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9584:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9587:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "9584:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9584:41:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40496,
                  "nodeType": "ExpressionStatement",
                  "src": "9584:41:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40502,
                            "name": "receiverOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40064,
                            "src": "9651:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9643:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40500,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9643:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9643:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31653130",
                        "id": 40504,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9667:10:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        },
                        "value": "1e10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 40497,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "9635:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40499,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9638:4:22",
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8636,
                      "src": "9635:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 40505,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9635:43:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40506,
                  "nodeType": "ExpressionStatement",
                  "src": "9635:43:22"
                },
                {
                  "expression": {
                    "id": 40514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40507,
                      "name": "nonCompliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40067,
                      "src": "9736:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "3336",
                              "id": 40511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9788:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 40509,
                              "name": "convexBooster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40019,
                              "src": "9762:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Booster_$27314",
                                "typeString": "contract Booster"
                              }
                            },
                            "id": 40510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "9776:11:22",
                            "memberName": "createVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27158,
                            "src": "9762:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 40512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9762:29:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40508,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30535,
                        "src": "9756:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$30535_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 40513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9756:36:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "9736:56:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 40515,
                  "nodeType": "ExpressionStatement",
                  "src": "9736:56:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63726561746520636f6d706c69616e74207661756c74206f776e6572",
                        "id": 40519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9872:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7f6f599fe85c61e46cd4b337b7842186018dc5b2a11e68e0a91da93a11e6ac1c",
                          "typeString": "literal_string \"create compliant vault owner\""
                        },
                        "value": "create compliant vault owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7f6f599fe85c61e46cd4b337b7842186018dc5b2a11e68e0a91da93a11e6ac1c",
                          "typeString": "literal_string \"create compliant vault owner\""
                        }
                      ],
                      "expression": {
                        "id": 40516,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "9859:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 40518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "9868:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "9859:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 40520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9859:44:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40521,
                  "nodeType": "ExpressionStatement",
                  "src": "9859:44:22"
                },
                {
                  "expression": {
                    "id": 40527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40522,
                      "name": "vaultOwner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39940,
                      "src": "9913:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 40525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "9926:14:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MockVaultOwner_$44965_$",
                          "typeString": "function () returns (contract MockVaultOwner)"
                        },
                        "typeName": {
                          "id": 40524,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40523,
                            "name": "VaultOwner",
                            "nameLocations": [
                              "9930:10:22"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 44965,
                            "src": "9930:10:22"
                          },
                          "referencedDeclaration": 44965,
                          "src": "9930:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                            "typeString": "contract MockVaultOwner"
                          }
                        }
                      },
                      "id": 40526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9926:16:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                        "typeString": "contract MockVaultOwner"
                      }
                    },
                    "src": "9913:29:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                      "typeString": "contract MockVaultOwner"
                    }
                  },
                  "id": 40528,
                  "nodeType": "ExpressionStatement",
                  "src": "9913:29:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40534,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40051,
                            "src": "10092:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10084:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40532,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10084:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10084:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40538,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39940,
                              "src": "10114:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                "typeString": "contract MockVaultOwner"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                "typeString": "contract MockVaultOwner"
                              }
                            ],
                            "id": 40537,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10106:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40536,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10106:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10106:19:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40540,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10126:4:22",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "10106:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 40529,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "10076:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10079:4:22",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "10076:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 40541,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10076:55:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40542,
                  "nodeType": "ExpressionStatement",
                  "src": "10076:55:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40548,
                            "name": "receiverOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40064,
                            "src": "10157:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10149:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40546,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10149:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10149:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40552,
                              "name": "vaultOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39940,
                              "src": "10181:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                "typeString": "contract MockVaultOwner"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                "typeString": "contract MockVaultOwner"
                              }
                            ],
                            "id": 40551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10173:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40550,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10173:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10173:19:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "10193:4:22",
                        "memberName": "code",
                        "nodeType": "MemberAccess",
                        "src": "10173:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 40543,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "10141:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10144:4:22",
                      "memberName": "etch",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8643,
                      "src": "10141:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes memory) external"
                      }
                    },
                    "id": 40555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10141:57:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40556,
                  "nodeType": "ExpressionStatement",
                  "src": "10141:57:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40562,
                            "name": "vaultOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39940,
                            "src": "10284:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "10276:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "10276:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10276:19:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40557,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "10267:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10270:5:22",
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8607,
                      "src": "10267:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40564,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10267:29:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40565,
                  "nodeType": "ExpressionStatement",
                  "src": "10267:29:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "63726561746520636f6d706c69616e74207661756c74",
                        "id": 40569,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10477:24:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ba1b073a521479fa8594537b60d2f5a10e694fac1c239582041a65e766c90f93",
                          "typeString": "literal_string \"create compliant vault\""
                        },
                        "value": "create compliant vault"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ba1b073a521479fa8594537b60d2f5a10e694fac1c239582041a65e766c90f93",
                          "typeString": "literal_string \"create compliant vault\""
                        }
                      ],
                      "expression": {
                        "id": 40566,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "10464:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 40568,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "10473:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "10464:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 40570,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10464:38:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40571,
                  "nodeType": "ExpressionStatement",
                  "src": "10464:38:22"
                },
                {
                  "expression": {
                    "id": 40579,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40572,
                      "name": "compliantVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40070,
                      "src": "10512:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "3336",
                              "id": 40576,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10561:2:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              },
                              "value": "36"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_36_by_1",
                                "typeString": "int_const 36"
                              }
                            ],
                            "expression": {
                              "id": 40574,
                              "name": "convexBooster",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40019,
                              "src": "10535:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Booster_$27314",
                                "typeString": "contract Booster"
                              }
                            },
                            "id": 40575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "10549:11:22",
                            "memberName": "createVault",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 27158,
                            "src": "10535:25:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) external returns (address)"
                            }
                          },
                          "id": 40577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10535:29:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 40573,
                        "name": "Vault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30535,
                        "src": "10529:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StakingProxyConvex_$30535_$",
                          "typeString": "type(contract StakingProxyConvex)"
                        }
                      },
                      "id": 40578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10529:36:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                        "typeString": "contract StakingProxyConvex"
                      }
                    },
                    "src": "10512:53:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                      "typeString": "contract StakingProxyConvex"
                    }
                  },
                  "id": 40580,
                  "nodeType": "ExpressionStatement",
                  "src": "10512:53:22"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "5179:5:22",
            "parameters": {
              "id": 40120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5184:2:22"
            },
            "returnParameters": {
              "id": 40121,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5194:0:22"
            },
            "scope": 41281,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40637,
            "nodeType": "StructDefinition",
            "src": "10828:1031:22",
            "nodes": [],
            "canonicalName": "FraxFarmERC20TransfersTest.TestState",
            "members": [
              {
                "constant": false,
                "id": 40584,
                "mutability": "mutable",
                "name": "retval",
                "nameLocation": "10861:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "10855:12:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 40583,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "10855:5:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40586,
                "mutability": "mutable",
                "name": "retbal",
                "nameLocation": "10885:6:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "10877:14:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40585,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10877:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40588,
                "mutability": "mutable",
                "name": "senderPreAdd",
                "nameLocation": "10909:12:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "10901:20:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40587,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10901:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40590,
                "mutability": "mutable",
                "name": "senderBaseLockedLiquidity",
                "nameLocation": "10939:25:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "10931:33:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40589,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10931:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40592,
                "mutability": "mutable",
                "name": "senderPostAdd",
                "nameLocation": "10982:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "10974:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40591,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "10974:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40594,
                "mutability": "mutable",
                "name": "senderInitialLockedLiquidity",
                "nameLocation": "11013:28:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11005:36:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40593,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11005:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40596,
                "mutability": "mutable",
                "name": "receiverInitialLockedLiquidity",
                "nameLocation": "11059:30:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11051:38:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40595,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11051:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40598,
                "mutability": "mutable",
                "name": "senderPostTransfer1",
                "nameLocation": "11107:19:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11099:27:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40597,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11099:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40600,
                "mutability": "mutable",
                "name": "senderPostTransfer2",
                "nameLocation": "11144:19:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11136:27:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40599,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11136:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40602,
                "mutability": "mutable",
                "name": "receiverPreTransfer1",
                "nameLocation": "11181:20:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11173:28:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40601,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11173:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40604,
                "mutability": "mutable",
                "name": "receiverPostTransfer1",
                "nameLocation": "11219:21:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11211:29:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40603,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11211:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40606,
                "mutability": "mutable",
                "name": "receiverPostTransfer2",
                "nameLocation": "11258:21:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11250:29:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40605,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11250:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40608,
                "mutability": "mutable",
                "name": "senderLock",
                "nameLocation": "11297:10:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11289:18:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40607,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11289:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40610,
                "mutability": "mutable",
                "name": "receiverLock1",
                "nameLocation": "11325:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11317:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40609,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11317:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40612,
                "mutability": "mutable",
                "name": "receiverLock2",
                "nameLocation": "11356:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11348:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40611,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11348:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40614,
                "mutability": "mutable",
                "name": "receiverLock3",
                "nameLocation": "11387:13:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11379:21:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40613,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11379:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40616,
                "mutability": "mutable",
                "name": "senderPostTransfer1Balance",
                "nameLocation": "11418:26:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11410:34:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40615,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11410:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40618,
                "mutability": "mutable",
                "name": "senderPostTransfer2Balance",
                "nameLocation": "11462:26:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11454:34:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40617,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11454:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40620,
                "mutability": "mutable",
                "name": "senderPreTransfer3",
                "nameLocation": "11506:18:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11498:26:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40619,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11498:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40622,
                "mutability": "mutable",
                "name": "receiverPostTransfer1Balance",
                "nameLocation": "11542:28:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11534:36:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40621,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11534:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40624,
                "mutability": "mutable",
                "name": "receiverPostTransfer2Balance",
                "nameLocation": "11588:28:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11580:36:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40623,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11580:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40626,
                "mutability": "mutable",
                "name": "receiverPreTransfer3",
                "nameLocation": "11634:20:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11626:28:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40625,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11626:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40628,
                "mutability": "mutable",
                "name": "senderPostTransfer3Balance",
                "nameLocation": "11672:26:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11664:34:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40627,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11664:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40630,
                "mutability": "mutable",
                "name": "receiverPostTransfer3Balance",
                "nameLocation": "11716:28:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11708:36:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40629,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11708:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40632,
                "mutability": "mutable",
                "name": "senderPostTransfer3",
                "nameLocation": "11762:19:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11754:27:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40631,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11754:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40634,
                "mutability": "mutable",
                "name": "receiverPostTransfer3",
                "nameLocation": "11799:21:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11791:29:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40633,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11791:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 40636,
                "mutability": "mutable",
                "name": "transferAmount",
                "nameLocation": "11838:14:22",
                "nodeType": "VariableDeclaration",
                "scope": 40637,
                "src": "11830:22:22",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 40635,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "11830:7:22",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "TestState",
            "nameLocation": "10835:9:22",
            "scope": 41281,
            "visibility": "public"
          },
          {
            "id": 41280,
            "nodeType": "FunctionDefinition",
            "src": "11865:6517:22",
            "nodes": [],
            "body": {
              "id": 41279,
              "nodeType": "Block",
              "src": "11895:6487:22",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40642
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40642,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "11922:1:22",
                      "nodeType": "VariableDeclaration",
                      "scope": 41279,
                      "src": "11905:18:22",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                        "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                      },
                      "typeName": {
                        "id": 40641,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 40640,
                          "name": "TestState",
                          "nameLocations": [
                            "11905:9:22"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 40637,
                          "src": "11905:9:22"
                        },
                        "referencedDeclaration": 40637,
                        "src": "11905:9:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_storage_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40643,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11905:18:22"
                },
                {
                  "expression": {
                    "id": 40648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40644,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "12102:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40646,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12104:14:22",
                      "memberName": "transferAmount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40636,
                      "src": "12102:16:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "3130",
                      "id": 40647,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12121:8:22",
                      "subdenomination": "ether",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_10000000000000000000_by_1",
                        "typeString": "int_const 10000000000000000000"
                      },
                      "value": "10"
                    },
                    "src": "12102:27:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40649,
                  "nodeType": "ExpressionStatement",
                  "src": "12102:27:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40655,
                            "name": "senderOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40051,
                            "src": "12213:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                              "typeString": "contract MockVaultOwner"
                            }
                          ],
                          "id": 40654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "12205:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "12205:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12205:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40650,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "12191:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12194:10:22",
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8612,
                      "src": "12191:13:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 40657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12191:35:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40658,
                  "nodeType": "ExpressionStatement",
                  "src": "12191:35:22"
                },
                {
                  "documentation": "obtain some frxEth",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "7375626d69742829",
                            "id": 40668,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12327:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            },
                            "value": "submit()"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_5bcb2fc651a89fc3ec626f1555843c5c0886b9d3d51c99aeef30f12a536c39bd",
                              "typeString": "literal_string \"submit()\""
                            }
                          ],
                          "expression": {
                            "id": 40666,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12303:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 40667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "12307:19:22",
                          "memberName": "encodeWithSignature",
                          "nodeType": "MemberAccess",
                          "src": "12303:23:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (string memory) pure returns (bytes memory)"
                          }
                        },
                        "id": 40669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12303:35:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 40659,
                          "name": "frxEthMinter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39983,
                          "src": "12267:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12280:4:22",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "12267:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 40665,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          },
                          "id": 40664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "31303030",
                            "id": 40662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12292:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000_by_1",
                              "typeString": "int_const 1000"
                            },
                            "value": "1000"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "31653138",
                            "id": 40663,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12297:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1000000000000000000_by_1",
                              "typeString": "int_const 1000000000000000000"
                            },
                            "value": "1e18"
                          },
                          "src": "12292:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000000"
                          }
                        }
                      ],
                      "src": "12267:35:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 40670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12267:72:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "id": 40671,
                  "nodeType": "ExpressionStatement",
                  "src": "12267:72:22"
                },
                {
                  "expression": {
                    "id": 40687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 40672,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "12351:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40674,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "12353:6:22",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40584,
                          "src": "12351:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "id": 40675,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "12349:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(,bytes memory)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "hexValue": "62616c616e63654f66286164647265737329",
                              "id": 40680,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12399:20:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              "value": "balanceOf(address)"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 40683,
                                  "name": "senderOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40051,
                                  "src": "12429:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                    "typeString": "contract MockVaultOwner"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                    "typeString": "contract MockVaultOwner"
                                  }
                                ],
                                "id": 40682,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12421:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 40681,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12421:7:22",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 40684,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12421:20:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_70a08231b98ef4ca268c9cc3f6b4590e4bfec28280db06bb5d45e689f2a360be",
                                "typeString": "literal_string \"balanceOf(address)\""
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 40678,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "12375:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 40679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "12379:19:22",
                            "memberName": "encodeWithSignature",
                            "nodeType": "MemberAccess",
                            "src": "12375:23:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function (string memory) pure returns (bytes memory)"
                            }
                          },
                          "id": 40685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12375:67:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 40676,
                          "name": "frxEth",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39947,
                          "src": "12363:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 40677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12370:4:22",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "12363:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 40686,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12363:80:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "tuple(bool,bytes memory)"
                      }
                    },
                    "src": "12349:94:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40688,
                  "nodeType": "ExpressionStatement",
                  "src": "12349:94:22"
                },
                {
                  "expression": {
                    "id": 40700,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40689,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "12453:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40691,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12455:6:22",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40586,
                      "src": "12453:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 40694,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "12475:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40695,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "12477:6:22",
                          "memberName": "retval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40584,
                          "src": "12475:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        {
                          "components": [
                            {
                              "id": 40697,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12486:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 40696,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12486:7:22",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "id": 40698,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "12485:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          }
                        ],
                        "expression": {
                          "id": 40692,
                          "name": "abi",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -1,
                          "src": "12464:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_abi",
                            "typeString": "abi"
                          }
                        },
                        "id": 40693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "12468:6:22",
                        "memberName": "decode",
                        "nodeType": "MemberAccess",
                        "src": "12464:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 40699,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12464:31:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12453:42:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40701,
                  "nodeType": "ExpressionStatement",
                  "src": "12453:42:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40703,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "12514:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40704,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12516:6:22",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40586,
                        "src": "12514:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 40705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12524:9:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e7420616d6f756e7420667278455448",
                        "id": 40706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12535:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        },
                        "value": "invalid mint amount frxETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_516ce5bb5f8b03fbe02ef6517bef4946857658ed8802e8d431f5a5befe02da34",
                          "typeString": "literal_string \"invalid mint amount frxETH\""
                        }
                      ],
                      "id": 40702,
                      "name": "assertGe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        927,
                        952,
                        982,
                        1007
                      ],
                      "referencedDeclaration": 952,
                      "src": "12505:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40707,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12505:59:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40708,
                  "nodeType": "ExpressionStatement",
                  "src": "12505:59:22"
                },
                {
                  "documentation": "deposit it as LP into the curve pool",
                  "expression": {
                    "arguments": [
                      {
                        "id": 40716,
                        "name": "curveLpMinter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39971,
                        "src": "12659:13:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40719,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12679:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 40718,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12679:7:22",
                                "typeDescriptions": {}
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              }
                            ],
                            "id": 40717,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "12674:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 40720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12674:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_uint256",
                            "typeString": "type(uint256)"
                          }
                        },
                        "id": 40721,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "12688:3:22",
                        "memberName": "max",
                        "nodeType": "MemberAccess",
                        "src": "12674:17:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 40712,
                                "name": "frxEth",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39947,
                                "src": "12642:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 40711,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12634:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 40710,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "12634:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40713,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12634:15:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40709,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39923,
                          "src": "12624:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$39923_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 40714,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12624:26:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$39923",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 40715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12651:7:22",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39903,
                      "src": "12624:34:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 40722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12624:68:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40723,
                  "nodeType": "ExpressionStatement",
                  "src": "12624:68:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 40730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12750:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 40729,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12742:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 40728,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12742:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12742:10:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "31303030",
                                "id": 40734,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12762:10:22",
                                "subdenomination": "ether",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                },
                                "value": "1000"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1000000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000000"
                                }
                              ],
                              "id": 40733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12754:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 40732,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12754:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 40735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12754:19:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 40736,
                        "isConstant": false,
                        "isInlineArray": true,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "12741:33:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 40737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12776:9:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$2_memory_ptr",
                          "typeString": "uint256[2] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 40725,
                            "name": "curveLpMinter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39971,
                            "src": "12712:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 40724,
                          "name": "IDeposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39923,
                          "src": "12702:9:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IDeposits_$39923_$",
                            "typeString": "type(contract IDeposits)"
                          }
                        },
                        "id": 40726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12702:24:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDeposits_$39923",
                          "typeString": "contract IDeposits"
                        }
                      },
                      "id": 40727,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "12727:13:22",
                      "memberName": "add_liquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39887,
                      "src": "12702:38:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_uint256_$2_memory_ptr_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256[2] memory,uint256) external returns (uint256)"
                      }
                    },
                    "id": 40738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12702:84:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40739,
                  "nodeType": "ExpressionStatement",
                  "src": "12702:84:22"
                },
                {
                  "expression": {
                    "id": 40752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40740,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "12796:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40742,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "12798:6:22",
                      "memberName": "retbal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40586,
                      "src": "12796:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40749,
                              "name": "senderOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40051,
                              "src": "12846:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                "typeString": "contract MockVaultOwner"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_MockVaultOwner_$44965",
                                "typeString": "contract MockVaultOwner"
                              }
                            ],
                            "id": 40748,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12838:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40747,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12838:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40750,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12838:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 40744,
                              "name": "frxETHCRV",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 39950,
                              "src": "12817:9:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 40743,
                            "name": "IDeposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39923,
                            "src": "12807:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IDeposits_$39923_$",
                              "typeString": "type(contract IDeposits)"
                            }
                          },
                          "id": 40745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12807:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IDeposits_$39923",
                            "typeString": "contract IDeposits"
                          }
                        },
                        "id": 40746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12828:9:22",
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 39894,
                        "src": "12807:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40751,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "12807:52:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12796:63:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40753,
                  "nodeType": "ExpressionStatement",
                  "src": "12796:63:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40755,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "12878:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40756,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "12880:6:22",
                        "memberName": "retbal",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40586,
                        "src": "12878:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "393930",
                        "id": 40757,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12888:9:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        "value": "990"
                      },
                      {
                        "hexValue": "696e76616c6964206d696e696d756d206d696e7420616d6f756e7420667278455448435256",
                        "id": 40758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12899:39:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        },
                        "value": "invalid minimum mint amount frxETHCRV"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_990000000000000000000_by_1",
                          "typeString": "int_const 990000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e85977bb0c09738ef0d632a90fef03b08344d169f481631656e80e1b1597e006",
                          "typeString": "literal_string \"invalid minimum mint amount frxETHCRV\""
                        }
                      ],
                      "id": 40754,
                      "name": "assertGt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        693,
                        718,
                        748,
                        773
                      ],
                      "referencedDeclaration": 718,
                      "src": "12869:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12869:70:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40760,
                  "nodeType": "ExpressionStatement",
                  "src": "12869:70:22"
                },
                {
                  "documentation": "Since the `etch` completely overwrites the existing contract storage, pull these values to double check at each step",
                  "expression": {
                    "id": 40771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40761,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "13079:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40763,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13081:12:22",
                      "memberName": "senderPreAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40588,
                      "src": "13079:14:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40768,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "13133:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40767,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13125:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40766,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13125:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13125:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40764,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "13096:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13104:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "13096:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13096:50:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13079:67:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40772,
                  "nodeType": "ExpressionStatement",
                  "src": "13079:67:22"
                },
                {
                  "expression": {
                    "id": 40783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40773,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "13156:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40775,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13158:25:22",
                      "memberName": "senderBaseLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40590,
                      "src": "13156:27:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40780,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "13220:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13212:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40778,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13212:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40781,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13212:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40776,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "13186:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13194:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "13186:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40782,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13186:47:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13156:77:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40784,
                  "nodeType": "ExpressionStatement",
                  "src": "13156:77:22"
                },
                {
                  "documentation": "create a known kekId",
                  "expression": {
                    "id": 40800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40785,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "13277:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40787,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13279:10:22",
                      "memberName": "senderLock",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40608,
                      "src": "13277:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "393930",
                          "id": 40790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13323:9:22",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          "value": "990"
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              },
                              "id": 40797,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                },
                                "id": 40795,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "id": 40793,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3630",
                                    "id": 40791,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13335:2:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "hexValue": "3630",
                                    "id": 40792,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13338:2:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    "value": "60"
                                  },
                                  "src": "13335:5:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "hexValue": "3234",
                                  "id": 40794,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "13341:2:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_24_by_1",
                                    "typeString": "int_const 24"
                                  },
                                  "value": "24"
                                },
                                "src": "13335:8:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_86400_by_1",
                                  "typeString": "int_const 86400"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "hexValue": "333030",
                                "id": 40796,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13344:3:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_300_by_1",
                                  "typeString": "int_const 300"
                                },
                                "value": "300"
                              },
                              "src": "13335:12:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_25920000_by_1",
                                "typeString": "int_const 25920000"
                              }
                            }
                          ],
                          "id": 40798,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "13334:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_990000000000000000000_by_1",
                            "typeString": "int_const 990000000000000000000"
                          },
                          {
                            "typeIdentifier": "t_rational_25920000_by_1",
                            "typeString": "int_const 25920000"
                          }
                        ],
                        "expression": {
                          "id": 40788,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40044,
                          "src": "13292:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 40789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13304:18:22",
                        "memberName": "stakeLockedCurveLp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 29610,
                        "src": "13292:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) external returns (uint256)"
                        }
                      },
                      "id": 40799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13292:57:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13277:72:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40801,
                  "nodeType": "ExpressionStatement",
                  "src": "13277:72:22"
                },
                {
                  "expression": {
                    "id": 40812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40802,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "13359:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40804,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13361:13:22",
                      "memberName": "senderPostAdd",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40592,
                      "src": "13359:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40809,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "13414:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40808,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13406:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40807,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13406:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13406:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40805,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "13377:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13385:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "13377:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40811,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13377:50:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13359:68:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40813,
                  "nodeType": "ExpressionStatement",
                  "src": "13359:68:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40815,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "13446:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40816,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13448:13:22",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40592,
                        "src": "13446:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40817,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "13463:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40818,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "13465:12:22",
                          "memberName": "senderPreAdd",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40588,
                          "src": "13463:14:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 40819,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13480:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "13463:18:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c642068617665206e6577204c6f636b65645374616b65",
                        "id": 40821,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13483:36:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        },
                        "value": "sender should have new LockedStake"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_101eb6b955ff9330ddc7c4e46e65dcce05af1648b585ed1b4b83aeb6ddb67d14",
                          "typeString": "literal_string \"sender should have new LockedStake\""
                        }
                      ],
                      "id": 40814,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "13437:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13437:83:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40823,
                  "nodeType": "ExpressionStatement",
                  "src": "13437:83:22"
                },
                {
                  "expression": {
                    "id": 40834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40824,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "13530:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40826,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13532:28:22",
                      "memberName": "senderInitialLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40594,
                      "src": "13530:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40831,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "13597:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13589:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40829,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13589:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13589:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40827,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "13563:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13571:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "13563:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40833,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13563:47:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13530:80:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40835,
                  "nodeType": "ExpressionStatement",
                  "src": "13530:80:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 40837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13685:6:22",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 40836,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "13680:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13680:12:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40839,
                  "nodeType": "ExpressionStatement",
                  "src": "13680:12:22"
                },
                {
                  "documentation": "get receiver's pre-transfer number of locks, should be 0",
                  "expression": {
                    "id": 40850,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40840,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "13772:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40842,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13774:20:22",
                      "memberName": "receiverPreTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40602,
                      "src": "13772:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40847,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "13834:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40846,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13826:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40845,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13826:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13826:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40843,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "13797:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13805:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "13797:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40849,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13797:52:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13772:77:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40851,
                  "nodeType": "ExpressionStatement",
                  "src": "13772:77:22"
                },
                {
                  "expression": {
                    "id": 40862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40852,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "13859:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40854,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "13861:30:22",
                      "memberName": "receiverInitialLockedLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40596,
                      "src": "13859:32:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40859,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "13928:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40858,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13920:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40857,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "13920:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13920:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40855,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "13894:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40856,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "13902:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "13894:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40861,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13894:49:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13859:84:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40863,
                  "nodeType": "ExpressionStatement",
                  "src": "13859:84:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40869,
                            "name": "senderVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40044,
                            "src": "13979:11:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 40868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "13971:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40867,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "13971:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13971:20:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40864,
                        "name": "frxFarm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39965,
                        "src": "13953:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                          "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                        }
                      },
                      "id": 40866,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "13961:9:22",
                      "memberName": "getReward",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36755,
                      "src": "13953:17:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (address) external returns (uint256[] memory)"
                      }
                    },
                    "id": 40871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13953:39:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "id": 40872,
                  "nodeType": "ExpressionStatement",
                  "src": "13953:39:22"
                },
                {
                  "expression": {
                    "id": 40890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 40873,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "14096:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40875,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "14098:13:22",
                          "memberName": "receiverLock1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40610,
                          "src": "14096:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 40876,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "14093:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40881,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "14150:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14142:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40879,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14142:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40882,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14142:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 40883,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "14166:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40884,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14168:10:22",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40608,
                          "src": "14166:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 40885,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "14180:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40886,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14182:14:22",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40636,
                          "src": "14180:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "66616c7365",
                          "id": 40887,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14198:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        {
                          "hexValue": "30",
                          "id": 40888,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14205:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 40877,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40044,
                          "src": "14115:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 40878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14127:14:22",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30069,
                        "src": "14115:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 40889,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14115:92:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "14093:114:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40891,
                  "nodeType": "ExpressionStatement",
                  "src": "14093:114:22"
                },
                {
                  "documentation": "Double check that this stake exists now & that sender didn't lose or add a LockedStake",
                  "expression": {
                    "id": 40902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40892,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "14325:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40894,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14327:19:22",
                      "memberName": "senderPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40598,
                      "src": "14325:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40899,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "14386:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14378:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40897,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14378:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40900,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14378:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40895,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "14349:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14357:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "14349:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14349:50:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14325:74:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40903,
                  "nodeType": "ExpressionStatement",
                  "src": "14325:74:22"
                },
                {
                  "expression": {
                    "id": 40914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40904,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "14409:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40906,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14411:21:22",
                      "memberName": "receiverPostTransfer1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40604,
                      "src": "14409:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40911,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "14472:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14464:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40909,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14464:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40912,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14464:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40907,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "14435:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14443:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "14435:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40913,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14435:52:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14409:78:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40915,
                  "nodeType": "ExpressionStatement",
                  "src": "14409:78:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40917,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "14506:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40918,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14508:19:22",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40598,
                        "src": "14506:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 40919,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "14529:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40920,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14531:13:22",
                        "memberName": "senderPostAdd",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40592,
                        "src": "14529:15:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c6420686176652073616d652023206c6f636b73",
                        "id": 40921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14546:33:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        },
                        "value": "sender should have same # locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9523f3d777a110ef2c1dae3595fbcded714510b3443d9c3850f4228111584d40",
                          "typeString": "literal_string \"sender should have same # locks\""
                        }
                      ],
                      "id": 40916,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14497:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14497:83:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40923,
                  "nodeType": "ExpressionStatement",
                  "src": "14497:83:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40925,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "14599:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40926,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14601:21:22",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40604,
                        "src": "14599:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 40930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 40927,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40642,
                                "src": "14625:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 40928,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "14627:20:22",
                              "memberName": "receiverPreTransfer1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40602,
                              "src": "14625:22:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 40929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14650:1:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "14625:26:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 40931,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "14624:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c6420686176652031206d6f7265206c6f636b",
                        "id": 40932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14654:34:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        },
                        "value": "receiver should have 1 more lock"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ffe7471fc2ae34ade624004cfbda777b3ebbccf6ace43b341056f534b893c054",
                          "typeString": "literal_string \"receiver should have 1 more lock\""
                        }
                      ],
                      "id": 40924,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14590:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40933,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14590:99:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40934,
                  "nodeType": "ExpressionStatement",
                  "src": "14590:99:22"
                },
                {
                  "expression": {
                    "id": 40945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40935,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "14743:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40937,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14745:26:22",
                      "memberName": "senderPostTransfer1Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40616,
                      "src": "14743:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40942,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "14808:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40941,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14800:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40940,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14800:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14800:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40938,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "14774:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14782:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "14774:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14774:47:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14743:78:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40946,
                  "nodeType": "ExpressionStatement",
                  "src": "14743:78:22"
                },
                {
                  "expression": {
                    "id": 40957,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 40947,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "14831:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 40949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "14833:28:22",
                      "memberName": "receiverPostTransfer1Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40622,
                      "src": "14831:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40954,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "14898:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 40953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "14890:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40952,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "14890:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14890:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 40950,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "14864:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 40951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14872:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "14864:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 40956,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14864:49:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14831:82:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40958,
                  "nodeType": "ExpressionStatement",
                  "src": "14831:82:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40960,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "14932:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40961,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "14934:26:22",
                        "memberName": "senderPostTransfer1Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40616,
                        "src": "14932:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40962,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "14962:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40963,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14964:28:22",
                          "memberName": "senderInitialLockedLiquidity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40594,
                          "src": "14962:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 40964,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "14995:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40965,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "14997:14:22",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40636,
                          "src": "14995:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14962:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64206861766520393830206c6f636b6564",
                        "id": 40967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15013:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ff0975957fbe29bd14402594c66f5d6f81a9e3361ca0c93beb4d938192b17c39",
                          "typeString": "literal_string \"sender should have 980 locked\""
                        },
                        "value": "sender should have 980 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ff0975957fbe29bd14402594c66f5d6f81a9e3361ca0c93beb4d938192b17c39",
                          "typeString": "literal_string \"sender should have 980 locked\""
                        }
                      ],
                      "id": 40959,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "14923:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14923:122:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40969,
                  "nodeType": "ExpressionStatement",
                  "src": "14923:122:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40971,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "15064:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40972,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15066:28:22",
                        "memberName": "receiverPostTransfer1Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40622,
                        "src": "15064:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40973,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "15096:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40974,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15098:30:22",
                          "memberName": "receiverInitialLockedLiquidity",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40596,
                          "src": "15096:32:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 40975,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "15131:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 40976,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15133:14:22",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40636,
                          "src": "15131:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15096:51:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c642068617665203130206c6f636b6564",
                        "id": 40978,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15149:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79e1bdbc615a90673398dd3a55fca9c274aada029d20f4033c491d805f561215",
                          "typeString": "literal_string \"receiver should have 10 locked\""
                        },
                        "value": "receiver should have 10 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79e1bdbc615a90673398dd3a55fca9c274aada029d20f4033c491d805f561215",
                          "typeString": "literal_string \"receiver should have 10 locked\""
                        }
                      ],
                      "id": 40970,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15055:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 40979,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15055:127:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40980,
                  "nodeType": "ExpressionStatement",
                  "src": "15055:127:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 40981,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "15278:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 40983,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15281:12:22",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "15278:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 40984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15278:17:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40985,
                  "nodeType": "ExpressionStatement",
                  "src": "15278:17:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40991,
                            "name": "receiverVault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40057,
                            "src": "15340:13:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                              "typeString": "contract StakingProxyConvex"
                            }
                          ],
                          "id": 40990,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15332:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 40989,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15332:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 40992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15332:22:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 40993,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "15356:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40994,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15358:10:22",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40608,
                        "src": "15356:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 40995,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "15370:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 40996,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15372:14:22",
                        "memberName": "transferAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40636,
                        "src": "15370:16:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 40997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15388:4:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "3639",
                        "id": 40998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15394:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        },
                        "value": "69"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_69_by_1",
                          "typeString": "int_const 69"
                        }
                      ],
                      "expression": {
                        "id": 40986,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40044,
                        "src": "15305:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 40988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "15317:14:22",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30069,
                      "src": "15305:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 40999,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15305:92:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 41000,
                  "nodeType": "ExpressionStatement",
                  "src": "15305:92:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 41002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15458:6:22",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_86400_by_1",
                          "typeString": "int_const 86400"
                        }
                      ],
                      "id": 41001,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "15453:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 41003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15453:12:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41004,
                  "nodeType": "ExpressionStatement",
                  "src": "15453:12:22"
                },
                {
                  "documentation": "transfer to a specific receiver lockKek (the same as was created last time)",
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41010,
                                "name": "receiverVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40057,
                                "src": "15618:13:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 41009,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15610:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41008,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15610:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41011,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15610:22:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 41006,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39965,
                            "src": "15581:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 41007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15589:20:22",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37840,
                          "src": "15581:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 41012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15581:52:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 41013,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "15635:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41014,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15637:21:22",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40604,
                        "src": "15635:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 41015,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15660:46:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        },
                        "value": "receiver should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d464c3cc33bf54f13c62fd8674e486a1c22e689f8da4fcf797e005a2f7820bf8",
                          "typeString": "literal_string \"receiver should still have same number locks\""
                        }
                      ],
                      "id": 41005,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15572:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15572:135:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41017,
                  "nodeType": "ExpressionStatement",
                  "src": "15572:135:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 41023,
                                "name": "senderVault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40044,
                                "src": "15763:11:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                  "typeString": "contract StakingProxyConvex"
                                }
                              ],
                              "id": 41022,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "15755:7:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 41021,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "15755:7:22",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 41024,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15755:20:22",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 41019,
                            "name": "frxFarm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39965,
                            "src": "15726:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                              "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                            }
                          },
                          "id": 41020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15734:20:22",
                          "memberName": "lockedStakesOfLength",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37840,
                          "src": "15726:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 41025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15726:50:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 41026,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "15778:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41027,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15780:19:22",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40598,
                        "src": "15778:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64207374696c6c20686176652073616d65206e756d626572206c6f636b73",
                        "id": 41028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15801:44:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        },
                        "value": "sender should still have same number locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38d7f539d9dc6183858e733331c3913e1b044225cf1d1ec5b034437f7d7b9222",
                          "typeString": "literal_string \"sender should still have same number locks\""
                        }
                      ],
                      "id": 41018,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "15717:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15717:129:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41030,
                  "nodeType": "ExpressionStatement",
                  "src": "15717:129:22"
                },
                {
                  "expression": {
                    "id": 41049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 41031,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "15910:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41033,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "15912:13:22",
                          "memberName": "receiverLock2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40612,
                          "src": "15910:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 41034,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "15907:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41039,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "15964:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "15956:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41037,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "15956:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41040,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15956:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 41041,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "15980:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41042,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15982:10:22",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40608,
                          "src": "15980:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 41043,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "15994:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41044,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "15996:14:22",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40636,
                          "src": "15994:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 41045,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16012:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 41046,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "16018:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41047,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16020:13:22",
                          "memberName": "receiverLock1",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40610,
                          "src": "16018:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 41035,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40044,
                          "src": "15929:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 41036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "15941:14:22",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30069,
                        "src": "15929:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 41048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "15929:105:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "15907:127:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41050,
                  "nodeType": "ExpressionStatement",
                  "src": "15907:127:22"
                },
                {
                  "documentation": "Check that the total number of both sender & receiver LockedStakes remained the same",
                  "expression": {
                    "id": 41061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41051,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "16142:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41053,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16144:19:22",
                      "memberName": "senderPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40600,
                      "src": "16142:21:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41058,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "16203:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41057,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16195:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41056,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16195:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41059,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16195:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41054,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "16166:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16174:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "16166:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16166:50:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16142:74:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41062,
                  "nodeType": "ExpressionStatement",
                  "src": "16142:74:22"
                },
                {
                  "expression": {
                    "id": 41073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41063,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "16226:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41065,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16228:21:22",
                      "memberName": "receiverPostTransfer2",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40606,
                      "src": "16226:23:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41070,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "16289:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16281:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41068,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16281:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41071,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16281:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41066,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "16252:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16260:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "16252:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41072,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16252:52:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16226:78:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41074,
                  "nodeType": "ExpressionStatement",
                  "src": "16226:78:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41076,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "16323:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41077,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16325:19:22",
                        "memberName": "senderPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40600,
                        "src": "16323:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 41078,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "16346:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41079,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16348:19:22",
                        "memberName": "senderPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40598,
                        "src": "16346:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "53656e6465722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 41080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16369:35:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        },
                        "value": "Sender should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_83869f5918cd95f87e9d974e8419aeeb5b9aebe9db37d7304d05c3da1b640acf",
                          "typeString": "literal_string \"Sender should have same num locks\""
                        }
                      ],
                      "id": 41075,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16314:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16314:91:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41082,
                  "nodeType": "ExpressionStatement",
                  "src": "16314:91:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41084,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "16424:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41085,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16426:21:22",
                        "memberName": "receiverPostTransfer2",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40606,
                        "src": "16424:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 41086,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "16449:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41087,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16451:21:22",
                        "memberName": "receiverPostTransfer1",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40604,
                        "src": "16449:23:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "52656365697665722073686f756c6420686176652073616d65206e756d206c6f636b73",
                        "id": 41088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16474:37:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        },
                        "value": "Receiver should have same num locks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1e701235aa6e286dc8ae12ecc00115b2a9d54bb074aac3af3170b4f8ed4e99",
                          "typeString": "literal_string \"Receiver should have same num locks\""
                        }
                      ],
                      "id": 41083,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16415:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16415:97:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41090,
                  "nodeType": "ExpressionStatement",
                  "src": "16415:97:22"
                },
                {
                  "expression": {
                    "id": 41101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41091,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "16566:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41093,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16568:26:22",
                      "memberName": "senderPostTransfer2Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40618,
                      "src": "16566:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41098,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "16631:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16623:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41096,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16623:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16623:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41094,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "16597:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16605:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "16597:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16597:47:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16566:78:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41102,
                  "nodeType": "ExpressionStatement",
                  "src": "16566:78:22"
                },
                {
                  "expression": {
                    "id": 41113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41103,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "16654:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41105,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "16656:28:22",
                      "memberName": "receiverPostTransfer2Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40624,
                      "src": "16654:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41110,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "16721:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "16713:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41108,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "16713:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16713:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41106,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "16687:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41107,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16695:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "16687:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "16687:49:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "16654:82:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41114,
                  "nodeType": "ExpressionStatement",
                  "src": "16654:82:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41116,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "16755:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41117,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16757:26:22",
                        "memberName": "senderPostTransfer2Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40618,
                        "src": "16755:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41118,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "16785:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41119,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16787:26:22",
                          "memberName": "senderPostTransfer1Balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40616,
                          "src": "16785:28:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "expression": {
                            "id": 41120,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "16816:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41121,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16818:14:22",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40636,
                          "src": "16816:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16785:47:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "73656e6465722073686f756c64206861766520393730206c6f636b6564",
                        "id": 41123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16835:31:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f1930124a4c5987711ac5ac86bbbc19cddc3cffb21b0afae8bd4378bf0d7485",
                          "typeString": "literal_string \"sender should have 970 locked\""
                        },
                        "value": "sender should have 970 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0f1930124a4c5987711ac5ac86bbbc19cddc3cffb21b0afae8bd4378bf0d7485",
                          "typeString": "literal_string \"sender should have 970 locked\""
                        }
                      ],
                      "id": 41115,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16746:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41124,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16746:121:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41125,
                  "nodeType": "ExpressionStatement",
                  "src": "16746:121:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41127,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "16886:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41128,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "16888:28:22",
                        "memberName": "receiverPostTransfer2Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40624,
                        "src": "16886:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41129,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "16918:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41130,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16920:28:22",
                          "memberName": "receiverPostTransfer1Balance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40622,
                          "src": "16918:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 41131,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "16951:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41132,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "16953:14:22",
                          "memberName": "transferAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40636,
                          "src": "16951:16:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "16918:49:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c642068617665203230206c6f636b6564",
                        "id": 41134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16969:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5ade12f396b6e18f74048d55f48a5c06e81e59ec6071b6a2c14a560aea8f73e2",
                          "typeString": "literal_string \"receiver should have 20 locked\""
                        },
                        "value": "receiver should have 20 locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5ade12f396b6e18f74048d55f48a5c06e81e59ec6071b6a2c14a560aea8f73e2",
                          "typeString": "literal_string \"receiver should have 20 locked\""
                        }
                      ],
                      "id": 41126,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "16877:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16877:125:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41136,
                  "nodeType": "ExpressionStatement",
                  "src": "16877:125:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41137,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "17086:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17089:12:22",
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8656,
                      "src": "17086:15:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17086:17:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41141,
                  "nodeType": "ExpressionStatement",
                  "src": "17086:17:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 41147,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39944,
                            "src": "17148:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 41146,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17140:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41145,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17140:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17140:12:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 41149,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "17154:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41150,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17156:10:22",
                        "memberName": "senderLock",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40608,
                        "src": "17154:12:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 41151,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17168:8:22",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 41152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17178:5:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "hexValue": "30",
                        "id": 41153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17185:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 41142,
                        "name": "senderVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40044,
                        "src": "17113:11:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                          "typeString": "contract StakingProxyConvex"
                        }
                      },
                      "id": 41144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17125:14:22",
                      "memberName": "transferLocked",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30069,
                      "src": "17113:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                      }
                    },
                    "id": 41154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17113:74:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "id": 41155,
                  "nodeType": "ExpressionStatement",
                  "src": "17113:74:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3230",
                        "id": 41157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17295:7:22",
                        "subdenomination": "days",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1728000_by_1",
                          "typeString": "int_const 1728000"
                        },
                        "value": "20"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1728000_by_1",
                          "typeString": "int_const 1728000"
                        }
                      ],
                      "id": 41156,
                      "name": "skip",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4509,
                      "src": "17290:4:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 41158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17290:13:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41159,
                  "nodeType": "ExpressionStatement",
                  "src": "17290:13:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "534b49502046415220414845414420544f204e45572052455741524420504552494f44",
                        "id": 41163,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17326:37:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f38818094778afa177061833ac6cffdac8cd15c0d43ea8b46b9c67c3352d7696",
                          "typeString": "literal_string \"SKIP FAR AHEAD TO NEW REWARD PERIOD\""
                        },
                        "value": "SKIP FAR AHEAD TO NEW REWARD PERIOD"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f38818094778afa177061833ac6cffdac8cd15c0d43ea8b46b9c67c3352d7696",
                          "typeString": "literal_string \"SKIP FAR AHEAD TO NEW REWARD PERIOD\""
                        }
                      ],
                      "expression": {
                        "id": 41160,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "17313:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 41162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "17322:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "17313:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 41164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17313:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41165,
                  "nodeType": "ExpressionStatement",
                  "src": "17313:51:22"
                },
                {
                  "expression": {
                    "id": 41176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41166,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "17374:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41168,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17376:18:22",
                      "memberName": "senderPreTransfer3",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40620,
                      "src": "17374:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41173,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "17434:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17426:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41171,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17426:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17426:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41169,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "17397:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17405:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "17397:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41175,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17397:50:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17374:73:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41177,
                  "nodeType": "ExpressionStatement",
                  "src": "17374:73:22"
                },
                {
                  "expression": {
                    "id": 41188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41178,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "17457:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41180,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17459:20:22",
                      "memberName": "receiverPreTransfer3",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40626,
                      "src": "17457:22:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41185,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "17519:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17511:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41183,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17511:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41186,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17511:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41181,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "17482:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17490:20:22",
                        "memberName": "lockedStakesOfLength",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37840,
                        "src": "17482:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17482:52:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17457:77:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41189,
                  "nodeType": "ExpressionStatement",
                  "src": "17457:77:22"
                },
                {
                  "expression": {
                    "id": 41218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        null,
                        {
                          "expression": {
                            "id": 41190,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "17547:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41192,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "memberLocation": "17549:13:22",
                          "memberName": "receiverLock3",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40614,
                          "src": "17547:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 41193,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "17544:19:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$_t_uint256_$",
                        "typeString": "tuple(,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41198,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "17601:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17593:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41196,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17593:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17593:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "id": 41200,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "17617:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41201,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17619:10:22",
                          "memberName": "senderLock",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40608,
                          "src": "17617:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 41206,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 41202,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40642,
                                    "src": "17632:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                                      "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                    }
                                  },
                                  "id": 41203,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17634:28:22",
                                  "memberName": "senderInitialLockedLiquidity",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40594,
                                  "src": "17632:30:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "expression": {
                                    "id": 41204,
                                    "name": "t",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40642,
                                    "src": "17665:1:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                                      "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                    }
                                  },
                                  "id": 41205,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "17667:25:22",
                                  "memberName": "senderBaseLockedLiquidity",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 40590,
                                  "src": "17665:27:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "17632:60:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 41210,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "32",
                                      "id": 41207,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "17696:1:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_2_by_1",
                                        "typeString": "int_const 2"
                                      },
                                      "value": "2"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 41208,
                                        "name": "t",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40642,
                                        "src": "17700:1:22",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                        }
                                      },
                                      "id": 41209,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberLocation": "17702:14:22",
                                      "memberName": "transferAmount",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 40636,
                                      "src": "17700:16:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "17696:20:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "id": 41211,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "17695:22:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "17632:85:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 41213,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "17631:87:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "74727565",
                          "id": 41214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "17720:4:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        {
                          "expression": {
                            "id": 41215,
                            "name": "t",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40642,
                            "src": "17726:1:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                              "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                            }
                          },
                          "id": 41216,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "17728:13:22",
                          "memberName": "receiverLock2",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 40612,
                          "src": "17726:15:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 41194,
                          "name": "senderVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40044,
                          "src": "17566:11:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                            "typeString": "contract StakingProxyConvex"
                          }
                        },
                        "id": 41195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17578:14:22",
                        "memberName": "transferLocked",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 30069,
                        "src": "17566:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address,uint256,uint256,bool,uint256) external returns (uint256,uint256)"
                        }
                      },
                      "id": 41217,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17566:176:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "17544:198:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41219,
                  "nodeType": "ExpressionStatement",
                  "src": "17544:198:22"
                },
                {
                  "expression": {
                    "id": 41230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41220,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "17796:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41222,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17798:26:22",
                      "memberName": "senderPostTransfer3Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40628,
                      "src": "17796:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41227,
                              "name": "senderVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40044,
                              "src": "17861:11:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41226,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17853:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41225,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17853:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17853:20:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41223,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "17827:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41224,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17835:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "17827:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17827:47:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17796:78:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41231,
                  "nodeType": "ExpressionStatement",
                  "src": "17796:78:22"
                },
                {
                  "expression": {
                    "id": 41242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 41232,
                        "name": "t",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40642,
                        "src": "17884:1:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                          "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                        }
                      },
                      "id": 41234,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "17886:28:22",
                      "memberName": "receiverPostTransfer3Balance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40630,
                      "src": "17884:30:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 41239,
                              "name": "receiverVault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40057,
                              "src": "17951:13:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StakingProxyConvex_$30535",
                                "typeString": "contract StakingProxyConvex"
                              }
                            ],
                            "id": 41238,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17943:7:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41237,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17943:7:22",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17943:22:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 41235,
                          "name": "frxFarm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39965,
                          "src": "17917:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_FraxUnifiedFarm_ERC20_Convex_frxETH_V2_$39315",
                            "typeString": "contract FraxUnifiedFarm_ERC20_Convex_frxETH_V2"
                          }
                        },
                        "id": 41236,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17925:17:22",
                        "memberName": "lockedLiquidityOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36145,
                        "src": "17917:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 41241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17917:49:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "17884:82:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41243,
                  "nodeType": "ExpressionStatement",
                  "src": "17884:82:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41245,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "17985:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41246,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "17987:26:22",
                        "memberName": "senderPostTransfer3Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40628,
                        "src": "17985:28:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "id": 41247,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "18015:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41248,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18017:25:22",
                        "memberName": "senderBaseLockedLiquidity",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40590,
                        "src": "18015:27:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "616c6c206f662073656e6465722773206c6f636b6564206c69717569646974792073686f756c64206265206261636b20746f2062617365206c6576656c",
                        "id": 41249,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18044:63:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_201c2533a01b73b5f1d5eb4c55ec46469547c753d834e553a284c40a6a86e617",
                          "typeString": "literal_string \"all of sender's locked liquidity should be back to base level\""
                        },
                        "value": "all of sender's locked liquidity should be back to base level"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_201c2533a01b73b5f1d5eb4c55ec46469547c753d834e553a284c40a6a86e617",
                          "typeString": "literal_string \"all of sender's locked liquidity should be back to base level\""
                        }
                      ],
                      "id": 41244,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "17976:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41250,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17976:132:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41251,
                  "nodeType": "ExpressionStatement",
                  "src": "17976:132:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41253,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40642,
                          "src": "18127:1:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                            "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                          }
                        },
                        "id": 41254,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "18129:28:22",
                        "memberName": "receiverPostTransfer3Balance",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 40630,
                        "src": "18127:30:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 41255,
                                "name": "t",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40642,
                                "src": "18160:1:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                                  "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                }
                              },
                              "id": 41256,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "18162:30:22",
                              "memberName": "receiverInitialLockedLiquidity",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40596,
                              "src": "18160:32:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 41261,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 41257,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40642,
                                      "src": "18196:1:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                                        "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                      }
                                    },
                                    "id": 41258,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18198:28:22",
                                    "memberName": "senderInitialLockedLiquidity",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40594,
                                    "src": "18196:30:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 41259,
                                      "name": "t",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40642,
                                      "src": "18229:1:22",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_TestState_$40637_memory_ptr",
                                        "typeString": "struct FraxFarmERC20TransfersTest.TestState memory"
                                      }
                                    },
                                    "id": 41260,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "18231:25:22",
                                    "memberName": "senderBaseLockedLiquidity",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 40590,
                                    "src": "18229:27:22",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "18196:60:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 41262,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "18195:62:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "18160:97:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 41264,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "18159:99:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "72656365697665722073686f756c64206861766520616c6c206f662073656e6465722773206c6f636b6564",
                        "id": 41265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18260:45:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8966d505e93c0491e7fc7f0b7c9965880ff0307835d969ce81ee8d034e350db0",
                          "typeString": "literal_string \"receiver should have all of sender's locked\""
                        },
                        "value": "receiver should have all of sender's locked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8966d505e93c0491e7fc7f0b7c9965880ff0307835d969ce81ee8d034e350db0",
                          "typeString": "literal_string \"receiver should have all of sender's locked\""
                        }
                      ],
                      "id": 41252,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1971,
                        1996,
                        2009,
                        2025,
                        2067,
                        2109,
                        2151,
                        2188,
                        2225,
                        2262,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "18118:8:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 41266,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18118:188:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41267,
                  "nodeType": "ExpressionStatement",
                  "src": "18118:188:22"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 41268,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1837,
                        "src": "18317:2:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$8884",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 41270,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18320:9:22",
                      "memberName": "stopPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 8629,
                      "src": "18317:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 41271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18317:14:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41272,
                  "nodeType": "ExpressionStatement",
                  "src": "18317:14:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4532452054657374205375636365737321",
                        "id": 41276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18355:19:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        },
                        "value": "E2E Test Success!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ea48df9dd9bf9bbcf4f308dda177c9d39a97db813de5c98413c43f71203505ee",
                          "typeString": "literal_string \"E2E Test Success!\""
                        }
                      ],
                      "expression": {
                        "id": 41273,
                        "name": "console2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25013,
                        "src": "18342:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console2_$25013_$",
                          "typeString": "type(library console2)"
                        }
                      },
                      "id": 41275,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "18351:3:22",
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 17544,
                      "src": "18342:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 41277,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18342:33:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41278,
                  "nodeType": "ExpressionStatement",
                  "src": "18342:33:22"
                }
              ]
            },
            "functionSelector": "185a8d73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testEnd2End",
            "nameLocation": "11874:11:22",
            "parameters": {
              "id": 40638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11885:2:22"
            },
            "returnParameters": {
              "id": 40639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11895:0:22"
            },
            "scope": 41281,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39924,
              "name": "Test",
              "nameLocations": [
                "1543:4:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7727,
              "src": "1543:4:22"
            },
            "id": 39925,
            "nodeType": "InheritanceSpecifier",
            "src": "1543:4:22"
          }
        ],
        "canonicalName": "FraxFarmERC20TransfersTest",
        "contractDependencies": [
          30535,
          32819,
          39315,
          44965
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          41281,
          7727,
          7714,
          1841,
          7693,
          4925,
          4466,
          2991,
          2668,
          1786
        ],
        "name": "FraxFarmERC20TransfersTest",
        "nameLocation": "1513:26:22",
        "scope": 41282,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  },
  "id": 22
}